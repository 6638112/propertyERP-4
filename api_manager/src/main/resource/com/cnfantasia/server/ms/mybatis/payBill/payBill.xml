<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN:物业缴费单 t_pay_bill -->
<mapper namespace="payBill">
	<resultMap type="PayBill" id="payBillBaseMap_AppendTable">
        <result column="PBid" javaType="java.math.BigInteger" property="id"/>  <!--  -->
        <result column="PBamount" javaType="java.lang.Long" property="amount"/>  <!-- 待缴总金额 -->
        <result column="PBmonth" javaType="java.lang.String" property="month"/>  <!-- 账单对应可用的折扣月份 -->
        <result column="PBbillMonth" javaType="java.lang.String" property="billMonth"/>  <!-- 账单月份,为空则取折扣月份 -->
        <result column="PBpayTime" javaType="java.lang.String" property="payTime"/>  <!-- 付款时间 -->
        <result column="PBisPay" javaType="java.lang.Integer" property="isPay"/>  <!-- 缴费状态 -->
        <result column="PBfinanceStatus" javaType="java.lang.Integer" property="financeStatus"/>  <!-- 是否物业宝抵扣过 -->
        <result column="PBdeduPrice" javaType="java.lang.Long" property="deduPrice"/>  <!-- 物业宝抵扣金额 -->
        <result column="PBpaymentWay" javaType="java.lang.Integer" property="paymentWay"/>  <!-- 缴费方式 -->
        <result column="PBtRealRoomFId" javaType="java.math.BigInteger" property="tRealRoomFId"/>  <!-- 所属真实门牌的Id -->
        <result column="PBpropertyProprietorId" javaType="java.lang.String" property="propertyProprietorId"/>  <!-- 当前真实门牌的业主Id -->
        <result column="PBsuccPayAmount" javaType="java.lang.Long" property="succPayAmount"/>  <!-- 用户实际支付的账单金额 -->
        <result column="PBdiscount" javaType="java.lang.Double" property="discount"/>  <!-- 使用的折扣 -->
        <result column="PBprizeRecordId" javaType="java.lang.String" property="prizeRecordId"/>  <!-- 中奖记录Id -->
        <result column="PBsys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->
        <result column="PBsys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->
        <result column="PBsys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->
        <result column="PBsys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->
        <result column="PBsys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->
        <result column="PBsys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->
        <result column="PBsys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
        <result column="PBbillTimeCfgId" javaType="java.math.BigInteger" property="billTimeCfgId"/>  <!-- 所属类别缴费时间配置Id -->
        <result column="PBbillTypeId" javaType="java.math.BigInteger" property="billTypeId"/>  <!-- 基础类别信息Id -->
        <result column="PBbillTypeName" javaType="java.lang.String" property="billTypeName"/>  <!-- 费用类别名称(冗余) -->
        <result column="PBisPropFee" javaType="java.lang.Integer" property="isPropFee"/>  <!-- 是否为物业费(冗余) -->
        <result column="PBpaytimeType" javaType="java.lang.Integer" property="paytimeType"/>  <!-- 缴费时间方式 -->
        <result column="PBbillMonthSize" javaType="java.lang.Long" property="billMonthSize"/>  <!-- 账单月份跨度(冗余) -->
        <result column="PBbillMonthStart" javaType="java.lang.String" property="billMonthStart"/>  <!-- 账单开始月份(冗余) -->
        <result column="PBbillMonthEnd" javaType="java.lang.String" property="billMonthEnd"/>  <!-- 账单截止月份(冗余) -->
        <result column="PBpayDayStart" javaType="java.lang.String" property="payDayStart"/>  <!-- 缴费开始日期(冗余) -->
        <result column="PBpayDayEnd" javaType="java.lang.String" property="payDayEnd"/>  <!-- 缴费截止日期(冗余) -->
        <result column="PBhbAmount" javaType="java.lang.Long" property="hbAmount"/>  <!-- 粮票补贴 -->
        <result column="PBlastUnpaid" javaType="java.lang.Long" property="lastUnpaid"/>  <!-- 粮票补贴 -->
        <result column="PBpreferType" javaType="java.lang.Integer" property="preferType"/>  <!-- 优惠类型 -->
        <result column="PBtBillCycleId" javaType="java.math.BigInteger" property="tBillCycleId"/>  <!-- 账期管理id -->
        <result column="cycleType" javaType="java.lang.Integer" property="cycleType"/> 
        <result column="f_last_unpaid" javaType="java.lang.Long" property="lastUnpaid"/>
        <result column="tGroupBuildingBillCycleConfigFId" javaType="java.math.BigInteger" property="tGroupBuildingBillCycleConfigFId"/> 
	</resultMap>
	
	<resultMap type="com.cnfantasia.server.ms.payBill.entity.PayBillEntity"
		id="payBillEntity" extends="payBillBaseMap_AppendTable">
		<result column="groupBuildingName" javaType="java.lang.String"
			property="groupBuildingName" />
		<result column="buildingName" javaType="java.lang.String"
			property="buildingName" />
		<result column="realRoomUnitName" javaType="java.lang.String"
			property="realRoomUnitName" />
		<result column="realRoomNum" javaType="java.lang.String"
			property="realRoomNum" />
		<result column="propertyProprietorName" javaType="java.lang.String"
			property="propertyProprietorName" />
		<result column="identifyNo" javaType="java.lang.String"
			property="identifyNo" />
		<result column="payPeriodStart" javaType="int" property="payPeriodStart" />
		<result column="payPeriodEnd" javaType="int" property="payPeriodEnd" />
		<result column="updateUserName" javaType="java.lang.String"
			property="updateUserName" />
		<result column="contractNum" javaType="java.lang.String"
			property="contractNum" />
		<result column="pcName" javaType="java.lang.String" property="pcName" />
		<result column="orderNo" javaType="java.lang.String" property="orderNo" />
		<result column="payMethod" javaType="int" property="payMethod" />
		<result column="ext_tkStatus_wy" javaType="int" property="tkStatus_wy" />
		<result column="ext_payFlowNo" javaType="java.lang.String" property="payFlowNo" />
		<result column="buyerId" javaType="long" property="buyerId" />
		<result column="preferType" javaType="int" property="preferType" />
		<result column="PBhbAmount" javaType="long" property="hbAmount" />
		<result column="cardSubsidyAmt" javaType="double" property="cardSubsidyAmt"/>
		<result column="cardRealPayAmt" javaType="double" property="cardRealPayAmt"/>
		<result column="cardOrderNo" javaType="string" property="cardOrderNo"/>
		<result column="payUserName" javaType="java.lang.String" property="payUserName" />
		<result column="amountBigDecimal" javaType="java.math.BigDecimal" property="amountBigDecimal" />
		<result column="collectArrears" javaType="int" property="collectArrears" />
		<result column="isUnpaidFee" javaType="java.lang.Boolean" property="isUnpaidFee" />
		<result column="lastUnpaids" javaType="java.lang.Long" property="lastUnpaids" />
	</resultMap>

	<!-- 导入导出账单 对应的类型 -->
	<resultMap
		type="com.cnfantasia.server.ms.payBill.entity.PayBillWithFeeDetailEntity"
		id="payBillWithFeeDetailEntity" extends="payBillEntity">
		<collection property="propertyFeeDetails"
			resultMap="propertyFeeDetailBase.propertyFeeDetailBaseMap_AppendTable" />
	</resultMap>

	<!-- 楼栋 -->
	<resultMap type="com.cnfantasia.server.api.room.entity.BuildingEntity"
		id="buildingMap_Search" extends="buildingBase.buildingBaseMap_AppendTable">
		<association property="groupBuildingEntity" resultMap="groupBuildingMap_Search"
			javaType="com.cnfantasia.server.api.room.entity.GroupBuildingEntity" />
	</resultMap>

	<!-- 真实门牌 -->
	<resultMap type="com.cnfantasia.server.api.room.entity.RealRoomEntity"
		id="realRoomMap_Search" extends="realRoomBase.realRoomBaseMap_AppendTable">
		<association property="buildingEntity" resultMap="buildingMap_Search"
			javaType="com.cnfantasia.server.api.room.entity.BuildingEntity" />
		<association property="propertyProprietor"
			resultMap="propertyProprietorBase.propertyProprietorBaseMap_AppendTable" />
	</resultMap>

	<resultMap
		type="com.cnfantasia.server.api.plotproperty.entity.PayBillEntity" id="payBillEntity_With_RealRoom"
		extends="payBillBase.payBillBaseMap_AppendTable">
		<association property="realRoomEntity" resultMap="realRoomMap_Search" />
		<collection property="propertyFeeDetailList"
			resultMap="propertyFeeDetailBase.propertyFeeDetailBaseMap_AppendTable" />
	</resultMap>

	<!-- 小区 -->
	<resultMap type="com.cnfantasia.server.api.room.entity.GroupBuildingEntity"
		id="groupBuildingMap_Search" extends="groupBuildingBase.groupBuildingBaseMap_AppendTable">
		<result column="ext_haveSupport" javaType="java.lang.Integer"
			property="haveSupport" /><!-- 当前用户是否已点支持 -->
		<result column="ext_haveSummon" javaType="java.lang.Integer"
			property="haveSummon" /><!-- 当前用户是否已点召唤 -->
		<result column="ext_totalSupportCount" javaType="java.lang.Integer"
			property="totalSupportCount" /><!-- 当前总支持人数 -->
		<association property="addressBlockEntity" resultMap="addressBlockMap_Search"
			javaType="com.cnfantasia.server.api.room.entity.AddressBlockEntity" />
		<association property="propertyManagementEntity"
			resultMap="propertyManagementEntity_Map_Append" />
	</resultMap>

	<!-- 区 -->
	<resultMap type="com.cnfantasia.server.api.room.entity.AddressBlockEntity"
		id="addressBlockMap_Search" extends="addressBlockBase.addressBlockBaseMap_AppendTable">
		<!-- resultMap 此处只能引用addressCityMap_Search，不能直接写addressCityBase.addressCityBaseMap_AppendTable? -->
		<association property="addressCityEntity" resultMap="addressCityMap_Search"
			javaType="com.cnfantasia.server.api.room.entity.AddressCityEntity" />
	</resultMap>

	<!-- 市 -->
	<resultMap type="com.cnfantasia.server.api.room.entity.AddressCityEntity"
		id="addressCityMap_Search" extends="addressCityBase.addressCityBaseMap_AppendTable">
		<association property="addressProvinceEntity" resultMap="addressProvinceMap_Search"
			javaType="com.cnfantasia.server.api.room.entity.AddressProvinceEntity" />
	</resultMap>
	<!-- 省 -->
	<resultMap
		type="com.cnfantasia.server.api.room.entity.AddressProvinceEntity" id="addressProvinceMap_Search"
		extends="addressProvinceBase.addressProvinceBaseMap_AppendTable">
	</resultMap>

	<!-- 物业管理处 -->
	<resultMap
		type="com.cnfantasia.server.api.room.entity.PropertyManagementEntity"
		id="propertyManagementEntity_Map_Append" extends="propertyManagementBase.propertyManagementBaseMap_AppendTable">
	</resultMap>

	<resultMap type="com.cnfantasia.server.ms.payBill.entity.BillMrDetail" id="billMrDetailMap">
		<id column="name" javaType="java.lang.String" property="name" />
		<result column="totalPrice" javaType="java.math.BigDecimal" property="totalPrice" />
		<result column="signalPrice" javaType="java.math.BigDecimal" property="signalPrice" />
		<result column="priceUnitValue" javaType="java.math.BigDecimal" property="priceUnitValue" />
		<result column="startValue" javaType="java.lang.String" property="startValue" />
		<result column="endValue" javaType="java.lang.String" property="endValue"/>
		<result column="propertyFeeDetailId" javaType="java.math.BigInteger" property="propertyFeeDetailId" />
		<result column="type" javaType="java.lang.Integer" property="type" />
		<result column="signalPriceStr" javaType="java.lang.String" property="signalPriceStr" />
	</resultMap>

	<!--导出账单V501-->
	<resultMap type="com.cnfantasia.server.ms.payBill.entity.PayBillPeriod4Export" id="PayBillPeriod4Export">
		<result column="id" javaType="java.math.BigInteger" property="id" />
		<result column="gbId" javaType="java.math.BigInteger" property="gbId" />
		<result column="billMonthStart" javaType="java.lang.String" property="billMonthStart" />
		<result column="billMonthEnd" javaType="java.lang.String" property="billMonthEnd" />
		<result column="billTypeName" javaType="java.lang.String" property="billTypeName" />
		<result column="payDayStart" javaType="java.lang.String" property="payDayStart" />
		<result column="payDayEnd" javaType="java.lang.String" property="payDayEnd" />
		<result column="gbName" javaType="java.lang.String" property="gbName" />
		<result column="bName" javaType="java.lang.String" property="bName" />
		<result column="unitName" javaType="java.lang.String" property="unitName" />
		<result column="rrNum" javaType="java.lang.String" property="rrNum" />
		<result column="ppName" javaType="java.lang.String" property="ppName" />
		<result column="succPayAmount" javaType="java.math.BigDecimal" property="succPayAmount" />
		<result column="pbAmount" javaType="java.math.BigDecimal" property="pbAmount" />
		<result column="pbSubSidyAmount" javaType="java.math.BigDecimal" property="pbSubSidyAmount" />
		<result column="deduPrice" javaType="java.math.BigDecimal" property="deduPrice" />
		<result column="pbPayTime" javaType="java.lang.String" property="pbPayTime" />
		<result column="orderNo" javaType="java.lang.String" property="orderNo" />
		<result column="payMethod" javaType="java.lang.Integer" property="payMethod" />
		<result column="paymentWay" javaType="java.lang.Integer" property="paymentWay" />
		<result column="cycleType" javaType="java.lang.Integer" property="cycleType" />
		<result column="lastUnpaid" javaType="java.lang.Long" property="lastUnpaid" />
		<result column="PBisPay" javaType="java.lang.Integer" property="isPay"/>  <!-- 缴费状态 -->
		<result column="PBfinanceStatus" javaType="java.lang.Integer" property="financeStatus"/>  <!-- 是否物业宝抵扣过 -->
		<collection property="feeDetailList" resultMap="propertyFeeDetailMap_AppendTable"/>
	</resultMap>

	<resultMap id="propertyFeeDetailMap_AppendTable" type="com.cnfantasia.server.ms.payBill.entity.PropertyFeeDetail4Export" extends="propertyFeeDetailBase.propertyFeeDetailBaseMap_AppendTable">
		<result column="startValue" javaType="java.lang.String" property="startValue" />
		<result column="endValue" javaType="java.lang.String" property="endValue"/>
		<result column="dosageValue" javaType="java.math.BigDecimal" property="dosageValue" />
	</resultMap>

	<sql id="select_payBill_for_list">
		select distinct GB.f_name groupBuildingName, B.f_name buildingName,GB.f_id groupBuildingId,
		RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo, GB.f_pay_period_start payPeriodStart,
		GB.f_pay_period_end payPeriodEnd, PC.f_name pcName, 
		eo.f_buyer_id buyerId, PB.f_bill_type_name billTypeName, date_format(PB.f_bill_month_start,'%Y年%m月') billMonthStart, date_format(PB.f_bill_month_end,'%Y年%m月') billMonthEnd,

		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,PB.f_amount as PBamount,
		date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice, PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,
		<!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
		IFNULL(if(PB.f_payment_way = 3, 
		  (SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0), 
		  PB.f_succ_pay_amount), 0)as	PBsuccPayAmount,
		PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(PB.f_sys0_upd_time,'%Y-%m-%d %T') as
		PBsys0UpdTime,PB.f_sys0_upd_user PBsys0UpdUser,
		
		date_format(PB.f_pay_time,'%Y-%m-%d %T') as PBpayTime
		
		<if test="isRevenue == true ">
		,(
			SELECT IFNULL(RSA.f_tk_status,-1)
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
		)AS ext_tkStatus_wy
		,(
			SELECT IFNULL(RSA.f_pay_flow_no,'')
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
		)AS ext_payFlowNo
		</if>
		,eo.f_pay_method payMethod
		,PB.f_hb_amount AS PBhbAmount, PB.f_paytime_type AS paytimeType, PB.f_cycle_type AS cycleType,
		PB.f_bill_month_size AS billMonthSize,
		(
			SELECT SUM(
						CASE
							WHEN (pb1.f_is_pay = 2 AND (pb1.f_finance_status != 1 OR ISNULL(pb1.f_finance_status) OR pb1.f_finance_status='')) THEN pb1.f_amount/*不包含部分已缴的*/
							WHEN (pb1.f_is_pay = 2 AND pb1.f_finance_status = 1) THEN (pb1.f_amount - pb1.f_dedu_price)/*部分已缴的取未抵扣金额*/
							ELSE
							0
						END
					)
			FROM t_property_fee_detail_unpaid pfdu
			INNER JOIN t_pay_bill pb1 ON pb1.f_id = pfdu.t_unpaid_pay_bill_id
			WHERE pfdu.t_pay_bill_id = PB.f_id AND pb1.f_sys0_del_state=0
		) AS lastUnpaids, /*欠费金额查询*/
		(CASE WHEN ( gbbc.f_is_collect_arrears = 2
						AND date_format(gbbc.f_bill_pay_start,'%Y-%m-%d') &lt;= date_format(NOW(),'%Y-%m-%d')
						AND date_format(gbbc.f_bill_pay_end,'%Y-%m-%d') &gt;= date_format(NOW(),'%Y-%m-%d')
					)
			THEN TRUE
			ELSE FALSE
			END
		) AS isUnpaidFee, PB.t_group_building_bill_cycle_config_f_id tGroupBuildingBillCycleConfigFId
	</sql>
	
	<!-- 根据物业公司用户Id，找 所管辖小区的账单信息-->
	<select id="select_payBill_byOmsUserId" parameterType="java.util.Map"
		resultMap="payBillEntity">
		<choose>
			<when test="feeType != null and feeType != '' and feetype != 4">/*查询子账单 v350 排除选择周期*/
				<include refid="select_payBill_for_list_forChild" />
				<include refid="select_payBill_for_list_from_noRepeat_forChild" />
			</when>
			<otherwise>
				<include refid="select_payBill_for_list" />/*总账单 V350以前*/
				<include refid="select_payBill_for_list_from_noRepeat" />
			</otherwise>
		</choose>
		order by PB.f_pay_time desc, B.f_name_char_order, B.f_name_digit_order+0, RR.f_unit_name,RR.f_num_tail_digit_order+0, RR.f_num_tail_char_order,
		PB.f_bill_month_start DESC
		<if test="_begin != null and _length != '' "><![CDATA[ LIMIT #{_begin},#{_length} ]]>
		</if>
	</select>

	<!-- 根据物业公司用户Id，找 所管辖小区的账单信息__总数 -->
	<select id="select_payBill_byOmsUserId_forCount" parameterType="java.util.Map"
		resultMap="payBillEntity">
		<choose>
			<when test="feeType != null and feeType != '' and feeType!=4">/*查询子账单 v350*/
				<include refid="select_payBill_for_list_forChild" />
				<include refid="select_payBill_for_list_from_noRepeat_forChild" />
			</when>
			<otherwise>/*总账单 V350以前*/
				<include refid="select_payBill_for_list" />
				<include refid="select_payBill_for_list_from_noRepeat" />
			</otherwise>
		</choose>
	</select>
	
	<!-- 查询总额 -->
	<resultMap type="com.cnfantasia.server.ms.payBill.entity.PayBillTotalData" id="payBillTotalData_Map">
		<id column="ext_amountTotal" javaType="java.lang.Long" property="amountTotal"/>
		<id column="ext_succPayAmountTotal" javaType="java.lang.Long" property="succPayAmountTotal"/>
		<id column="deduPriceTotal" javaType="java.lang.Long" property="deduPriceTotal"/>
	</resultMap>
	<select id="select_Total_Data" parameterType="java.util.Map" resultMap="payBillTotalData_Map">
		SELECT 
			SUM(PB.f_amount) AS ext_amountTotal,
			SUM(IFNULL(if(PB.f_payment_way = 3, 
				  (SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0), 
				  PB.f_succ_pay_amount), 0)) AS ext_succPayAmountTotal,
			SUM(PB.f_dedu_price) AS deduPriceTotal
		<include refid="select_payBill_for_list_from_noRepeat" />
	</select>
	<!-- step1 校验导入的账单是否正确，传导出数据的《小区+楼栋+单元+房间号》拼成一个大串《小区+楼栋+单元+房间号》返回 -->
	<select id="select_verifyInfo_for_ImportedPayBill_step1"
		parameterType="java.util.ArrayList" resultType="string">
		select
		concat(GB.f_name,'_',B.f_name,'_',IFNULL(RR.f_unit_name,''),'_',
		RR.f_num_tail)
		FROM t_property_proprietor PP
		inner join t_real_room RR on RR.t_property_proprietor_f_id = PP.f_id and RR.f_sys0_del_state=0
		inner join t_building B on B.F_id = RR.t_building_f_id and B.f_sys0_del_state=0
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id and GB.f_sys0_del_state=0
		WHERE PP.f_sys0_del_state=0
		and concat(GB.f_name,'_',B.f_name,'_',IFNULL(RR.f_unit_name,''),'_',
		RR.f_num_tail)
		in (
		<foreach item="guard" index="index" collection="list"
			separator=","> #{guard} </foreach>
		)
	</select>

	<!-- step2 校验导入的账单是否已存在，传导出数据的《小区+楼栋+单元+房间号》拼成一个大串《账单年月+小区+楼栋+单元+房间号》返回 -->
	<select id="select_verifyInfo_for_ImportedPayBill_step2"
		parameterType="java.util.ArrayList" resultType="string">
		select DISTINCT concat(year(case when NOT ISNULL(PB.f_bill_month) THEN
		PB.f_bill_month ELSE PB.f_month END), month(case when NOT
		ISNULL(PB.f_bill_month) THEN PB.f_bill_month ELSE PB.f_month END),
		GB.f_name, "_", B.f_name, "_", IFNULL(RR.f_unit_name,''), "_",RR.f_num_tail)
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id =
		PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		WHERE 1=1
		<!-- and concat(year(PB.f_month), month(PB.f_month), GB.f_name, B.f_name,RR.f_unit_name,RR.f_num_tail,PP.f_name) -->
		and concat(year(case when NOT ISNULL(PB.f_bill_month) THEN
		PB.f_bill_month ELSE PB.f_month END), month(case when NOT
		ISNULL(PB.f_bill_month) THEN PB.f_bill_month ELSE PB.f_month END),
		GB.f_name, "_", B.f_name, "_", IFNULL(RR.f_unit_name,''), "_",RR.f_num_tail)
		in (
		<foreach item="guard" index="index" collection="list"
			separator=","> #{guard} </foreach>
		)
		AND PB.f_sys0_del_state = 0
	</select>

	<!-- step2 校验导入的账单(周期)是否已存在，传导出数据的《小区+楼栋+单元+房间号》拼成一个大串《账单开始截止日期+小区+楼栋+单元+房间号》返回 -->
	<select id="select_verifyInfo_for_ImportedPayBill_period_step2"
		parameterType="java.util.ArrayList" resultType="string">
		select DISTINCT concat(PB.f_bill_type_name, case when NOT ISNULL(PB.f_bill_month_start) THEN
		PB.f_bill_month_start ELSE '' END, case when NOT ISNULL(PB.f_bill_month_end) THEN
		PB.f_bill_month_end ELSE '' END,
		GB.f_name, "_", B.f_name, "_", IFNULL(RR.f_unit_name,''), "_", RR.f_num_tail)
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id =
		PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		WHERE 1=1
		and concat(PB.f_bill_type_name,case when NOT ISNULL(PB.f_bill_month_start) THEN
		PB.f_bill_month_start ELSE '' END, case when NOT
		ISNULL(PB.f_bill_month_end) THEN PB.f_bill_month_end ELSE '' END,
		GB.f_name, "_", B.f_name, "_", IFNULL(RR.f_unit_name,''), "_",RR.f_num_tail)
		in (
		<foreach item="guard" index="index" collection="list"
			separator=","> #{guard} </foreach>
		)
		AND PB.f_sys0_del_state = 0
	</select>

	<!--step3 对校验通过的账单，找到其对应的rrid和ppid，传导出数据的《小区+楼栋+单元+房间号》拼成一个大串《小区+楼栋+单元+房间号+业主名称+“_”+房间ID+“_”+业主ID 
		+“_”+物业账单提前月份数 》返回 -->
	<select id="select_verifyInfo_for_ImportedPayBill_step3"
		parameterType="java.util.ArrayList" resultType="string">
		select
		concat(GB.f_name,'_',B.f_name,'_',IFNULL(RR.f_unit_name,''),'_',
		RR.f_num_tail, "_", RR.f_id, "_", PP.f_id, "_", case when not
		ISNULL(GB.f_property_month_change) then GB.f_property_month_change
		else 0 end)
		FROM t_property_proprietor PP
		inner join t_real_room RR on RR.t_property_proprietor_f_id = PP.f_id and RR.f_sys0_del_state=0
		inner join t_building B on B.F_id = RR.t_building_f_id and B.f_sys0_del_state=0
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id and GB.f_sys0_del_state=0
		WHERE PP.f_sys0_del_state=0
		and concat(GB.f_name,'_',B.f_name,'_',IFNULL(RR.f_unit_name,''),'_',
		RR.f_num_tail)
		in (
		<foreach item="guard" index="index" collection="list"
			separator=","> #{guard} </foreach>
		)
	</select>
	
	<!-- 导出周期账单 -->
	<select id="select_paybill_period_for_export" parameterType="java.util.Map" resultMap="PayBillPeriod4Export">
		SELECT distinct
		    DATE_FORMAT(pb.f_bill_month_start, '%Y年%m月') billMonthStart,
		    DATE_FORMAT(pb.f_bill_month_end, '%Y年%m月') billMonthEnd,
		    pb.f_bill_type_name billTypeName,
		    DATE_FORMAT(pb.f_pay_day_start, '%Y年%m月%d日') payDayStart,
		    DATE_FORMAT(pb.f_pay_day_end, '%Y年%m月%d日') payDayEnd,
		    gb.f_name gbName,
		    b.f_name bName,
		    rr.f_unit_name unitName,
		    rr.f_num_tail rrNum,
		    pp.f_name ppName,
		    pb.f_dedu_price/100 deduPrice,
		    <!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
			IFNULL(if(PB.f_payment_way = 3, 
			  (SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=pb.f_id AND _pcd.f_sys0_del_state = 0), 
			  pb.f_succ_pay_amount)/100, 0) as	succPayAmount,
		    pb.f_amount / 100 pbAmount,
		    DATE_FORMAT(IFNULL(pb.f_pay_time, pb.f_sys0_upd_time), '%Y-%m-%d %T') pbPayTime,
		    (IFNULL(if(PB.f_payment_way = 3, 
			  			(SELECT sum(ifnull(_pcd.f_ptbt_amt, 0)) FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=pb.f_id AND _pcd.f_sys0_del_state = 0), 
			  			0), 
			  		0) + IFNULL(PB.f_hb_amount, 0)) / 100 pbSubSidyAmount,
		    IF(tmp.f_pay_status = 2,tmp.f_order_no,'') orderNo, <!-- 只有支付成功后的才需要显示商户订单号 -->
			tmp.f_pay_method payMethod,
		    pb.f_payment_way paymentWay,
		    pb.f_cycle_type AS cycleType,
			pb.f_id AS id,
			gb.f_id AS gbId,
			/*费用明细*/
			<include refid="propertyFeeDetailBase.queryHead_AppendTable"/>,
		/*抄表收费信息*/
		(MPBR.f_end_value-MPBR.f_start_value) dosageValue,/*用量*/
		MPBR.f_start_value startValue,
		MPBR.f_end_value endValue,
		pb.f_last_unpaid AS lastUnpaid,pb.f_is_pay AS PBisPay, pb.f_finance_status AS PBfinanceStatus
		FROM
		t_pay_bill pb
		JOIN
		t_real_room rr ON rr.f_id = pb.t_real_room_f_id
		JOIN
		t_building b ON b.f_id = rr.t_building_f_id
		JOIN
		t_group_building gb ON gb.f_id = b.t_group_building_f_id
		JOIN
		t_property_proprietor pp ON pp.f_id = pb.f_property_proprietor_id
		LEFT JOIN
		( SELECT eo.f_pay_method,eo.f_pay_status,eo.f_order_no,eohtpb.t_pay_bill_f_id FROM t_ebuy_order_has_t_pay_bill eohtpb
				INNER JOIN
			t_ebuy_order eo ON eohtpb.t_ebuy_order_f_id = eo.f_id and eo.f_sys0_del_state = 0 and eo.f_pay_status = 2<!-- 只要已支付的订单，其它状态无意义 -->
			AND eohtpb.f_sys0_del_state = 0
		) AS tmp ON tmp.t_pay_bill_f_id = pb.f_id
		INNER JOIN
		t_property_fee_detail pfd ON pfd.t_pay_bill_f_id = pb.f_id AND pfd.f_sys0_del_state=0
		LEFT JOIN t_mr_pay_bill_record MPBR ON pfd.f_id = MPBR.t_property_fee_detail_f_id AND MPBR.f_sys0_del_state=0
		WHERE 1=1
		/*pb.f_paytime_type = 2 v501不区分是周期还是月度*/
		<!--
        and ((pb.f_payment_way = 1 and EO.f_pay_status = 2)
            or pb.f_payment_way = 3)  --><!-- 加上eo.f_pay_status = 2，因为代扣卡划扣是没有商户订单号的 -->
			and pb.f_id in (
				SELECT t_unpaid_pay_bill_id FROM t_property_fee_detail_unpaid WHERE t_pay_bill_id in(
				<foreach item="item" index="index" collection="payBillIdList"
					separator=","> #{item} </foreach>)
			)
			OR pb.f_id in (
				<foreach item="item" index="index" collection="payBillIdList" separator=",">#{item} </foreach>
			)
			
			ORDER BY GB.f_id desc, B.f_name_char_order,B.f_name_digit_order+0, RR.f_unit_name, RR.f_num_tail_char_order, RR.f_num_tail_digit_order+0, pb.f_bill_month_start ASC
	</select>

	<!-- 导出月度账单 -->
	<select id="select_paybill_for_export" parameterType="java.util.Map"
		resultMap="payBillWithFeeDetailEntity">
		select distinct GB.f_name groupBuildingName, B.f_name buildingName,
		RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo,
		GB.f_pay_period_start payPeriodStart, GB.f_pay_period_end payPeriodEnd,
		date_format(PB.f_bill_month_start,'%Y年%m月') PBbillMonthStart,
		date_format(PB.f_bill_month_end,'%Y年%m月') PBbillMonthEnd,
		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,PB.f_amount as PBamount,date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice,PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,
		<!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
		IFNULL(if(PB.f_payment_way = 3, 
		  (SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0), 
		  PB.f_succ_pay_amount), 0)as	PBsuccPayAmount,
		PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(PB.f_sys0_upd_time,'%Y-%m-%d %T') as
		PBsys0UpdTime, PB.f_payment_way PBpaymentWay
		<if test="isRevenue == true ">
		,(
			SELECT IFNULL(RSA.f_tk_status,-1)
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = 5 AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
		)AS ext_tkStatus_wy
		,(
			SELECT IFNULL(RSA.f_pay_flow_no,'')
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
		)AS ext_payFlowNo
		</if>
		
		,<include refid="propertyFeeDetailBase.queryHead_AppendTable" />
		,EO.f_order_no orderNo
		,EO.f_pay_method payMethod
		,PB.f_is_prop_fee PBisPropFee
		,(SELECT SUM(IFNULL(pcdd.f_ptbt_amt, 0)) FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id)/100.0 cardSubsidyAmt
		,(SELECT SUM(IFNULL(pcdd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id)/100.0 cardRealPayAmt
		,(SELECT f_order_no FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id LIMIT 1) cardOrderNo
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id = PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		inner join t_property_fee_detail PFD on PFD.t_pay_bill_f_id = PB.f_id

		left join t_ebuy_order_has_t_pay_bill EOHTPB on EOHTPB.t_pay_bill_f_id =PB.f_id
		left join t_ebuy_order EO on EOHTPB.t_ebuy_order_f_id = EO.f_id and EO.f_pay_status = 2 <!--EO.f_pay_status = 2，即 导出时未支付成功的没有商户订单号 -->
		
		WHERE 1=1
		<choose>
			<when test="isPay != null and isPay=='2'.toString() and financeStatus != null and financeStatus=='1'.toString()"><!-- 部分已缴 -->
				AND PB.f_finance_status = 1 AND PB.f_is_pay = 2
			</when>
			<when test="isPay != null and isPay=='1'.toString()"><!--已缴 -->
				AND PB.f_is_pay = 1
				AND (
					PB.f_finance_status = 1
					OR PB.f_payment_way = 3
					OR EO.f_pay_status = 2
				) 
			</when>
			<!-- 
			<otherwise> 
				AND (
					(
						PB.f_is_pay = 1
						AND (
							PB.f_finance_status = 1
							OR PB.f_payment_way = 3
							OR EO.f_pay_status = 2
						)
					)
					OR (PB.f_finance_status = 1 AND PB.f_is_pay = 2)
				)
			</otherwise>
			 -->
		</choose>	
		
		AND PB.f_id IN (
		<foreach item="item" index="index" collection="payBillIdList"
			separator=","> #{item} </foreach>
		)
		ORDER BY PB.f_bill_month, GB.f_id desc, B.f_name_char_order,B.f_name_digit_order+0, RR.f_unit_name, RR.f_num_tail_char_order, RR.f_num_tail_digit_order+0, PB.f_id, PFD.f_type
	</select>
	
	<!-- 导物业代收账单 -->
	<select id="select_paybill_for_export_wy" parameterType="java.util.Map"
		resultMap="payBillWithFeeDetailEntity">
		select GB.f_name groupBuildingName, B.f_name buildingName,
		RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo,
		GB.f_pay_period_start payPeriodStart, GB.f_pay_period_end payPeriodEnd,
		date_format(PB.f_bill_month_start,'%Y年%m月') PBbillMonthStart,
		date_format(PB.f_bill_month_end,'%Y年%m月') PBbillMonthEnd,
		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,PB.f_amount as PBamount,date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice,PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,PB.f_succ_pay_amount as
		PBsuccPayAmount,PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(IFNULL(PB.f_pay_time,PB.f_sys0_upd_time),'%Y-%m-%d %T') as
		PBsys0UpdTime, PB.f_payment_way PBpaymentWay, PB.f_paytime_type as PBpaytimeType, PB.f_is_prop_fee AS PBisPropFee, PB.f_last_unpaid AS PBlastUnpaid
		<if test="isRevenue == true ">
		,(
			SELECT IFNULL(RSA.f_tk_status,-1)
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = 5 AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
		)AS ext_tkStatus_wy
		,(
			SELECT IFNULL(RSA.f_pay_flow_no,'')
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = 5 AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
		)AS ext_payFlowNo
		</if>
		
		,<include refid="propertyFeeDetailBase.queryHead_AppendTable" />
		,IF(EO.f_pay_status = 2,EO.f_order_no,'') orderNo <!-- 只有支付成功后的才需要显示商户订单号 -->
		,EO.f_pay_method payMethod
		,(SELECT SUM(IFNULL(pcdd.f_ptbt_amt, 0)) FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id)/100.0 cardSubsidyAmt
		,(SELECT SUM(IFNULL(pcdd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id)/100.0 cardRealPayAmt
		,(SELECT f_order_no FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id LIMIT 1) cardOrderNo
		
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id = PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		inner join t_property_fee_detail PFD on PFD.t_pay_bill_f_id = PB.f_id

		left join t_ebuy_order_has_t_pay_bill EOHTPB on EOHTPB.t_pay_bill_f_id =PB.f_id and EOHTPB.f_sys0_del_state = 0
		left join t_ebuy_order EO on EOHTPB.t_ebuy_order_f_id = EO.f_id and EO.f_sys0_del_state = 0
		left join t_ebuy_pay_record EPR on EPR.t_ebuy_order_f_id = EO.f_id and EPR.f_sys0_del_state = 0
		
		WHERE 1=1
		and ((EO.f_pay_status = 2 and PB.f_payment_way = 1) <!-- 只取支付成功的，避免前边两支付宝支付失败，后一次是微信成功的  Added by Wenfq 2015-11-07 -->
		 		or PB.f_finance_status = 1<!-- '是否物业宝抵扣过=={"0":"未抵扣","1":"已抵扣"}' -->
		 		or PB.f_payment_way = 3 <!-- '缴费方式=={"1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"}' -->)
		and PB.f_id in (
		<foreach item="item" index="index" collection="payBillIdList"
			separator=","> ${item} </foreach>
		)  ORDER BY GB.f_name, B.f_name_char_order,B.f_name_digit_order+0, RR.f_unit_name, RR.f_num_tail_char_order, RR.f_num_tail_digit_order+0, PB.f_bill_type_id, PB.f_id, PFDtype ASC;
	</select>

	<!-- 查看单条账单详情 -->
	<select id="select_paybill_for_detail" parameterType="java.util.Map"
			resultMap="payBillWithFeeDetailEntity">
		select GB.f_name groupBuildingName, B.f_name buildingName,
		RR.f_unit_name realRoomUnitName, 
		concat(GB.f_name, '  ',B.f_name, '-', IF(RR.f_unit_name is null,'', concat(RR.f_unit_name, '-')), RR.f_num_tail) realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo,
		GB.f_pay_period_start payPeriodStart, GB.f_pay_period_end payPeriodEnd,
		OU.f_real_name updateUserName,

		<if test="isPay != null and isPay == 1">
			u.f_real_name payUserName,
			tmp.f_buyer_id buyerId,
		</if>

		PB.f_prefer_type preferType,

		<include refid="propertyFeeDetailBase.queryHead_AppendTable" />	,
		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,PB.f_amount as PBamount,date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice,PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,
		<!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
		IFNULL(if(PB.f_payment_way = 3,
		(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0),
		PB.f_succ_pay_amount), 0)as	PBsuccPayAmount,
		PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(PB.f_sys0_upd_time,'%Y-%m-%d %T') as
		PBsys0UpdTime, PB.f_bill_type_name PBbillTypeName,
		PB.f_paytime_type PBpaytimeType,
		date_format(PB.f_bill_month_start,'%Y年%m月') PBbillMonthStart,
		date_format(PB.f_bill_month_end,'%Y年%m月') PBbillMonthEnd,
		date_format(PB.f_pay_day_start,'%Y年%m月%d日') PBpayDayStart,
		date_format(PB.f_pay_day_end,'%Y年%m月%d日') PBpayDayEnd,
		PB.f_hb_amount PBhbAmount,PB.f_sys0_upd_user PBsys0UpdUser,
		PB.f_bill_month_size PBbillMonthSize, PB.f_cycle_type AS cycleType,
		PB.f_last_unpaid,
		gbbc.f_is_collect_arrears AS collectArrears,
		(
			CASE WHEN ISNULL(pfdu.f_id)
			THEN FALSE
			ELSE
				CASE WHEN (date_format(gbbc.f_bill_pay_start,'%Y-%m-%d') &lt;= date_format(NOW(),'%Y-%m-%d') AND date_format(gbbc.f_bill_pay_end,'%Y-%m-%d') &gt;= date_format(NOW(),'%Y-%m-%d'))
				THEN TRUE ELSE FALSE END
			END
		) AS isUnpaidFee
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id =PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		inner join t_property_fee_detail PFD on PFD.t_pay_bill_f_id = PB.f_id AND PFD.f_sys0_del_state = 0
		left join t_oms_user OU on OU.f_id = PB.f_sys0_upd_user
		LEFT JOIN t_group_building_bill_cycle gbbc ON gbbc.f_id = PB.t_bill_cycle_id
		LEFT JOIN t_property_fee_detail_unpaid pfdu ON  pfdu.t_pay_bill_id = PB.f_id
		<if test="isPay != null and isPay == 1">
		left join (
				SELECT eohpb.t_pay_bill_f_id,eo.f_buyer_id FROM t_ebuy_order_has_t_pay_bill eohpb
				INNER JOIN t_ebuy_order eo on eo.f_id  = eohpb.t_ebuy_order_f_id and eo.f_pay_status = 2 and eo.f_sys0_del_state = 0
			)tmp ON tmp.t_pay_bill_f_id = PB.f_id
			LEFT JOIN t_user u on u.f_id = tmp.f_buyer_id
		</if>
		WHERE 1=1
		and PB.f_id = #{id}
	</select>
	
	<!-- 账单详情页-抄水表数据 -->
	<select id="select_bill_detail_with_mr" parameterType="java.math.BigInteger" resultMap="billMrDetailMap">
		SELECT
			PFD.f_total_price totalPrice,
			PFD.f_name name,
			PFD.f_signal_price signalPrice,
			(MPBR.f_end_value-MPBR.f_start_value)*IF(IFNULL(PFD.f_multiplier_times, 1.0) > 0, IFNULL(PFD.f_multiplier_times, 1.0), 1.0) priceUnitValue,
			MPBR.f_start_value startValue,
			MPBR.f_end_value endValue,
			PFD.f_id propertyFeeDetailId,
			PFD.f_type type,
			PFD.f_mr_name AS mrName,
			PFD.f_signal_price_str AS signalPriceStr
		FROM
			t_property_fee_detail PFD
			LEFT JOIN t_mr_pay_bill_record MPBR ON PFD.f_id = MPBR.t_property_fee_detail_f_id
		WHERE
			PFD.t_pay_bill_f_id=#{payBillId}
		AND f_fee_type = 1
		AND PFD.f_sys0_del_state = 0
	</select>

	<!-- 查看账单支付详情 -->
	<select id="select_payBill_with_payRecord" parameterType="java.lang.String"
		resultType="java.util.HashMap">
		select U.f_real_name userName, EPR.f_pay_status payStatus,
		EPR.f_pay_method payMethod, EPR.f_flow_no flowNo,
		date_format(EPR.f_sys0_add_time,'%Y-%m-%d %T') payTime,
		eo.f_buyer_id buyerId
		FROM t_pay_bill
		PB
		inner join t_ebuy_order_has_t_pay_bill EOHTPB on EOHTPB.t_pay_bill_f_id =
		PB.f_id
		inner join t_ebuy_order EO on EOHTPB.t_ebuy_order_f_id = EO.f_id
		inner join t_ebuy_pay_record EPR on EPR.t_ebuy_order_f_id = EO.f_id
		inner join t_user U on U.f_id = EO.f_buyer_id
		WHERE 1=1
		and PB.f_id = #{_parameter}
	</select>

	<!-- 手功标记账单为已缴费 -->
	<update id="markByManual" parameterType="java.util.HashMap">
		update t_pay_bill set f_is_pay = 1, f_payment_way = 2,
		f_succ_pay_amount = f_amount,f_sys0_upd_time= sysdate(),f_pay_time = sysdate(),
		f_sys0_upd_user = #{omsUserId}
		WHERE f_is_pay = 2 and f_id = #{id}
	</update>

	<select id="select_paybill_with_realRoom" parameterType="java.util.Map"
		resultMap="payBillEntity_With_RealRoom">
		SELECT
		<include refid="payBillBase.queryHead_AppendTable" />
		,
		<include refid="propertyFeeDetailBase.queryHead_AppendTable" />

		,
		<include refid="realRoomBase.queryHead_AppendTable" />
		,
		<include refid="buildingBase.queryHead_AppendTable" />
		,
		<include refid="groupBuildingBase.queryHead_AppendTable" />
		,
		<include refid="addressBlockBase.queryHead_AppendTable" />
		,
		<include refid="addressCityBase.queryHead_AppendTable" />
		,
		<include refid="addressProvinceBase.queryHead_AppendTable" />
		,<include refid="propertyManagementBase.queryHead_AppendTable"/>
		FROM t_pay_bill PB
		LEFT JOIN t_property_fee_detail PFD ON PB.f_id = PFD.t_pay_bill_f_id AND
		PFD.f_sys0_del_state = 0 AND PFD.f_total_price>0

		INNER JOIN t_real_room RR ON RR.f_id = PB.t_real_room_f_id AND
		RR.f_sys0_del_state = 0
		INNER JOIN t_building B ON RR.t_building_f_id = B.f_id AND
		B.f_sys0_del_state = 0
		INNER JOIN t_group_building GB ON B.t_group_building_f_id = GB.f_id AND
		GB.f_sys0_del_state = 0
		INNER JOIN t_address_block AB ON GB.t_block_f_id = AB.f_id AND
		AB.f_sys0_del_state = 0
		INNER JOIN t_address_city AC ON AB.t_city_f_id = AC.f_id AND
		AC.f_sys0_del_state = 0
		INNER JOIN t_address_province AP ON AC.t_province_f_id = AP.f_id AND
		AP.f_sys0_del_state = 0
		LEFT JOIN t_property_management PM ON GB.t_property_management_f_id = PM.f_id AND PM.f_sys0_del_state = 0
		WHERE PB.f_sys0_del_state = 0
		<if test="paybillId != null">
			AND PB.f_id = #{paybillId}
		</if>
		
	</select>

	<select id="getPropertyCompanyName" parameterType="java.lang.Long"
		resultType="String">
		SELECT
		IFNULL(PC2.f_name, PC.f_name)
		FROM
		t_group_building GB
		LEFT JOIN t_property_management PM ON GB.t_property_management_f_id
		= PM.f_id
		AND PM.f_sys0_del_state = 0
		LEFT JOIN t_property_company PC ON
		PC.f_id = PM.t_property_company_f_id
		left join t_property_company PC2
		on PC2.f_id = GB.t_property_company_f_id
		where GB.f_id = #{groupBuildingId}
		limit 1
	</select>

	<select id="select_group_building_by_omsId" resultMap="groupBuildingBase.groupBuildingBaseMap_AppendTable">
		select
		<include refid="groupBuildingBase.queryHead_AppendTable" />
		from t_group_building GB
		<!-- <if test="isPmUser !=null and isPmUser == 1">
			管理处账号只能看到它所管辖的小区，所以用inner join
			inner join t_property_management PM on
			PM.f_id=GB.t_property_management_f_id and PM.f_sys0_del_state=0
			inner join t_property_management_has_oms_user PMHOU on PM.f_id =
			PMHOU.t_property_management_f_id and PMHOU.f_sys0_del_state=0
		</if>
		<if test="isPmUser == 0">
			left join t_property_management PM on
			PM.f_id=GB.t_property_management_f_id
		</if> -->
		left JOIN t_property_company PC on GB.t_property_company_f_id=PC.f_id
		AND PC.f_sys0_del_state=0
		where GB.f_sys0_del_state=0
		<include refid="permi.dataPermissionCondition" />
		<!-- <if test="isAdmin ==null or isAdmin == 0">
			<if test="isPmUser !=null and isPmUser == 0">and
				PC.f_admin_id=#{adminId}</if>
			<if test="isPmUser !=null and isPmUser == 1">and
				PMHOU.t_oms_user_f_id=#{adminId}</if>
		</if> -->
		limit 20;
	</select>

	<!-- 根据小区Id获取广告图片地址 -->
	<select id="select_Config_AdUrl" parameterType="java.util.Map"
		resultMap="propertyGbAdBase.propertyGbAdBaseMap_AppendTable">
		SELECT
		<include refid="propertyGbAdBase.queryHead_AppendTable" />
		FROM t_property_gb_ad PGA
		WHERE 1=1
		<if test="gbId != null"> AND PGA.f_gb_id in (#{gbId}, 0) </if>
		<if test="gbId == null"> AND PGA.f_gb_id = 0 </if>
		AND PGA.f_sys0_del_state = 0
		ORDER BY PGA.f_id DESC LIMIT 1
	</select>
		
	<!-- 找出时间重叠的账单配置，统计其总数 -->
	<select id="selectCountCrossTimeConfig" parameterType="PayBillTimeCfg" resultType="int">
		SELECT count(*) from t_pay_bill_time_cfg  
		where f_gb_id = #{gbId} 
		and f_bill_type_id = #{billTypeId} 
		and ((#{billMonthStart} > f_bill_month_start and f_bill_month_end > #{billMonthStart}) 
			or (#{billMonthEnd} > f_bill_month_start and f_bill_month_end > #{billMonthEnd}) 
			or (#{billMonthStart} &lt; f_bill_month_start and f_bill_month_end &lt; #{billMonthEnd}) 
			or (#{billMonthStart} &lt;= f_bill_month_start and f_bill_month_end &lt; #{billMonthEnd}) 
			or (#{billMonthStart} &lt; f_bill_month_start and f_bill_month_end &lt;= #{billMonthEnd}) 
			
			or (#{payDayStart} > f_pay_day_start and f_pay_day_end > #{payDayStart}) 
			or (#{payDayEnd} > f_pay_day_start and f_pay_day_end > #{payDayEnd}) 
			or (#{payDayStart} &lt; f_pay_day_start and f_pay_day_end &lt; #{payDayEnd})
			or (#{payDayStart} &lt;= f_pay_day_start and f_pay_day_end &lt; #{payDayEnd})
			or (#{payDayStart} &lt; f_pay_day_start and f_pay_day_end &lt;= #{payDayEnd})
			)
	</select>
	
	<sql id="select_payBill_for_list_from_noRepeat">
		FROM
		(
		SELECT 
		tab.PBid,
		tab.PPid,
		tab.RRid,
		tab.Bid,
		tab.GBid,
		tab.eohpbid,
		tab.eoid,
		tab.PCid
		FROM (
			SELECT
				tab1.PBid,
				tab1.PPid,
				tab1.RRid,
				tab1.Bid,
				tab1.GBid,
				tab1.eohpbid,
				tab1.eoid,
				tab1.PCid,
				IF (
					tab1.PBid = @v_pbsId ,@f_row := @f_row + 1 ,@f_row := 1
				) f_row ,@v_pbsId := tab1.PBid pbsId_partiton
			FROM
			(
			SELECT
				PB.f_id PBid,PP.f_id PPid,RR.f_id RRid,B.f_id Bid,GB.f_id GBid,eohpb.f_id eohpbid,eo.f_id eoid,PC.f_id PCid
			<include refid="select_payBill_for_list_from"/>
			ORDER BY
				PB.f_id,eo.f_pay_status desc,eohpb.f_id desc
			) tab1,
			(
				SELECT
					@v_pbsId := NULL,
					@f_row := 0
			) tab2
		)tab
		WHERE 1=1
		AND tab.f_row = 1
		) AA
		INNER JOIN t_pay_bill PB ON PB.f_id = AA.PBid AND  PB.f_sys0_del_state = 0
		/*多个地方共用此段sql，所以只能在此增加if判断（含有往月欠费的只进行本期账单查询:当前日期在缴费窗口内的账单欠费信息）*/
		<if test="isUnpaid != null and isUnpaid != '' and isUnpaid == 1">
			AND date_format(PB.f_pay_day_start,'%Y-%m-%d') &lt;= date_format(NOW(),'%Y-%m-%d')
			AND date_format(PB.f_pay_day_end,'%Y-%m-%d') &gt;= date_format(NOW(),'%Y-%m-%d')
		</if>
		INNER JOIN t_property_proprietor PP ON PP.f_id = AA.PPid
		INNER JOIN t_real_room RR ON RR.f_id = AA.RRid
		INNER JOIN t_building B ON B.F_id = AA.Bid
		INNER JOIN t_group_building GB ON GB.f_id = AA.GBid
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb ON eohpb.f_id = AA.eohpbid
		LEFT JOIN t_ebuy_order eo ON eo.f_id = AA.eoid and eo.f_pay_status = 2 <!-- 只要已支付的订单，其它状态无意义 -->
		INNER JOIN t_property_company PC ON PC.f_id = AA.PCid
		LEFT JOIN t_group_building_bill_cycle gbbc ON gbbc.f_id = PB.t_bill_cycle_id
		WHERE 1=1
	</sql>
	<sql id="select_payBill_for_list_from">
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id = PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb on eohpb.t_pay_bill_f_id = PB.f_id
		LEFT JOIN t_ebuy_order eo on eo.f_id  = eohpb.t_ebuy_order_f_id AND eo.f_pay_status = 2
		LEFT JOIN t_pay_bill_type pbt on pbt.f_id = pb.f_bill_type_id and pbt.f_sys0_del_state = 0
		inner JOIN t_property_company PC on PC.f_id = GB.t_property_company_f_id <include refid="permi.dataPermissionCondition" />
		<!-- <choose>
			<when test="isadmin==0 and isPmUser==1"> 管理处用户，看到管理处下的物业
				LEFT JOIN t_property_management PM ON GB.t_property_management_f_id
				= PM.f_id AND PM.f_sys0_del_state = 0
				LEFT JOIN
				t_property_management_has_oms_user PMHOU ON
				PMHOU.t_property_management_f_id = PM.f_id AND
				PMHOU.f_sys0_del_state = 0
				LEFT JOIN t_oms_user OU ON OU.f_id =
				PMHOU.t_oms_user_f_id AND OU.f_sys0_del_state = 0
				LEFT JOIN t_property_company PC on PC.f_id = PM.t_property_company_f_id
			</when>
			<otherwise> 非管理处用户
				inner join t_property_company PC on PC.f_id =
				GB.t_property_company_f_id
				LEFT join t_oms_user OU on OU.f_id = PC.f_admin_id
			</otherwise>
		</choose> -->
		WHERE PB.f_sys0_del_state = 0
		<!-- 当isadmin == 1 ，即解放区后台管理员 要看到所有,其它的只能看到所管辖的 -->
		<choose>
			<when test="isRevenue == true">
			</when>
			<otherwise>
				<if test="paytimeType != null and paytimeType != '' "> and (PB.f_paytime_type = #{paytimeType} ) </if> <!-- 缴费时间方式=={"1":"月度缴费","2":"周期缴费"} -->
			</otherwise>
		</choose>
		<if test="buyerId != null and buyerId != '' ">
			 and PB.f_is_pay = 1 and
			 	CASE
				WHEN f_payment_way = 1 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"} -->
					eo.f_buyer_id = #{buyerId}
				WHEN f_payment_way = 3 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"} -->
					PB.f_sys0_upd_user = #{buyerId}
				WHEN f_payment_way = 4 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣","4"物业宝抵扣} -->
					PB.f_sys0_upd_user = #{buyerId}
				ELSE
					eo.f_buyer_id = #{buyerId}
				END
		</if> <!-- 缴费解放号 -->
		<if test="pbtIsPropfee != null and pbtIsPropfee != '' "> and (pbt.f_is_prop_fee = #{pbtIsPropfee} ) </if> <!-- 账单开始日期 -->
		<!--收费情况一览表处理-->
		<choose>
			<when test="isReport != null and isReport == 1">
				<if test="billMonthStart != null and billMonthStart != '' ">
					and (LEFT(PB.f_bill_month_start, 7) = LEFT(#{billMonthStart}, 7))
			  	</if> <!-- 账单开始日期 -->
			</when>
			<otherwise>
				<if test="billMonthStart != null and billMonthStart != '' "> and (PB.f_bill_month_start &gt;= #{billMonthStart} ) </if> <!-- 账单开始日期 -->
				<if test="billMonthEnd != null and billMonthEnd != '' "> and (PB.f_bill_month_end &lt;= #{billMonthEnd}) </if> <!-- 账单结束日期 -->
			</otherwise>
		</choose>

		<if test="billTypeName != null and billTypeName != '' "> and (PB.f_bill_type_name like CONCAT('%',#{billTypeName},'%')) </if> <!-- 账单类型名称 -->
		<!-- <if test="isRevenue == false ">
		<if test="isadmin !=null and isadmin == 0">
			<if test="isBusiness != null and isBusiness ==0">and OU.f_id = #{omsUserId}</if>
			<if test="isBusiness != null and isBusiness ==1">and PC.f_follower = #{omsUserName}</if>
		</if>
		</if> -->
		<if test="gbName != null and gbName != '' "> and (GB.f_name like CONCAT('%',#{gbName},'%')) </if>
		<if test="contractNum != null and contractNum != '' "> and (RR.f_contract_no like CONCAT('%',#{contractNum},
			'%')) </if>
		<if test="ppName != null and ppName != '' "> and (PP.f_name like CONCAT('%',#{ppName},'%') ) </if>
		<!-- <if test="pbMonth != null and pbMonth != '' "> and (PB.f_month like 
			CONCAT('%',#{pbMonth},'%') ) </if> -->
			
		<choose>
			<when test="isRevenue == true">
			<if test="pbMonth != null and pbMonth != '' ">
				AND CASE WHEN PB.f_paytime_type = 1 THEN <!-- 缴费时间方式=={"1":"月度缴费","2":"周期缴费"} -->
				(CASE WHEN NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month ELSE PB.f_month END LIKE CONCAT('%',#{pbMonth},'%')) 
				ELSE 
				((PB.f_bill_month_start &lt;= #{pbMonth}) AND (PB.f_bill_month_end &gt;= #{pbMonth})) 
				END
			</if>
			</when>
			<otherwise>
			<if test="pbMonth != null and pbMonth != '' "> and (case when NOT ISNULL(PB.f_bill_month) THEN
				PB.f_bill_month ELSE PB.f_month END like CONCAT('%',#{pbMonth},'%') )
			</if>
			</otherwise>
		</choose>
		
		<if test="isPay != null and isPay != '' and isPay != 4 and isPay !=5"> and (PB.f_is_pay = #{isPay} ) </if>
		<if test="isPay == 4"> and (PB.f_is_pay = 1 or IFNULL(PB.f_finance_status, 0) = 1) </if>
		<if test="isPay == 5"> and (PB.f_is_pay = 2 or (IFNULL(PB.f_finance_status, 0) = 1 AND PB.f_is_pay = 2)) </if>
		<if test="financeStatus != null"> and (IFNULL(PB.f_finance_status, 0) = #{financeStatus} ) </if>
		<if test="isRevenue == false "> <!-- 月度或周期账单查询  走这里 -->
			<if test="paymentWay != null and paymentWay != '' and !paymentWay.equals('-2')">and (PB.f_payment_way = #{paymentWay} )</if>
			<if test="paymentWay != null and paymentWay != '' and paymentWay.equals('-2')">and PB.f_payment_way IN (1,3,4)</if>
		</if>		
		<if test="isRevenue == true "> <!-- 收益中心 物业代收费明细 走这里 -->
			<if test="paymentWay != null and paymentWay == 1"> and (PB.f_payment_way in (1, 3)) </if>
		</if>
		<if test="payTimeStart != null and payTimeStart != '' "> and (PB.f_pay_time &gt;= #{payTimeStart} ) </if>
		<if test="payTimeEnd != null and payTimeEnd != '' "> and (PB.f_pay_time &lt;= #{payTimeEnd} ) </if>
		<if test="pcName != null and pcName != '' "> and (PC.f_name like CONCAT('%',#{pcName},'%') ) </if>
		<if test="bName != null and bName != '' "> and (B.f_name like CONCAT('%',#{bName},'%') ) </if>
		<if test="unitName != null and unitName != '' "> and (RR.f_unit_name like CONCAT('%',#{unitName},'%') ) </if>
		<if test="roomNum != null and roomNum != '' "> and (RR.f_num_tail like CONCAT('%',#{roomNum},'%') ) </if>
		<if test="payDayStart != null and payDayStart != '' "> and PB.f_pay_day_start &gt;= #{payDayStart}  </if>
		<if test="payDayEnd != null and payDayEnd != '' "> and PB.f_pay_day_end &lt;= #{payDayEnd} </if>
		<if test="isRevenue == true">
			<choose><!-- 财务or管理员可以查看所有数据 -->
				<when test="applyId != null and applyId != '' ">
					AND EXISTS (
						SELECT RSA.f_id 
						FROM t_revenue_signal_amount RSA WHERE 1=1
							AND RSA.f_mini_role_type = 2 
							AND RSA.f_goal_type = #{projectType} 
							AND RSA.f_goal_id = PB.f_id
							AND RSA.f_sys0_del_state=0
						<choose>
							<when test="isadmin==1"> <!-- 财务or管理员只可查财务所见数据 -->
								AND (RSA.f_rev_apply_finance_id = #{applyId} ) AND RSA.f_amount > 0
							</when>
							<otherwise>
								AND (RSA.f_rev_apply_id = #{applyId} ) AND RSA.f_amount > 0
							</otherwise>
						</choose>
					)
				</when>
				<when test="roleType == 1 or roleType == 4">
					AND EXISTS (
						SELECT RSA.f_id 
						FROM t_revenue_signal_amount RSA WHERE 1=1
							AND RSA.f_mini_role_type = 2 
							AND RSA.f_goal_type = #{projectType} 
							AND RSA.f_goal_id = PB.f_id
							AND RSA.f_sys0_del_state=0
						<if test="tkStatus_wy != null and tkStatus_wy != '' "> AND (RSA.f_tk_status = #{tkStatus_wy} ) AND RSA.f_amount > 0</if>
						<if test="applyId != null and applyId != '' "> AND (RSA.f_rev_apply_id = #{applyId} ) </if>
					)
				</when>
				<otherwise> <!-- 物业、管理员，等代理等角色 -->
					AND EXISTS (
						SELECT RSA.f_id 
						FROM t_revenue_signal_amount RSA WHERE 1=1
							AND RSA.f_mini_role_type = 2 
							AND RSA.f_goal_type = #{projectType} 
							AND RSA.f_goal_id = PB.f_id
							<choose>
								<when test="roleType == 13">
									AND RSA.f_mini_role_type = 2
									and RSA.t_property_management_f_id = #{roleId}
								</when>
								<otherwise>
									AND RSA.f_mini_role_id = #{roleId}
								</otherwise>
							</choose>
							AND RSA.f_sys0_del_state=0
							AND RSA.f_amount > 0
						<if test="tkStatus_wy != null and tkStatus_wy != '' "> AND (RSA.f_tk_status = #{tkStatus_wy} ) AND RSA.f_amount > 0 </if>
						<if test="applyId != null and applyId != '' "> AND (RSA.f_rev_apply_id = #{applyId} ) </if>
					)
				</otherwise>
			</choose>		
		</if>
		<if test="gbId != null and gbId != ''"> and (GB.f_id = #{gbId} ) </if>
		<if test="cycleType != null and cycleType != ''"> and (PB.f_cycle_type = #{cycleType} ) </if>
		<if test="cycleId != null and cycleId != ''"> and (PB.t_bill_cycle_id = #{cycleId} ) </if>
		<if test="cycleId == null or cycleId == ''">
			AND (PB.f_cycle_type is null 
					OR PB.f_cycle_type = 1 
					OR (PB.f_cycle_type = 2 AND
						(
							PB.f_is_pay = 1 OR (PB.f_is_pay = 2 AND date_format(SYSDATE(),'%Y-%m-%d') &gt;= date_format(PB.f_pay_day_start,'%Y-%m-%d') AND date_format(SYSDATE(),'%Y-%m-%d') &lt;= date_format(PB.f_pay_day_end,'%Y-%m-%d'))
						)
					)
				)
		</if>
	</sql>
	
	<select id="select_paybill_for_userId" parameterType="java.math.BigInteger" resultType="java.lang.String">
		select 
			date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
			ELSE PB.f_month END,'%Y年%m月') AS month
		from
			t_user U
			INNER JOIN t_room R ON R.f_id = U.f_default_room_id
			AND R.f_sys0_del_state = 0
			INNER JOIN t_real_room RR ON R.t_real_room_f_id = RR.f_id
			AND RR.f_sys0_del_state = 0
			INNER JOIN
		    t_pay_bill PB ON RR.f_id = PB.t_real_room_f_id
		where U.f_id = #{userId} ORDER BY month DESC;
	
	</select>
	
	<select id="select_payBill_byGbId_count" parameterType="java.util.Map" resultType="java.lang.Integer">
		SELECT
			COUNT(0)
		FROM
			t_pay_bill PB
		INNER JOIN t_real_room RR ON RR.f_id = PB.t_real_room_f_id
		INNER JOIN t_building B ON B.F_id = RR.t_building_f_id
		INNER JOIN t_group_building GB ON GB.f_id = B.t_group_building_f_id
		WHERE
			GB.f_id = #{gbId}
			AND PB.t_bill_cycle_id = #{billCycleId}
			<!--缴费完成和部分已经缴费  -->
			<if test="isPay != null and isPay != '' "> AND (PB.f_is_pay = #{isPay} OR (PB.f_finance_status = 1 AND PB.f_is_pay = 2))</if>
	</select>
	<!--更新账单周期  -->
	<update id="update_payBill_by_billCycleId" parameterType="java.util.HashMap">
		update t_pay_bill 
		<trim prefix="SET" prefixOverrides=",">
		<if test="billMonth != null and !billMonth.equals('') ">,f_bill_month=str_to_date(#{billMonth},'%Y-%m-%d %T')</if>
		<if test="billMonthStart != null and !billMonthStart.equals('') "> ,f_bill_month_start=str_to_date(#{billMonthStart},'%Y-%m-%d %T')</if>
 		<if test="billMonthEnd != null and !billMonthEnd.equals('') "> ,f_bill_month_end=str_to_date(#{billMonthEnd},'%Y-%m-%d %T')</if> 
 		<if test="payDayStart != null and !payDayStart.equals('') "> ,f_pay_day_start=str_to_date(#{payDayStart},'%Y-%m-%d %T')</if> 
 		<if test="payDayEnd != null and !payDayEnd.equals('') "> ,f_pay_day_end=str_to_date(#{payDayEnd},'%Y-%m-%d %T')</if> 
 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('') "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 
 		<if test="monthSize != null and !monthSize.equals('') "> ,f_bill_month_size = #{monthSize}</if>
 		</trim>
		WHERE t_bill_cycle_id = #{billCycleId}
	</update>
	
	<!-- 删除未交费账单 -->
	<delete id="delete_payBill_by_billId" parameterType="java.util.Map">
		UPDATE t_pay_bill pb
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb ON pb.f_id = eohpb.t_pay_bill_f_id
		LEFT JOIN t_ebuy_order eo ON eohpb.t_ebuy_order_f_id = eo.f_id
		SET pb.f_sys0_del_state = 1, pb.f_sys0_del_user = #{delUser}, pb.f_sys0_del_time = #{delTime},
		 	eohpb.f_sys0_del_state = 1, eohpb.f_sys0_del_user = #{delUser}, eohpb.f_sys0_del_time = #{delTime},
		 	eo.f_sys0_del_state = 1, eo.f_sys0_del_user = #{delUser}, eo.f_sys0_del_time = #{delTime}
		WHERE pb.f_id = #{billId} AND (pb.f_finance_status = 0 OR pb.f_finance_status IS NULL);
    </delete>

	<select id="getCompayIdUserManageByOmsUser" parameterType="map" resultType="bigInteger">
		SELECT pc.f_id AS companyId FROM t_property_company pc
		WHERE pc.f_sys0_del_state = 0 AND pc.f_admin_id = #{omsUserId}
		UNION
		SELECT pm.t_property_company_f_id AS companyId FROM t_property_management pm
			INNER JOIN t_property_management_has_oms_user hou ON hou.t_property_management_f_id = pm.f_id AND hou.f_sys0_del_state = 0
		WHERE pm.f_sys0_del_state = 0 AND hou.t_oms_user_f_id = #{omsUserId}
	</select>

	<sql id="select_payBill_for_list_forChild">
		select distinct GB.f_name groupBuildingName, B.f_name buildingName,GB.f_id groupBuildingId,
		RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo, GB.f_pay_period_start payPeriodStart,
		GB.f_pay_period_end payPeriodEnd, PC.f_name pcName,
		eo.f_buyer_id buyerId, PB.f_bill_type_name billTypeName, date_format(PB.f_bill_month_start,'%Y年%m月') billMonthStart, date_format(PB.f_bill_month_end,'%Y年%m月') billMonthEnd,

		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,
		<choose>
			<when test="feeType == '3'.toString()">IFNULL(f_total_amount, sum(pfd.f_total_price))</when>
			<when test="feeType != null and feeType != '' and feeType!=1 and feeType!=4">sum(pfd.f_total_price)</when>
			<when test="feeType != null and feeType != '' and feeType==1">sum(pfd.f_total_price) + PB.f_last_unpaid</when>
			<otherwise>PB.f_amount</otherwise>
		</choose>
		as amountBigDecimal, PB.f_last_unpaid,
		date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice, PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,
		<!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
		IFNULL(if(PB.f_payment_way = 3,
		(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0),
		PB.f_succ_pay_amount), 0)as	PBsuccPayAmount,
		PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(PB.f_sys0_upd_time,'%Y-%m-%d %T') as
		PBsys0UpdTime,PB.f_sys0_upd_user PBsys0UpdUser,

		date_format(PB.f_pay_time,'%Y-%m-%d %T') as PBpayTime

		<if test="isRevenue == true ">
			,(
			SELECT IFNULL(RSA.f_tk_status,-1)
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
			)AS ext_tkStatus_wy
			,(
			SELECT IFNULL(RSA.f_pay_flow_no,'')
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
			)AS ext_payFlowNo
		</if>
		,eo.f_pay_method payMethod
		,PB.f_hb_amount AS PBhbAmount, PB.f_paytime_type AS paytimeType, PB.f_cycle_type AS cycleType,
		PB.f_bill_month_size AS billMonthSize, PB.t_group_building_bill_cycle_config_f_id tGroupBuildingBillCycleConfigFId
	</sql>
	<sql id="select_payBill_for_list_from_noRepeat_forChild">
		FROM
		(
		SELECT
		tab.PBid,
		tab.PPid,
		tab.RRid,
		tab.Bid,
		tab.GBid,
		tab.eohpbid,
		tab.eoid,
		tab.PCid,
		tab.OUid
		FROM (
		SELECT
		tab1.PBid,
		tab1.PPid,
		tab1.RRid,
		tab1.Bid,
		tab1.GBid,
		tab1.eohpbid,
		tab1.eoid,
		tab1.PCid,
		tab1.OUid,
		IF (
		tab1.PBid = @v_pbsId ,@f_row := @f_row + 1 ,@f_row := 1
		) f_row ,@v_pbsId := tab1.PBid pbsId_partiton
		FROM
		(
		SELECT
		PB.f_id PBid,PP.f_id PPid,RR.f_id RRid,B.f_id Bid,GB.f_id GBid,eohpb.f_id eohpbid,eo.f_id eoid,PC.f_id PCid,OU.f_id OUid
		<include refid="select_payBill_for_list_from_forChild"/>
		ORDER BY
		PB.f_id,eo.f_pay_status desc,eohpb.f_id desc
		) tab1,
		(
		SELECT
		@v_pbsId := NULL,
		@f_row := 0
		) tab2
		)tab
		WHERE 1=1
		AND tab.f_row = 1
		) AA
		INNER JOIN t_pay_bill PB ON PB.f_id = AA.PBid AND PB.f_sys0_del_state = 0
		<!--收费子项账单查询增加条件-->
		<if test="feeType != null and feetype != ''">
			INNER JOIN t_property_fee_detail pfd ON pfd.t_pay_bill_f_id = pb.f_id AND pfd.f_fee_type = #{feeType}
		</if>
		INNER JOIN t_property_proprietor PP ON PP.f_id = AA.PPid
		INNER JOIN t_real_room RR ON RR.f_id = AA.RRid
		INNER JOIN t_building B ON B.F_id = AA.Bid
		INNER JOIN t_group_building GB ON GB.f_id = AA.GBid
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb ON eohpb.f_id = AA.eohpbid
		LEFT JOIN t_ebuy_order eo ON eo.f_id = AA.eoid and eo.f_pay_status = 2 <!-- 只要已支付的订单，其它状态无意义 -->
		INNER JOIN t_property_company PC ON PC.f_id = AA.PCid
		LEFT JOIN t_oms_user OU ON OU.f_id = AA.OUid
		GROUP BY PB.f_id
		HAVING
		1 = 1
	</sql>
	<sql id="select_payBill_for_list_from_forChild">
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id =
		PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id <include refid="permi.dataPermissionCondition" />
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb on eohpb.t_pay_bill_f_id = PB.f_id
		LEFT JOIN t_ebuy_order eo on eo.f_id  = eohpb.t_ebuy_order_f_id AND eo.f_pay_status = 2
		LEFT JOIN t_pay_bill_type pbt on pbt.f_id = pb.f_bill_type_id and pbt.f_sys0_del_state = 0
		left join t_property_company PC on PC.f_id = GB.t_property_company_f_id
		left join t_oms_user OU on 0=1
		<!-- <choose>
			<when test="isadmin==0 and isSubUser==1"> 管理处用户，看到管理处下的物业
				LEFT JOIN t_property_management PM ON GB.t_property_management_f_id
				= PM.f_id AND PM.f_sys0_del_state = 0
				LEFT JOIN
				t_property_management_has_oms_user PMHOU ON
				PMHOU.t_property_management_f_id = PM.f_id AND
				PMHOU.f_sys0_del_state = 0
				LEFT JOIN t_oms_user OU ON OU.f_id =
				PMHOU.t_oms_user_f_id AND OU.f_sys0_del_state = 0
				LEFT JOIN t_property_company PC on PC.f_id = PM.t_property_company_f_id
			</when>
			<otherwise> 非管理处用户
				inner join t_property_company PC on PC.f_id =
				GB.t_property_company_f_id
				LEFT join t_oms_user OU on OU.f_id = PC.f_admin_id
			</otherwise>
		</choose> -->
		WHERE PB.f_sys0_del_state = 0
		<!-- 当isadmin == 1 ，即解放区后台管理员 要看到所有,其它的只能看到所管辖的 -->
		<choose>
			<when test="isRevenue == true">
			</when>
			<otherwise>
				<if test="paytimeType != null and paytimeType != '' "> and (PB.f_paytime_type = #{paytimeType} ) </if> <!-- 缴费时间方式=={"1":"月度缴费","2":"周期缴费"} -->
			</otherwise>
		</choose>
		<if test="buyerId != null and buyerId != '' ">
			and PB.f_is_pay = 1 and
			CASE
			WHEN f_payment_way = 1 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"} -->
			eo.f_buyer_id = #{buyerId}
			WHEN f_payment_way = 3 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"} -->
			PB.f_sys0_upd_user = #{buyerId}
			WHEN f_payment_way = 4 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣","4"物业宝抵扣} -->
			PB.f_sys0_upd_user = #{buyerId}
			ELSE
			eo.f_buyer_id = #{buyerId}
			END
		</if> <!-- 缴费解放号 -->
		<if test="billMonthStart != null and billMonthStart != '' "> and (PB.f_bill_month_start &gt;= #{billMonthStart} ) </if> <!-- 账单开始日期 -->
		<if test="billMonthEnd != null and billMonthEnd != '' "> and (PB.f_bill_month_end &lt;= #{billMonthEnd}) </if> <!-- 账单结束日期 -->
		<if test="billTypeName != null and billTypeName != '' "> and (PB.f_bill_type_name like CONCAT('%',#{billTypeName},'%')) </if> <!-- 账单类型名称 -->
		<!-- <if test="isRevenue == false ">
			<if test="isadmin !=null and isadmin == 0">
				<if test="isBusiness != null and isBusiness ==0">and OU.f_id = #{omsUserId}</if>
				<if test="isBusiness != null and isBusiness ==1">and PC.f_follower = #{omsUserName}</if>
			</if>
		</if> -->
		<if test="gbName != null and gbName != '' "> and (GB.f_name like CONCAT('%',#{gbName},'%')) </if>
		<if test="contractNum != null and contractNum != '' "> and (RR.f_contract_no like CONCAT('%',#{contractNum},
			'%')) </if>
		<if test="ppName != null and ppName != '' "> and (PP.f_name like CONCAT('%',#{ppName},'%') ) </if>
		<!-- <if test="pbMonth != null and pbMonth != '' "> and (PB.f_month like
			CONCAT('%',#{pbMonth},'%') ) </if> -->

		<choose>
			<when test="isRevenue == true">
				<if test="pbMonth != null and pbMonth != '' ">
					AND CASE WHEN PB.f_paytime_type = 1 THEN <!-- 缴费时间方式=={"1":"月度缴费","2":"周期缴费"} -->
					(CASE WHEN NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month ELSE PB.f_month END LIKE CONCAT('%',#{pbMonth},'%'))
					ELSE
					((PB.f_bill_month_start &lt;= #{pbMonth}) AND (PB.f_bill_month_end &gt;= #{pbMonth}))
					END
				</if>
			</when>
			<otherwise>
				<if test="pbMonth != null and pbMonth != '' "> and (case when NOT ISNULL(PB.f_bill_month) THEN
					PB.f_bill_month ELSE PB.f_month END like CONCAT('%',#{pbMonth},'%') )
				</if>
			</otherwise>
		</choose>

		<if test="isPay != null and isPay != '' and isPay != 4"> and (PB.f_is_pay = #{isPay} ) </if>
		<if test="isPay == 4"> and (PB.f_is_pay = 1 or IFNULL(PB.f_finance_status, 0) = 1) </if>
		<if test="financeStatus != null"> and (IFNULL(PB.f_finance_status, 0) = #{financeStatus} ) </if>
		<if test="isRevenue == false "> <!-- 月度或周期账单查询  走这里 -->
			<if test="paymentWay != null and paymentWay != '' and !paymentWay.equals('-2')">and (PB.f_payment_way = #{paymentWay} )</if>
			<if test="paymentWay != null and paymentWay != '' and paymentWay.equals('-2')">and PB.f_payment_way IN (1,3,4)</if>
		</if>
		<if test="isRevenue == true "> <!-- 收益中心 物业代收费明细 走这里 -->
			<if test="paymentWay != null and paymentWay == 1"> and (PB.f_payment_way in (1, 3)) </if>
		</if>
		<if test="payTimeStart != null and payTimeStart != '' "> and (PB.f_pay_time &gt;= #{payTimeStart} ) </if>
		<if test="payTimeEnd != null and payTimeEnd != '' "> and (PB.f_pay_time &lt;= #{payTimeEnd} ) </if>
		<if test="pcName != null and pcName != '' "> and (PC.f_name like CONCAT('%',#{pcName},'%') ) </if>
		<if test="bName != null and bName != '' "> and (B.f_name like CONCAT('%',#{bName},'%') ) </if>
		<if test="unitName != null and unitName != '' "> and (RR.f_unit_name like CONCAT('%',#{unitName},'%') ) </if>
		<if test="roomNum != null and roomNum != '' "> and (RR.f_num_tail like CONCAT('%',#{roomNum},'%') ) </if>
		<if test="payDayStart != null and payDayStart != '' "> and PB.f_pay_day_start &gt;= #{payDayStart}  </if>
		<if test="payDayEnd != null and payDayEnd != '' "> and PB.f_pay_day_end &lt;= #{payDayEnd} </if>
		<if test="isRevenue == true">
			<choose><!-- 财务or管理员可以查看所有数据 -->
				<when test="applyId != null and applyId != '' ">
					AND EXISTS (
					SELECT RSA.f_id
					FROM t_revenue_signal_amount RSA WHERE 1=1
					AND RSA.f_mini_role_type = 2
					AND RSA.f_goal_type = #{projectType}
					AND RSA.f_goal_id = PB.f_id
					AND RSA.f_sys0_del_state=0
					<choose>
						<when test="isadmin==1"> <!-- 财务or管理员只可查财务所见数据 -->
							AND (RSA.f_rev_apply_finance_id = #{applyId} ) AND RSA.f_amount > 0
						</when>
						<otherwise>
							AND (RSA.f_rev_apply_id = #{applyId} ) AND RSA.f_amount > 0
						</otherwise>
					</choose>
					)
				</when>
				<when test="roleType == 1 or roleType == 4">
					AND EXISTS (
					SELECT RSA.f_id
					FROM t_revenue_signal_amount RSA WHERE 1=1
					AND RSA.f_mini_role_type = 2
					AND RSA.f_goal_type = #{projectType}
					AND RSA.f_goal_id = PB.f_id
					AND RSA.f_sys0_del_state=0
					<if test="tkStatus_wy != null and tkStatus_wy != '' "> AND (RSA.f_tk_status = #{tkStatus_wy} ) AND RSA.f_amount > 0</if>
					<if test="applyId != null and applyId != '' "> AND (RSA.f_rev_apply_id = #{applyId} ) </if>
					)
				</when>
				<otherwise> <!-- 物业、管理员，等代理等角色 -->
					AND EXISTS (
					SELECT RSA.f_id
					FROM t_revenue_signal_amount RSA WHERE 1=1
					AND RSA.f_mini_role_type = 2
					AND RSA.f_goal_type = #{projectType}
					AND RSA.f_goal_id = PB.f_id
					<choose>
						<when test="roleType == 13">
							AND RSA.f_mini_role_type = 2
							and RSA.t_property_management_f_id = #{roleId}
						</when>
						<otherwise>
							AND RSA.f_mini_role_id = #{roleId}
						</otherwise>
					</choose>
					AND RSA.f_sys0_del_state=0
					AND RSA.f_amount > 0
					<if test="tkStatus_wy != null and tkStatus_wy != '' "> AND (RSA.f_tk_status = #{tkStatus_wy} ) AND RSA.f_amount > 0 </if>
					<if test="applyId != null and applyId != '' "> AND (RSA.f_rev_apply_id = #{applyId} ) </if>
					)
				</otherwise>
			</choose>

		</if>
		/*v349改版新增条件*/
		<if test="gbId != null and gbId != ''"> and (GB.f_id = #{gbId} ) </if>
		<if test="cycleType != null and cycleType != ''"> and (PB.f_cycle_type = #{cycleType} ) </if>
		<if test="cycleId != null and cycleId != ''"> and (PB.t_bill_cycle_id = #{cycleId} ) </if>
	</sql>

	<resultMap id="selectFeeDetailNameByGbId_Map" type="com.cnfantasia.server.ms.payBill.entity.ExportBillDetailHead">
		<id property="feeItemName" column="feeItemName" javaType="java.lang.String"/>
		<collection property="exportBillDetailMrNameForHeads" resultMap="exportBillDetailMrNameForHead_Map"/>
	</resultMap>
	<resultMap id="exportBillDetailMrNameForHead_Map" type="com.cnfantasia.server.ms.payBill.entity.ExportBillDetailMrNameForHead">
		<result property="mrName" column="mrName" javaType="java.lang.String"/>
	</resultMap>
	<select id="selectFeeDetailNameByGbId" parameterType="java.util.Map" resultMap="selectFeeDetailNameByGbId_Map">
		SELECT CONCAT(pfd.f_name,"@",IFNULL(pfd.f_fee_type,0)) AS feeItemName, pfd.f_mr_name AS mrName FROM t_property_fee_detail pfd INNER JOIN
		t_pay_bill pb ON pb.f_id = pfd.t_pay_bill_f_id AND pb.f_sys0_del_state=0 AND pfd.f_sys0_del_state=0 /*AND pfd.f_total_price > 0*/
		INNER JOIN t_real_room rr ON rr.f_id = pb.t_real_room_f_id AND rr.f_sys0_del_state=0
		INNER JOIN t_building b ON b.f_id = rr.t_building_f_id AND b.f_sys0_del_state=0
		INNER JOIN t_group_building gb ON gb.f_id = b.t_group_building_f_id AND gb.f_sys0_del_state=0 AND gb.f_id=#{gbId}
		<if test="feeType != null and feeType != ''">
			AND pfd.f_fee_type = #{feeType}
		</if>
		<if test="billIds != null and billIds.size() > 0">
			AND pb.f_id IN (
			<foreach item="item" index="index" collection="billIds"
					 separator=","> #{item} </foreach>
			)
		</if>
	</select>

	<!-- 根据物业公司用户Id，找 所管辖小区的账单信息__总数 -->
	<select id="getPayBill_byUserId_forCount_Revenue" parameterType="java.util.Map"
			resultMap="payBillEntity">
		<include refid="select_payBill_for_list_revenue" />
		<include refid="select_payBill_for_list_from_noRepeat_revenue" />
	</select>

	<!-- 根据物业公司用户Id，找 所管辖小区的账单信息 收益中心-->
	<select id="select_payBill_byOmsUserId_forRevenuePage" parameterType="java.util.HashMap"
			resultMap="payBillEntity">
		<include refid="select_payBill_for_list_revenue" />
		<include refid="select_payBill_for_list_from_noRepeat_revenue" />

		order by PB.f_pay_time desc, GB.f_id desc, PB.f_id ASC
		<if test="_begin != null and _length != '' "><![CDATA[ LIMIT #{_begin},#{_length} ]]>
		</if>
	</select>
	<sql id="select_payBill_for_list_revenue">
		select distinct GB.f_name groupBuildingName, B.f_name buildingName,GB.f_id groupBuildingId,
		RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo, GB.f_pay_period_start payPeriodStart,
		GB.f_pay_period_end payPeriodEnd, PC.f_name pcName,
		eo.f_buyer_id buyerId, PB.f_bill_type_name billTypeName, date_format(PB.f_bill_month_start,'%Y年%m月') billMonthStart, date_format(PB.f_bill_month_end,'%Y年%m月') billMonthEnd,

		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,PB.f_amount as PBamount,date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice, PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,
		<!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
		IFNULL(if(PB.f_payment_way = 3,
		(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0),
		PB.f_succ_pay_amount), 0)as	PBsuccPayAmount,
		PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(IFNULL(PB.f_pay_time,PB.f_sys0_upd_time),'%Y-%m-%d %T') as
		PBsys0UpdTime,PB.f_sys0_upd_user PBsys0UpdUser,

		date_format(PB.f_pay_time,'%Y-%m-%d %T') as PBpayTime

		<if test="isRevenue == true ">
			,(
			SELECT IFNULL(RSA.f_tk_status,-1)
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
			)AS ext_tkStatus_wy
			,(
			SELECT IFNULL(RSA.f_pay_flow_no,'')
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
			)AS ext_payFlowNo
		</if>
		,eo.f_pay_method payMethod
		,PB.f_hb_amount AS PBhbAmount, PB.f_paytime_type AS paytimeType, PB.f_cycle_type AS cycleType,
		PB.f_bill_month_size AS billMonthSize
	</sql>
	<sql id="select_payBill_for_list_from_noRepeat_revenue">
		FROM
		(
		SELECT
		tab.PBid,
		tab.PPid,
		tab.RRid,
		tab.Bid,
		tab.GBid,
		tab.eohpbid,
		tab.eoid,
		tab.PCid
		FROM (
		SELECT
		tab1.PBid,
		tab1.PPid,
		tab1.RRid,
		tab1.Bid,
		tab1.GBid,
		tab1.eohpbid,
		tab1.eoid,
		tab1.PCid,
		IF (
		tab1.PBid = @v_pbsId ,@f_row := @f_row + 1 ,@f_row := 1
		) f_row ,@v_pbsId := tab1.PBid pbsId_partiton
		FROM
		(
		SELECT
		PB.f_id PBid,PP.f_id PPid,RR.f_id RRid,B.f_id Bid,GB.f_id GBid,eohpb.f_id eohpbid,eo.f_id eoid,PC.f_id PCid
		<include refid="select_payBill_for_list_from_revenue"/>
		ORDER BY
		PB.f_id,eo.f_pay_status desc,eohpb.f_id desc
		) tab1,
		(
		SELECT
		@v_pbsId := NULL,
		@f_row := 0
		) tab2
		)tab
		WHERE 1=1
		AND tab.f_row = 1
		) AA
		INNER JOIN t_pay_bill PB ON PB.f_id = AA.PBid
		INNER JOIN t_property_proprietor PP ON PP.f_id = AA.PPid
		INNER JOIN t_real_room RR ON RR.f_id = AA.RRid
		INNER JOIN t_building B ON B.F_id = AA.Bid
		INNER JOIN t_group_building GB ON GB.f_id = AA.GBid
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb ON eohpb.f_id = AA.eohpbid
		LEFT JOIN t_ebuy_order eo ON eo.f_id = AA.eoid and eo.f_pay_status = 2 <!-- 只要已支付的订单，其它状态无意义 -->
		INNER JOIN t_property_company PC ON PC.f_id = AA.PCid
		WHERE 1=1
	</sql>
	<sql id="select_payBill_for_list_from_revenue">
		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id =
		PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id <include refid="permi.dataPermissionCondition" />
		LEFT JOIN t_ebuy_order_has_t_pay_bill eohpb on eohpb.t_pay_bill_f_id = PB.f_id
		LEFT JOIN t_ebuy_order eo on eo.f_id  = eohpb.t_ebuy_order_f_id AND eo.f_pay_status = 2
		LEFT JOIN t_pay_bill_type pbt on pbt.f_id = pb.f_bill_type_id and pbt.f_sys0_del_state = 0
		inner join t_property_company PC on PC.f_id = GB.t_property_company_f_id
		<!-- <choose>
			<when test="isadmin==0 and isSubUser==1"> 管理处用户，看到管理处下的物业
				LEFT JOIN t_property_management PM ON GB.t_property_management_f_id
				= PM.f_id AND PM.f_sys0_del_state = 0
				LEFT JOIN
				t_property_management_has_oms_user PMHOU ON
				PMHOU.t_property_management_f_id = PM.f_id AND
				PMHOU.f_sys0_del_state = 0
				LEFT JOIN t_oms_user OU ON OU.f_id =
				PMHOU.t_oms_user_f_id AND OU.f_sys0_del_state = 0
				LEFT JOIN t_property_company PC on PC.f_id = PM.t_property_company_f_id
			</when>
			<otherwise> 非管理处用户
				inner join t_property_company PC on PC.f_id =
				GB.t_property_company_f_id
				LEFT join t_oms_user OU on OU.f_id = PC.f_admin_id
			</otherwise>
		</choose> -->
		WHERE PB.f_sys0_del_state = 0
		<!-- 当isadmin == 1 ，即解放区后台管理员 要看到所有,其它的只能看到所管辖的 -->
		<choose>
			<when test="isRevenue == true">
			</when>
			<otherwise>
				<if test="paytimeType != null and paytimeType != '' "> and (PB.f_paytime_type = #{paytimeType} ) </if> <!-- 缴费时间方式=={"1":"月度缴费","2":"周期缴费"} -->
			</otherwise>
		</choose>
		<if test="buyerId != null and buyerId != '' ">
			and PB.f_is_pay = 1 and
			CASE
			WHEN f_payment_way = 1 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"} -->
			eo.f_buyer_id = #{buyerId}
			WHEN f_payment_way = 3 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣"} -->
			PB.f_sys0_upd_user = #{buyerId}
			WHEN f_payment_way = 4 THEN <!-- "1":"用户在线支付","2":"物业公司手工标记","3":"物业代扣卡划扣","4"物业宝抵扣} -->
			PB.f_sys0_upd_user = #{buyerId}
			ELSE
			eo.f_buyer_id = #{buyerId}
			END
		</if> <!-- 缴费解放号 -->
		<if test="pbtIsPropfee != null and pbtIsPropfee != '' "> and (pbt.f_is_prop_fee = #{pbtIsPropfee} ) </if> <!-- 账单开始日期 -->
		<if test="billMonthStart != null and billMonthStart != '' "> and (PB.f_bill_month_start &gt;= #{billMonthStart} ) </if> <!-- 账单开始日期 -->
		<if test="billMonthEnd != null and billMonthEnd != '' "> and (PB.f_bill_month_end &lt;= #{billMonthEnd}) </if> <!-- 账单结束日期 -->
		<if test="billTypeName != null and billTypeName != '' "> and (PB.f_bill_type_name like CONCAT('%',#{billTypeName},'%')) </if> <!-- 账单类型名称 -->
		<if test="isRevenue == false ">
			<if test="isadmin !=null and isadmin == 0">
				<if test="isBusiness != null and isBusiness ==0">and OU.f_id = #{omsUserId}</if>
				<if test="isBusiness != null and isBusiness ==1">and PC.f_follower = #{omsUserName}</if>
			</if>
		</if>
		<if test="gbName != null and gbName != '' "> and (GB.f_name like CONCAT('%',#{gbName},'%')) </if>
		<if test="contractNum != null and contractNum != '' "> and (RR.f_contract_no like CONCAT('%',#{contractNum},
			'%')) </if>
		<if test="ppName != null and ppName != '' "> and (PP.f_name like CONCAT('%',#{ppName},'%') ) </if>
		<!-- <if test="pbMonth != null and pbMonth != '' "> and (PB.f_month like
			CONCAT('%',#{pbMonth},'%') ) </if> -->

		<choose>
			<when test="isRevenue == true">
				<if test="pbMonth != null and pbMonth != '' ">
					AND CASE WHEN PB.f_paytime_type = 1 THEN <!-- 缴费时间方式=={"1":"月度缴费","2":"周期缴费"} -->
					(CASE WHEN NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month ELSE PB.f_month END LIKE CONCAT('%',#{pbMonth},'%'))
					ELSE
					((PB.f_bill_month_start &lt;= #{pbMonth}) AND (PB.f_bill_month_end &gt;= #{pbMonth}))
					END
				</if>
			</when>
			<otherwise>
				<if test="pbMonth != null and pbMonth != '' "> and (case when NOT ISNULL(PB.f_bill_month) THEN
					PB.f_bill_month ELSE PB.f_month END like CONCAT('%',#{pbMonth},'%') )
				</if>
			</otherwise>
		</choose>

		<if test="isPay != null and isPay != '' and isPay != 4"> and (PB.f_is_pay = #{isPay} ) </if>
		<if test="isPay == 4"> and (PB.f_is_pay = 1 or IFNULL(PB.f_finance_status, 0) = 1) </if>
		<if test="financeStatus != null"> and (IFNULL(PB.f_finance_status, 0) = #{financeStatus} ) </if>
		<if test="isRevenue == false "> <!-- 月度或周期账单查询  走这里 -->
			<if test="paymentWay != null and paymentWay != '' "> and (PB.f_payment_way = #{paymentWay} ) </if>
		</if>
		<if test="isRevenue == true "> <!-- 收益中心 物业代收费明细 走这里 -->
			<if test="paymentWay != null and paymentWay == 1"> and (PB.f_payment_way in (1, 3)) </if>
		</if>
		<if test="payTimeStart != null and payTimeStart != '' "> and (PB.f_pay_time &gt;= #{payTimeStart} ) </if>
		<if test="payTimeEnd != null and payTimeEnd != '' "> and (PB.f_pay_time &lt;= #{payTimeEnd} ) </if>
		<if test="pcName != null and pcName != '' "> and (PC.f_name like CONCAT('%',#{pcName},'%') ) </if>
		<if test="bName != null and bName != '' "> and (B.f_name like CONCAT('%',#{bName},'%') ) </if>
		<if test="unitName != null and unitName != '' "> and (RR.f_unit_name like CONCAT('%',#{unitName},'%') ) </if>
		<if test="roomNum != null and roomNum != '' "> and (RR.f_num_tail like CONCAT('%',#{roomNum},'%') ) </if>
		<if test="payDayStart != null and payDayStart != '' "> and PB.f_pay_day_start &gt;= #{payDayStart}  </if>
		<if test="payDayEnd != null and payDayEnd != '' "> and PB.f_pay_day_end &lt;= #{payDayEnd} </if>
		<if test="isRevenue == true">
			<choose><!-- 财务or管理员可以查看所有数据 -->
				<when test="applyId != null and applyId != '' ">
					AND EXISTS (
					SELECT RSA.f_id
					FROM t_revenue_signal_amount RSA WHERE 1=1
					AND RSA.f_mini_role_type = 2
					AND RSA.f_goal_type = #{projectType}
					AND RSA.f_goal_id = PB.f_id
					AND RSA.f_sys0_del_state=0
					<choose>
						<when test="isadmin==1"> <!-- 财务or管理员只可查财务所见数据 -->
							AND (RSA.f_rev_apply_finance_id = #{applyId} ) AND RSA.f_amount > 0
						</when>
						<otherwise>
							AND (RSA.f_rev_apply_id = #{applyId} ) AND RSA.f_amount > 0
						</otherwise>
					</choose>
					)
				</when>
				<when test="roleType == 1 or roleType == 4">
					AND EXISTS (
					SELECT RSA.f_id
					FROM t_revenue_signal_amount RSA WHERE 1=1
					AND RSA.f_mini_role_type = 2
					AND RSA.f_goal_type = #{projectType}
					AND RSA.f_amount > 0
					AND RSA.f_goal_id = PB.f_id
					AND RSA.f_sys0_del_state=0
					<if test="tkStatus_wy != null and tkStatus_wy != '' "> AND (RSA.f_tk_status = #{tkStatus_wy} )</if>
					<if test="applyId != null and applyId != '' "> AND (RSA.f_rev_apply_id = #{applyId} ) </if>
					)
				</when>
				<otherwise> <!-- 物业、管理员，等代理等角色 -->
					AND EXISTS (
					SELECT RSA.f_id
					FROM t_revenue_signal_amount RSA WHERE 1=1
					AND RSA.f_mini_role_type = 2
					AND RSA.f_goal_type = #{projectType}
					AND RSA.f_goal_id = PB.f_id
					<choose>
						<when test="roleType == 13">
							AND RSA.f_mini_role_type = 2
							and RSA.t_property_management_f_id = #{roleId}
						</when>
						<otherwise>
							AND RSA.f_mini_role_id = #{roleId}
						</otherwise>
					</choose>
					AND RSA.f_sys0_del_state=0
					AND RSA.f_amount > 0
					<if test="tkStatus_wy != null and tkStatus_wy != '' "> AND (RSA.f_tk_status = #{tkStatus_wy} ) AND RSA.f_amount > 0 </if>
					<if test="applyId != null and applyId != '' "> AND (RSA.f_rev_apply_id = #{applyId} ) </if>
					)
				</otherwise>
			</choose>

		</if>
	</sql>
	<!-- 导出月度账单 -->
	<select id="select_paybill_for_export_revenue" parameterType="java.util.Map"
			resultMap="payBillWithFeeDetailEntity">
		select distinct GB.f_name groupBuildingName, B.f_name buildingName,
		RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
		RR.f_contract_no contractNum, PP.f_name propertyProprietorName,
		PP.f_identify_no identifyNo,
		GB.f_pay_period_start payPeriodStart, GB.f_pay_period_end payPeriodEnd,
		date_format(PB.f_bill_month_start,'%Y年%m月') PBbillMonthStart,
		date_format(PB.f_bill_month_end,'%Y年%m月') PBbillMonthEnd,
		date_format(case when NOT ISNULL(PB.f_bill_month) THEN PB.f_bill_month
		ELSE PB.f_month END,'%Y年%m月') as PBmonth,
		PB.f_id as PBid,PB.f_amount as PBamount,date_format(PB.f_bill_month,'%Y-%m-%d
		%T') as PBbillMonth,PB.f_is_pay as PBisPay,IFNULL(PB.f_finance_status, 0) PBfinanceStatus,PB.f_dedu_price PBdeduPrice,PB.f_payment_way as
		PBpaymentWay,PB.t_real_room_f_id as
		PBtRealRoomFId,PB.f_property_proprietor_id as
		PBpropertyProprietorId,
		<!-- 如果为“物业代扣卡划扣”，则从t_property_card_deduction_detail表中取求和值，否则，取t_pay_bill原数据 -->
		IFNULL(if(PB.f_payment_way = 3,
		(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0))FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id=PB.f_id AND _pcd.f_sys0_del_state = 0),
		PB.f_succ_pay_amount), 0)as	PBsuccPayAmount,
		PB.f_discount as PBdiscount,PB.f_prize_record_id as
		PBprizeRecordId,date_format(PB.f_sys0_upd_time,'%Y-%m-%d %T') as
		PBsys0UpdTime, PB.f_payment_way PBpaymentWay,
		PB.f_last_unpaid AS PBlastUnpaid
		<if test="isRevenue == true ">
			,(
			SELECT IFNULL(RSA.f_tk_status,-1)
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = 5 AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
			)AS ext_tkStatus_wy
			,(
			SELECT IFNULL(RSA.f_pay_flow_no,'')
			FROM t_revenue_signal_amount RSA WHERE RSA.f_mini_role_type = 2 AND RSA.f_goal_type = #{projectType} AND RSA.f_goal_id = PB.f_id AND RSA.f_sys0_del_state=0
			)AS ext_payFlowNo
		</if>

		,<include refid="propertyFeeDetailBase.queryHead_AppendTable" />
		,EO.f_order_no orderNo
		,EO.f_pay_method payMethod
		,PB.f_is_prop_fee PBisPropFee
		,(SELECT SUM(IFNULL(pcdd.f_ptbt_amt, 0)) FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id)/100.0 cardSubsidyAmt
		,(SELECT SUM(IFNULL(pcdd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id)/100.0 cardRealPayAmt
		,(SELECT f_order_no FROM t_property_card_deduction_detail pcdd WHERE pcdd.t_pay_bill_f_id = PB.f_id LIMIT 1) cardOrderNo

		FROM t_pay_bill PB
		inner join t_property_proprietor PP on PP.f_id = PB.f_property_proprietor_id
		inner join t_real_room RR on RR.f_id = PB.t_real_room_f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		inner join t_property_fee_detail PFD on PFD.t_pay_bill_f_id = PB.f_id

		left join t_ebuy_order_has_t_pay_bill EOHTPB on EOHTPB.t_pay_bill_f_id =PB.f_id
		left join t_ebuy_order EO on EOHTPB.t_ebuy_order_f_id = EO.f_id and EO.f_pay_status = 2 <!--EO.f_pay_status = 2，即 导出时未支付成功的没有商户订单号 -->

		WHERE (EO.f_sys0_del_state = 0 or EO.f_id is null)/*代扣卡续费，手工标记等没有生成ebuy_order，所以连表查询结果为空*/
		<choose>
			<when test="isPay != null and isPay=='2'.toString() and financeStatus != null and financeStatus=='1'.toString()"><!-- 部分已缴 -->
				AND PB.f_finance_status = 1 AND PB.f_is_pay = 2
			</when>
			<when test="isPay != null and isPay=='1'.toString()"><!--已缴 -->
				AND PB.f_is_pay = 1
				AND (
					PB.f_finance_status = 1
					OR PB.f_payment_way = 3
					OR (EO.f_pay_status = 2 and PB.f_payment_way = 1)
				)
			</when>
			<otherwise>
				AND (
				(
				PB.f_is_pay = 1
				AND (
					PB.f_finance_status = 1
					OR PB.f_payment_way = 3
					OR (EO.f_pay_status = 2 and PB.f_payment_way = 1)
				)
				)
				OR (PB.f_finance_status = 1 AND PB.f_is_pay = 2)
				)
			</otherwise>
		</choose>

		AND PB.f_id IN (
		<foreach item="item" index="index" collection="payBillIdList"
				 separator=","> #{item} </foreach>
		)
		ORDER BY PB.f_bill_month, GB.f_id desc, B.f_name_char_order,B.f_name_digit_order+0, RR.f_unit_name, RR.f_num_tail_char_order, RR.f_num_tail_digit_order+0, PB.f_id, PFD.f_type
	</select>

	<!--查询账单欠费金额-->
	<select id="getUnpaidAmtById" parameterType="java.util.Map" resultType="java.lang.Long">
		SELECT
			SUM(
				CASE
					WHEN (pb.f_is_pay = 2 AND (pb.f_finance_status != 1 OR ISNULL(pb.f_finance_status) OR pb.f_finance_status='')) THEN pb.f_amount/*不包含部分已缴的*/
					WHEN (pb.f_is_pay = 2 AND pb.f_finance_status = 1) THEN (pb.f_amount - pb.f_dedu_price)/*部分已缴的取未抵扣金额*/
					ELSE
						0
				END
			)

		FROM t_property_fee_detail_unpaid aa
		INNER JOIN t_pay_bill pb ON aa.t_unpaid_pay_bill_id = pb.f_id AND pb.f_sys0_del_state=0 and aa.t_pay_bill_id = #{id}
		INNER JOIN t_group_building_bill_cycle gbbc ON gbbc.f_id = pb.t_bill_cycle_id
		INNER JOIN t_real_room rr ON rr.f_id = pb.t_real_room_f_id AND rr.f_check_status IN (1, 9)
		INNER JOIN t_building b ON rr.t_building_f_id = b.f_id AND b.f_check_status IN (1, 9)
		INNER JOIN t_group_building GB ON GB.f_id = b.t_group_building_f_id
		INNER JOIN t_property_proprietor PP ON PP.f_id = pb.f_property_proprietor_id
	</select>
	<resultMap type="com.cnfantasia.server.api.groupBuildingCycleCfg.entity.UnPaidPayBillEntity"
			id="getUnpaidListMap" extends="payBillBase.payBillBaseMap">
		<collection property="propertyFeeDetailList" resultMap="propertyFeeDetailBase.propertyFeeDetailBaseMap_AppendTable" />
	</resultMap>
	<!--查询欠费列表-->
	<select id="getUnpaidListById" parameterType="java.math.BigInteger" resultMap="getUnpaidListMap">
		SELECT pb.*,<include refid="propertyFeeDetailBase.queryHead_AppendTable" />
		FROM
		t_property_fee_detail_unpaid pfdu
		INNER JOIN t_pay_bill pb ON pb.f_id = pfdu.t_unpaid_pay_bill_id
		INNER JOIN t_property_fee_detail pfd ON pfd.t_pay_bill_f_id = pb.f_id
			AND pb.f_sys0_del_state = 0 AND pfd.f_sys0_del_state = 0 AND pfd.f_total_price > 0
		INNER JOIN t_group_building_bill_cycle gbbc ON gbbc.f_id = pb.t_bill_cycle_id
		INNER JOIN t_real_room rr ON rr.f_id = pb.t_real_room_f_id AND rr.f_check_status IN (1, 9)
		INNER JOIN t_building b ON rr.t_building_f_id = b.f_id AND b.f_check_status IN (1, 9)
		INNER JOIN t_group_building GB ON GB.f_id = b.t_group_building_f_id
		INNER JOIN t_property_proprietor PP ON PP.f_id = pb.f_property_proprietor_id
		WHERE pfdu.t_pay_bill_id = #{id}
		AND pb.f_is_pay = 2 AND pb.f_sys0_del_state=0 AND pb.f_bank_collection_status != 1
		ORDER BY gbbc.f_bill_month_start DESC
	</select>

	<!--查询所有账单额金额信息-->
	<select id="getPayBillsAmounts" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT
		ROUND(sum(PB.f_amount), 2) totalAmount,
		ROUND(sum(IFNULL(
						IF (PB.f_payment_way = 3,
							(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id = PB.f_id AND _pcd.f_sys0_del_state = 0
							),PB.f_succ_pay_amount),0
					)
				), 2) userPay,
		ROUND(sum(PB.f_dedu_price), 2) deduAmount,
		ROUND(sum(
				CASE WHEN (PB.f_is_pay = 1 AND PB.f_finance_status = 1) THEN (PB.f_amount - PB.f_dedu_price - IFNULL(
						IF (PB.f_payment_way = 3,
						(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id = PB.f_id AND _pcd.f_sys0_del_state = 0
						),PB.f_succ_pay_amount),0
						))
					 WHEN (PB.f_is_pay = 1 AND PB.f_finance_status = 0) THEN (PB.f_amount -IFNULL(
						IF (PB.f_payment_way = 3,
						(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id = PB.f_id AND _pcd.f_sys0_del_state = 0
						),PB.f_succ_pay_amount),0
						))
					 WHEN (ISNULL(PB.f_finance_status) AND NOT ISNULL(IFNULL(
						IF (PB.f_payment_way = 3,
						(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id = PB.f_id AND _pcd.f_sys0_del_state = 0
						),PB.f_succ_pay_amount),0
						))) THEN (PB.f_amount - IFNULL(
							IF (PB.f_payment_way = 3,
							(SELECT sum(ifnull(_pcd.f_real_pay_amt, 0)) FROM t_property_card_deduction_detail _pcd WHERE _pcd.t_pay_bill_f_id = PB.f_id AND _pcd.f_sys0_del_state = 0
							),PB.f_succ_pay_amount),0
							))
					 ELSE 0
				END
			), 2) perAmount
		<include refid="select_payBill_for_list_from_noRepeat" />
	</select>

	<!--查询账单是否在托收中-->
	<select id="isBankCollectionByPayBillId" parameterType="java.math.BigInteger" resultType="java.lang.Integer">
		SELECT
			COUNT(1)
		FROM
			t_pay_bill pb
		WHERE
			(
				pb.f_id = #{payBillId}
				OR pb.f_id IN (
					SELECT
						pfdu.t_pay_bill_id
					FROM
						t_property_fee_detail_unpaid pfdu
					WHERE
						pfdu.t_unpaid_pay_bill_id = #{payBillId}
				)
			)
		AND pb.f_bank_collection_status = 1
		AND pb.f_sys0_del_state = 0
		AND pb.f_is_pay = 2;
	</select>
</mapper>
