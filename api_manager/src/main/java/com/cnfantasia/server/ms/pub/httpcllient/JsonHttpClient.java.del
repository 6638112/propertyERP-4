package com.cnfantasia.server.ms.pub.httpcllient;

import java.util.HashMap;
import java.util.Map;

import org.apache.commons.httpclient.HttpMethod;
import org.apache.commons.httpclient.HttpStatus;
import org.apache.commons.httpclient.methods.PostMethod;

import com.alibaba.fastjson.JSON;
import com.cnfantasia.server.common.exception.SystemException;
import com.cnfantasia.server.common.json.JsonRequest;
import com.cnfantasia.server.common.json.JsonResponse;
import com.cnfantasia.server.ms.pub.constant.FocConstants;

/**
 * 类名：JsonHttpClient  <br />
 *
 * 功能：基于JSON的HttpClient实现
 *
 */
public class JsonHttpClient extends AbstractHttpClient<JsonRequest, JsonResponse> {
	
	// 
	private String contentType;

	/**
	 * 
	 * 功能: <br/>
	 * 
	 */
	@Override
	protected void preMethod(JsonRequest args, HttpMethod httpMethod) throws Exception {
		if (! (httpMethod instanceof PostMethod)) {
			throw new SystemException("system.error.jsonhttpclient.not.support.method", new Object[] { httpMethod.getClass().getName() });
		}

		super.preMethod(args, httpMethod);
		
		// syl--del
//		setRequestEntity(args, httpMethod);
	}
	/**
	 * 2014-6-5 16:15:59 syl-add
	 */
	@Override
	protected Map<String,String> getParameters(JsonRequest args) {
		Map<String,Object> params = args.getRequest().getParams();
		 Map<String,String> resMap = new HashMap<String, String>();
		 for(String key:params.keySet()){
			 resMap.put(key, params.get(key).toString());
		 }
		 return resMap;
	}
	
//syl--del
//	/**
//	 * 
//	 * 功能： <br/>
//	 *
//	 * @author xtwin <br/>
//	 * @version 2013-11-27 下午04:09:02 <br/>
//	 */
//	protected void setRequestEntity(JsonRequest args, HttpMethod httpMethod) throws Exception {
//		// 将数据转换为json体
//		((PostMethod) httpMethod).setRequestEntity(new StringRequestEntity(JSON.toJSONString(args), getContentType(), httpMethod.getParams().getContentCharset()));
//		//((PostMethod) httpMethod).setRequestEntity(new ByteArrayRequestEntity(JSON.toJSONString(args).getBytes()));
//	}

	/**
	 * 
	 * 功能: <br/>
	 * 
	 */
	@Override
	protected JsonResponse postMethod(JsonRequest args, HttpMethod httpMethod) throws Exception {
		int statusCode = httpMethod.getStatusCode();
		
		JsonResponse response = null;
		
		if (statusCode == HttpStatus.SC_OK) {
			byte[] datas = httpMethod.getResponseBody();
			
			// 读取服务端返回数据
			response = JSON.parseObject(new String(datas, httpMethod.getParams().getContentCharset()), JsonResponse.class);
		} else {
			response = new JsonResponse();
			response.setStatus(FocConstants.ResponseStatus.COMMUNICATE_ERR);
//			response.getStatus().setCode("9" + statusCode);
//			response.getStatus().setMsg("http.request.is.error");
		}
		
		return response;
	}
	
	/**
	 * 功能: <br/>
	 * 
	 */
	@Override
	protected String getUrl(JsonRequest args) {
		return super.getUrl(args) + args.getRequest().getTransaction();
	}
	
	/**
	 * 
	 * 功能： <br/>
	 *
	 */
	public String getContentType() {
		
		if (null == contentType) {
			Map<String, String> headers = getHeaders();
			
			if (null != headers) {
				contentType = headers.get("content-type");
			}
			
			if (null == contentType) {
				contentType = "application/json";
			}
		}
		
		return contentType;
	}

	/**
	 */
	public void setContentType(String contentType) {
		this.contentType = contentType;
	}
}
