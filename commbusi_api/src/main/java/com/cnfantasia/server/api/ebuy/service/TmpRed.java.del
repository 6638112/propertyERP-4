/**   
* Filename:    TmpRed.java   
* @version:    1.0  
* Create at:   2015年2月9日 上午3:06:44   
* Description:  
*   
* Modification History:   
* Date        Author      Version     Description   
* ----------------------------------------------------------------- 
* 2015年2月9日    shiyl      1.0         1.0 Version   
*/
package com.cnfantasia.server.api.ebuy.service;


/**
 * Filename:    TmpRed.java
 * @version:    1.0.0
 * Create at:   2015年2月9日 上午3:06:44
 * Description:
 *
 * Modification History:
 * Date           Author           Version           Description
 * ------------------------------------------------------------------
 * 2015年2月9日       shiyl             1.0             1.0 Version
 */
public class TmpRed {
	public static void main(String[] args) {
		
	}
//	public static void test(Long productQty) {
//			//查询所有可用的红包，分析使用哪些红包
//			List<EbuyOrderHasTEbuyProduct> currEbuyCarProdList = commonRedenvelopeDao.selectPayRedEnvelopeAvailable(userId);//查询商品列表，自己的排序在前
//			Long collectCount = 0L;
//			List<EbuyOrderHasTEbuyProduct> toUpdateEbuyCarProdList = new ArrayList<EbuyOrderHasTEbuyProduct>();//待更新的红包信息
//			Map<EbuyOrderHasTEbuyProduct,Long> payRedEnvelopeUsedMoney = new HashMap<EbuyOrderHasTEbuyProduct, Long>();//每个红包对应消费的金额 key为toUpdatePayRedEnvelopeList的取值
//			for(EbuyOrderHasTEbuyProduct tmpPayRed:currEbuyCarProdList){
//				EbuyOrderHasTEbuyProduct updPayRedEnvelope = new EbuyOrderHasTEbuyProduct();
//				toUpdateEbuyCarProdList.add(updPayRedEnvelope);
//				
//				updPayRedEnvelope.setId(tmpPayRed.getId());
//				if(collectCount+tmpPayRed.getProductQty()>=productQty){
//					if(collectCount+tmpPayRed.getProductQty()>productQty){//当前移除了一部分商品
//						Long partMoney = productQty-collectCount;
//						collectCount+=partMoney;
//						updPayRedEnvelope.setProductQty(tmpPayRed.getProductQty()-partMoney);
//						payRedEnvelopeUsedMoney.put(updPayRedEnvelope, partMoney);
//					}else{//当前移除数量刚好用完
//						collectCount+=tmpPayRed.getProductQty();
//						updPayRedEnvelope.setProductQty(0L);//购买数据置0
//						payRedEnvelopeUsedMoney.put(updPayRedEnvelope, tmpPayRed.getProductQty());
//					}
//					break;
//				}else{//还不够
//					collectCount+=tmpPayRed.getProductQty();
//					updPayRedEnvelope.setProductQty(0L);//购买数据置0
//					payRedEnvelopeUsedMoney.put(updPayRedEnvelope, tmpPayRed.getProductQty());
//				}
//			}
//			if(collectCount<productQty){
//				throw new BusinessRuntimeException("CommonEbuyService.updateOrderByHb.hbBalance.notEnough02.error",new Object[]{PriceUtil.div100(collectCount)});
//			}else if(collectCount>productQty){
//				throw new BusinessRuntimeException("CommonEbuyService.updateOrderByHb.hbBalance.collectMoney.error",new Object[]{PriceUtil.div100(collectCount)});
//			}
//	}
}
