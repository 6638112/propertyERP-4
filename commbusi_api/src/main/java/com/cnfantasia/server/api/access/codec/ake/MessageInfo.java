// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: MessageInfo.proto

package com.cnfantasia.server.api.access.codec.ake;

public final class MessageInfo {
    private MessageInfo() {
    }

    public static void registerAllExtensions(com.google.protobuf.ExtensionRegistry registry) {
    }

    public interface MessageOrBuilder extends
            // @@protoc_insertion_point(interface_extends:netty.Message)
            com.google.protobuf.MessageOrBuilder {

        /**
         * <code>required string messageId = 1;</code>
         *
         * <pre>
         * 消息ID
         * </pre>
         */
        boolean hasMessageId();

        /**
         * <code>required string messageId = 1;</code>
         *
         * <pre>
         * 消息ID
         * </pre>
         */
        java.lang.String getMessageId();

        /**
         * <code>required string messageId = 1;</code>
         *
         * <pre>
         * 消息ID
         * </pre>
         */
        com.google.protobuf.ByteString getMessageIdBytes();

        /**
         * <code>required .netty.Message.MessageType messageType = 2;</code>
         *
         * <pre>
         * 消息类型
         * </pre>
         */
        boolean hasMessageType();

        /**
         * <code>required .netty.Message.MessageType messageType = 2;</code>
         *
         * <pre>
         * 消息类型
         * </pre>
         */
        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType getMessageType();

        /**
         * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
         *
         * <pre>
         * 业务类型
         * </pre>
         */
        boolean hasServiceType();

        /**
         * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
         *
         * <pre>
         * 业务类型
         * </pre>
         */
        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType getServiceType();

        /**
         * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
         *
         * <pre>
         * 业务请求消息
         * </pre>
         */
        boolean hasReqMeesage();

        /**
         * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
         *
         * <pre>
         * 业务请求消息
         * </pre>
         */
        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage getReqMeesage();

        /**
         * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
         *
         * <pre>
         * 业务请求消息
         * </pre>
         */
        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder getReqMeesageOrBuilder();

        /**
         * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
         *
         * <pre>
         * 业务响应消息
         * </pre>
         */
        boolean hasRespMessage();

        /**
         * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
         *
         * <pre>
         * 业务响应消息
         * </pre>
         */
        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage getRespMessage();

        /**
         * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
         *
         * <pre>
         * 业务响应消息
         * </pre>
         */
        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder getRespMessageOrBuilder();
    }

    /**
     * Protobuf type {@code netty.Message}
     */
    public static final class Message extends com.google.protobuf.GeneratedMessage implements
            // @@protoc_insertion_point(message_implements:netty.Message)
            MessageOrBuilder {
        // Use Message.newBuilder() to construct.
        private Message(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
            super(builder);
            this.unknownFields = builder.getUnknownFields();
        }

        private Message(boolean noInit) {
            this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
        }

        private static final Message defaultInstance;

        public static Message getDefaultInstance() {
            return defaultInstance;
        }

        public Message getDefaultInstanceForType() {
            return defaultInstance;
        }

        private final com.google.protobuf.UnknownFieldSet unknownFields;

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
            return this.unknownFields;
        }

        private Message(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            initFields();
            int mutable_bitField0_ = 0;
            com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                    case 0:
                        done = true;
                        break;
                    default: {
                        if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                            done = true;
                        }
                        break;
                    }
                    case 10: {
                        com.google.protobuf.ByteString bs = input.readBytes();
                        bitField0_ |= 0x00000001;
                        messageId_ = bs;
                        break;
                    }
                    case 16: {
                        int rawValue = input.readEnum();
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType value = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType
                                .valueOf(rawValue);
                        if (value == null) {
                            unknownFields.mergeVarintField(2, rawValue);
                        } else {
                            bitField0_ |= 0x00000002;
                            messageType_ = value;
                        }
                        break;
                    }
                    case 24: {
                        int rawValue = input.readEnum();
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType value = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType
                                .valueOf(rawValue);
                        if (value == null) {
                            unknownFields.mergeVarintField(3, rawValue);
                        } else {
                            bitField0_ |= 0x00000004;
                            serviceType_ = value;
                        }
                        break;
                    }
                    case 34: {
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder subBuilder = null;
                        if (((bitField0_ & 0x00000008) == 0x00000008)) {
                            subBuilder = reqMeesage_.toBuilder();
                        }
                        reqMeesage_ = input.readMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.PARSER,
                                extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(reqMeesage_);
                            reqMeesage_ = subBuilder.buildPartial();
                        }
                        bitField0_ |= 0x00000008;
                        break;
                    }
                    case 42: {
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder subBuilder = null;
                        if (((bitField0_ & 0x00000010) == 0x00000010)) {
                            subBuilder = respMessage_.toBuilder();
                        }
                        respMessage_ = input.readMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.PARSER,
                                extensionRegistry);
                        if (subBuilder != null) {
                            subBuilder.mergeFrom(respMessage_);
                            respMessage_ = subBuilder.buildPartial();
                        }
                        bitField0_ |= 0x00000010;
                        break;
                    }
                    }
                }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(this);
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
            } finally {
                this.unknownFields = unknownFields.build();
                makeExtensionsImmutable();
            }
        }

        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.class,
                            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.Builder.class);
        }

        public static com.google.protobuf.Parser<Message> PARSER = new com.google.protobuf.AbstractParser<Message>() {
            public Message parsePartialFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return new Message(input, extensionRegistry);
            }
        };

        @java.lang.Override
        public com.google.protobuf.Parser<Message> getParserForType() {
            return PARSER;
        }

        /**
         * Protobuf enum {@code netty.Message.MessageType}
         */
        public enum MessageType implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>SERVICE_REQ = 0;</code>
             *
             * <pre>
             * 业务请求
             * </pre>
             */
            SERVICE_REQ(0, 0), /**
                                * <code>SERVICE_RESP = 1;</code>
                                *
                                * <pre>
                                * 业务响应
                                * </pre>
                                */
            SERVICE_RESP(1, 1), /**
                                 * <code>HEARTBEAT_REQ = 2;</code>
                                 *
                                 * <pre>
                                 * 心跳请求
                                 * </pre>
                                 */
            HEARTBEAT_REQ(2, 2), /**
                                  * <code>HEARTBEAT_RESP = 3;</code>
                                  *
                                  * <pre>
                                  * 心跳响应
                                  * </pre>
                                  */
            HEARTBEAT_RESP(3, 3),;

            /**
             * <code>SERVICE_REQ = 0;</code>
             *
             * <pre>
             * 业务请求
             * </pre>
             */
            public static final int SERVICE_REQ_VALUE = 0;
            /**
             * <code>SERVICE_RESP = 1;</code>
             *
             * <pre>
             * 业务响应
             * </pre>
             */
            public static final int SERVICE_RESP_VALUE = 1;
            /**
             * <code>HEARTBEAT_REQ = 2;</code>
             *
             * <pre>
             * 心跳请求
             * </pre>
             */
            public static final int HEARTBEAT_REQ_VALUE = 2;
            /**
             * <code>HEARTBEAT_RESP = 3;</code>
             *
             * <pre>
             * 心跳响应
             * </pre>
             */
            public static final int HEARTBEAT_RESP_VALUE = 3;

            public final int getNumber() {
                return value;
            }

            public static MessageType valueOf(int value) {
                switch (value) {
                case 0:
                    return SERVICE_REQ;
                case 1:
                    return SERVICE_RESP;
                case 2:
                    return HEARTBEAT_REQ;
                case 3:
                    return HEARTBEAT_RESP;
                default:
                    return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<MessageType> internalGetValueMap() {
                return internalValueMap;
            }

            private static com.google.protobuf.Internal.EnumLiteMap<MessageType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
                public MessageType findValueByNumber(int number) {
                    return MessageType.valueOf(number);
                }
            };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.getDescriptor().getEnumTypes().get(0);
            }

            private static final MessageType[] VALUES = values();

            public static MessageType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int index;
            private final int value;

            private MessageType(int index, int value) {
                this.index = index;
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:netty.Message.MessageType)
        }

        /**
         * Protobuf enum {@code netty.Message.ServiceType}
         */
        public enum ServiceType implements com.google.protobuf.ProtocolMessageEnum {
            /**
             * <code>LOGIN = 0;</code>
             *
             * <pre>
             * 登录
             * </pre>
             */
            LOGIN(0, 0), /**
                          * <code>SEARCH_CAR = 1;</code>
                          *
                          * <pre>
                          * 反向寻车
                          * </pre>
                          */
            SEARCH_CAR(1, 1), /**
                               * <code>SYNC_PARK = 2;</code>
                               *
                               * <pre>
                               * 停车场信息同步
                               * </pre>
                               */
            SYNC_PARK(2, 2), /**
                              * <code>REPORT_CARPORTS = 3;</code>
                              *
                              * <pre>
                              * 上报剩余车位数
                              * </pre>
                              */
            REPORT_CARPORTS(3, 3), /**
                                    * <code>CAR_IN = 4;</code>
                                    *
                                    * <pre>
                                    * 车入场
                                    * </pre>
                                    */
            CAR_IN(4, 4), /**
                           * <code>CAR_OUT = 5;</code>
                           *
                           * <pre>
                           * 车离场
                           * </pre>
                           */
            CAR_OUT(5, 5), /**
                            * <code>PREPAY_FEE = 6;</code>
                            *
                            * <pre>
                            * 预付停车费
                            * </pre>
                            */
            PREPAY_FEE(6, 6), /**
                               * <code>QUERY_FEE = 7;</code>
                               *
                               * <pre>
                               * 查询停车费
                               * </pre>
                               */
            QUERY_FEE(7, 7), /**
                              * <code>SYNC_PARK_BILL = 8;</code>
                              *
                              * <pre>
                              * 同步停车场账单
                              * </pre>
                              */
            SYNC_PARK_BILL(8, 8), /**
                                   * <code>SYNC_YDT_BILL = 9;</code>
                                   *
                                   * <pre>
                                   * 同步一点停账单
                                   * </pre>
                                   */
            SYNC_YDT_BILL(9, 9), /**
                                  * <code>SYNC_SERVER_TIME = 10;</code>
                                  *
                                  * <pre>
                                  * 同步时间
                                  * </pre>
                                  */
            SYNC_SERVER_TIME(10, 10), /**
                                       * <code>QUERY_COUPON = 11;</code>
                                       *
                                       * <pre>
                                       * 查询优惠券
                                       * </pre>
                                       */
            QUERY_COUPON(11, 11), /**
                                   * <code>CORRECT_PARK_CAR_CODE = 12;</code>
                                   *
                                   * <pre>
                                   * 线下校正车牌
                                   * </pre>
                                   */
            CORRECT_PARK_CAR_CODE(12, 12), /**
                                            * <code>CORRECT_YDT_CAR_CODE = 13;</code>
                                            *
                                            * <pre>
                                            * 线上校正车牌
                                            * </pre>
                                            */
            CORRECT_YDT_CAR_CODE(13, 13), /**
                                           * <code>UPLOAD_CAMERA_IMAGE = 14;</code>
                                           *
                                           * <pre>
                                           * 上传摄像头图片
                                           * </pre>
                                           */
            UPLOAD_CAMERA_IMAGE(14, 14), /**
                                          * <code>QUERY_MONTH_CARD = 15;</code>
                                          *
                                          * <pre>
                                          * 查询停车场月卡信息
                                          * </pre>
                                          */
            QUERY_MONTH_CARD(15, 15), /**
                                       * <code>RENEWALFEES_OF_MONTH_CARD = 16;</code>
                                       *
                                       * <pre>
                                       * 停车场月卡续费
                                       * </pre>
                                       */
            RENEWALFEES_OF_MONTH_CARD(16, 16), /**
                                                * <code>OPEN_GATE_REQ = 17;</code>
                                                *
                                                * <pre>
                                                * 平台开关闸控制
                                                * </pre>
                                                */
            OPEN_GATE_REQ(17, 17), /**
                                    * <code>UPLOAD_CAR_LOCATION = 18;</code>
                                    *
                                    * <pre>
                                    * 上报车辆位置信息
                                    * </pre>
                                    */
            UPLOAD_CAR_LOCATION(18, 18), /**
                                          * <code>SEND_TRADER_COUPON = 19;</code>
                                          *
                                          * <pre>
                                          * 下发商家优惠券
                                          * </pre>
                                          */
            SEND_TRADER_COUPON(19, 19), /**
                                         * <code>UPDATE_TRADER_COUPON_STATUS = 20;</code>
                                         *
                                         * <pre>
                                         * 更新商家优惠券状态
                                         * </pre>
                                         */
            UPDATE_TRADER_COUPON_STATUS(20, 20),;

            /**
             * <code>LOGIN = 0;</code>
             *
             * <pre>
             * 登录
             * </pre>
             */
            public static final int LOGIN_VALUE = 0;
            /**
             * <code>SEARCH_CAR = 1;</code>
             *
             * <pre>
             * 反向寻车
             * </pre>
             */
            public static final int SEARCH_CAR_VALUE = 1;
            /**
             * <code>SYNC_PARK = 2;</code>
             *
             * <pre>
             * 停车场信息同步
             * </pre>
             */
            public static final int SYNC_PARK_VALUE = 2;
            /**
             * <code>REPORT_CARPORTS = 3;</code>
             *
             * <pre>
             * 上报剩余车位数
             * </pre>
             */
            public static final int REPORT_CARPORTS_VALUE = 3;
            /**
             * <code>CAR_IN = 4;</code>
             *
             * <pre>
             * 车入场
             * </pre>
             */
            public static final int CAR_IN_VALUE = 4;
            /**
             * <code>CAR_OUT = 5;</code>
             *
             * <pre>
             * 车离场
             * </pre>
             */
            public static final int CAR_OUT_VALUE = 5;
            /**
             * <code>PREPAY_FEE = 6;</code>
             *
             * <pre>
             * 预付停车费
             * </pre>
             */
            public static final int PREPAY_FEE_VALUE = 6;
            /**
             * <code>QUERY_FEE = 7;</code>
             *
             * <pre>
             * 查询停车费
             * </pre>
             */
            public static final int QUERY_FEE_VALUE = 7;
            /**
             * <code>SYNC_PARK_BILL = 8;</code>
             *
             * <pre>
             * 同步停车场账单
             * </pre>
             */
            public static final int SYNC_PARK_BILL_VALUE = 8;
            /**
             * <code>SYNC_YDT_BILL = 9;</code>
             *
             * <pre>
             * 同步一点停账单
             * </pre>
             */
            public static final int SYNC_YDT_BILL_VALUE = 9;
            /**
             * <code>SYNC_SERVER_TIME = 10;</code>
             *
             * <pre>
             * 同步时间
             * </pre>
             */
            public static final int SYNC_SERVER_TIME_VALUE = 10;
            /**
             * <code>QUERY_COUPON = 11;</code>
             *
             * <pre>
             * 查询优惠券
             * </pre>
             */
            public static final int QUERY_COUPON_VALUE = 11;
            /**
             * <code>CORRECT_PARK_CAR_CODE = 12;</code>
             *
             * <pre>
             * 线下校正车牌
             * </pre>
             */
            public static final int CORRECT_PARK_CAR_CODE_VALUE = 12;
            /**
             * <code>CORRECT_YDT_CAR_CODE = 13;</code>
             *
             * <pre>
             * 线上校正车牌
             * </pre>
             */
            public static final int CORRECT_YDT_CAR_CODE_VALUE = 13;
            /**
             * <code>UPLOAD_CAMERA_IMAGE = 14;</code>
             *
             * <pre>
             * 上传摄像头图片
             * </pre>
             */
            public static final int UPLOAD_CAMERA_IMAGE_VALUE = 14;
            /**
             * <code>QUERY_MONTH_CARD = 15;</code>
             *
             * <pre>
             * 查询停车场月卡信息
             * </pre>
             */
            public static final int QUERY_MONTH_CARD_VALUE = 15;
            /**
             * <code>RENEWALFEES_OF_MONTH_CARD = 16;</code>
             *
             * <pre>
             * 停车场月卡续费
             * </pre>
             */
            public static final int RENEWALFEES_OF_MONTH_CARD_VALUE = 16;
            /**
             * <code>OPEN_GATE_REQ = 17;</code>
             *
             * <pre>
             * 平台开关闸控制
             * </pre>
             */
            public static final int OPEN_GATE_REQ_VALUE = 17;
            /**
             * <code>UPLOAD_CAR_LOCATION = 18;</code>
             *
             * <pre>
             * 上报车辆位置信息
             * </pre>
             */
            public static final int UPLOAD_CAR_LOCATION_VALUE = 18;
            /**
             * <code>SEND_TRADER_COUPON = 19;</code>
             *
             * <pre>
             * 下发商家优惠券
             * </pre>
             */
            public static final int SEND_TRADER_COUPON_VALUE = 19;
            /**
             * <code>UPDATE_TRADER_COUPON_STATUS = 20;</code>
             *
             * <pre>
             * 更新商家优惠券状态
             * </pre>
             */
            public static final int UPDATE_TRADER_COUPON_STATUS_VALUE = 20;

            public final int getNumber() {
                return value;
            }

            public static ServiceType valueOf(int value) {
                switch (value) {
                case 0:
                    return LOGIN;
                case 1:
                    return SEARCH_CAR;
                case 2:
                    return SYNC_PARK;
                case 3:
                    return REPORT_CARPORTS;
                case 4:
                    return CAR_IN;
                case 5:
                    return CAR_OUT;
                case 6:
                    return PREPAY_FEE;
                case 7:
                    return QUERY_FEE;
                case 8:
                    return SYNC_PARK_BILL;
                case 9:
                    return SYNC_YDT_BILL;
                case 10:
                    return SYNC_SERVER_TIME;
                case 11:
                    return QUERY_COUPON;
                case 12:
                    return CORRECT_PARK_CAR_CODE;
                case 13:
                    return CORRECT_YDT_CAR_CODE;
                case 14:
                    return UPLOAD_CAMERA_IMAGE;
                case 15:
                    return QUERY_MONTH_CARD;
                case 16:
                    return RENEWALFEES_OF_MONTH_CARD;
                case 17:
                    return OPEN_GATE_REQ;
                case 18:
                    return UPLOAD_CAR_LOCATION;
                case 19:
                    return SEND_TRADER_COUPON;
                case 20:
                    return UPDATE_TRADER_COUPON_STATUS;
                default:
                    return null;
                }
            }

            public static com.google.protobuf.Internal.EnumLiteMap<ServiceType> internalGetValueMap() {
                return internalValueMap;
            }

            private static com.google.protobuf.Internal.EnumLiteMap<ServiceType> internalValueMap = new com.google.protobuf.Internal.EnumLiteMap<ServiceType>() {
                public ServiceType findValueByNumber(int number) {
                    return ServiceType.valueOf(number);
                }
            };

            public final com.google.protobuf.Descriptors.EnumValueDescriptor getValueDescriptor() {
                return getDescriptor().getValues().get(index);
            }

            public final com.google.protobuf.Descriptors.EnumDescriptor getDescriptorForType() {
                return getDescriptor();
            }

            public static final com.google.protobuf.Descriptors.EnumDescriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.getDescriptor().getEnumTypes().get(1);
            }

            private static final ServiceType[] VALUES = values();

            public static ServiceType valueOf(com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
                if (desc.getType() != getDescriptor()) {
                    throw new java.lang.IllegalArgumentException("EnumValueDescriptor is not for this type.");
                }
                return VALUES[desc.getIndex()];
            }

            private final int index;
            private final int value;

            private ServiceType(int index, int value) {
                this.index = index;
                this.value = value;
            }

            // @@protoc_insertion_point(enum_scope:netty.Message.ServiceType)
        }

        public interface ReqMessageOrBuilder extends
                // @@protoc_insertion_point(interface_extends:netty.Message.ReqMessage)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>required int64 reqTime = 1;</code>
             *
             * <pre>
             * 发送时间
             * </pre>
             */
            boolean hasReqTime();

            /**
             * <code>required int64 reqTime = 1;</code>
             *
             * <pre>
             * 发送时间
             * </pre>
             */
            long getReqTime();

            /**
             * <code>optional string ver = 2;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            boolean hasVer();

            /**
             * <code>optional string ver = 2;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            java.lang.String getVer();

            /**
             * <code>optional string ver = 2;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            com.google.protobuf.ByteString getVerBytes();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getBusDataList();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getBusData(int index);

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            int getBusDataCount();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataOrBuilderList();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getBusDataOrBuilder(int index);
        }

        /**
         * Protobuf type {@code netty.Message.ReqMessage}
         */
        public static final class ReqMessage extends com.google.protobuf.GeneratedMessage implements
                // @@protoc_insertion_point(message_implements:netty.Message.ReqMessage)
                ReqMessageOrBuilder {
            // Use ReqMessage.newBuilder() to construct.
            private ReqMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private ReqMessage(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final ReqMessage defaultInstance;

            public static ReqMessage getDefaultInstance() {
                return defaultInstance;
            }

            public ReqMessage getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private ReqMessage(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            reqTime_ = input.readInt64();
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            ver_ = bs;
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                busData_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            busData_.add(input.readMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.PARSER,
                                    extensionRegistry));
                            break;
                        }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        busData_ = java.util.Collections.unmodifiableList(busData_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_ReqMessage_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_ReqMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.class,
                                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder.class);
            }

            public static com.google.protobuf.Parser<ReqMessage> PARSER = new com.google.protobuf.AbstractParser<ReqMessage>() {
                public ReqMessage parsePartialFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                    return new ReqMessage(input, extensionRegistry);
                }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<ReqMessage> getParserForType() {
                return PARSER;
            }

            private int bitField0_;
            public static final int REQTIME_FIELD_NUMBER = 1;
            private long reqTime_;

            /**
             * <code>required int64 reqTime = 1;</code>
             *
             * <pre>
             * 发送时间
             * </pre>
             */
            public boolean hasReqTime() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required int64 reqTime = 1;</code>
             *
             * <pre>
             * 发送时间
             * </pre>
             */
            public long getReqTime() {
                return reqTime_;
            }

            public static final int VER_FIELD_NUMBER = 2;
            private java.lang.Object ver_;

            /**
             * <code>optional string ver = 2;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            public boolean hasVer() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string ver = 2;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            public java.lang.String getVer() {
                java.lang.Object ref = ver_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        ver_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string ver = 2;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            public com.google.protobuf.ByteString getVerBytes() {
                java.lang.Object ref = ver_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    ver_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int BUSDATA_FIELD_NUMBER = 3;
            private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> busData_;

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getBusDataList() {
                return busData_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataOrBuilderList() {
                return busData_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            public int getBusDataCount() {
                return busData_.size();
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getBusData(int index) {
                return busData_.get(index);
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 3;</code>
             *
             * <pre>
             * 业务数据key - value格式
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getBusDataOrBuilder(int index) {
                return busData_.get(index);
            }

            private void initFields() {
                reqTime_ = 0L;
                ver_ = "";
                busData_ = java.util.Collections.emptyList();
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;

                if (!hasReqTime()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
                for (int i = 0; i < getBusDataCount(); i++) {
                    if (!getBusData(i).isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeInt64(1, reqTime_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeBytes(2, getVerBytes());
                }
                for (int i = 0; i < busData_.size(); i++) {
                    output.writeMessage(3, busData_.get(i));
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1)
                    return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(1, reqTime_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getVerBytes());
                }
                for (int i = 0; i < busData_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, busData_.get(i));
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @java.lang.Override
            protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(
                    com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(
                    com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseDelimitedFrom(
                    java.io.InputStream input) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseDelimitedFrom(
                    java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(
                    com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parseFrom(
                    com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code netty.Message.ReqMessage}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>implements
                    // @@protoc_insertion_point(builder_implements:netty.Message.ReqMessage)
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_ReqMessage_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_ReqMessage_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.class,
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder.class);
                }

                // Construct using
                // com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                        getBusDataFieldBuilder();
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    reqTime_ = 0L;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    ver_ = "";
                    bitField0_ = (bitField0_ & ~0x00000002);
                    if (busDataBuilder_ == null) {
                        busData_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        busDataBuilder_.clear();
                    }
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_ReqMessage_descriptor;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage getDefaultInstanceForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.getDefaultInstance();
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage build() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage buildPartial() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage result = new com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage(
                            this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                        to_bitField0_ |= 0x00000001;
                    }
                    result.reqTime_ = reqTime_;
                    if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                        to_bitField0_ |= 0x00000002;
                    }
                    result.ver_ = ver_;
                    if (busDataBuilder_ == null) {
                        if (((bitField0_ & 0x00000004) == 0x00000004)) {
                            busData_ = java.util.Collections.unmodifiableList(busData_);
                            bitField0_ = (bitField0_ & ~0x00000004);
                        }
                        result.busData_ = busData_;
                    } else {
                        result.busData_ = busDataBuilder_.build();
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage) {
                        return mergeFrom((com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage other) {
                    if (other == com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.getDefaultInstance())
                        return this;
                    if (other.hasReqTime()) {
                        setReqTime(other.getReqTime());
                    }
                    if (other.hasVer()) {
                        bitField0_ |= 0x00000002;
                        ver_ = other.ver_;
                        onChanged();
                    }
                    if (busDataBuilder_ == null) {
                        if (!other.busData_.isEmpty()) {
                            if (busData_.isEmpty()) {
                                busData_ = other.busData_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                            } else {
                                ensureBusDataIsMutable();
                                busData_.addAll(other.busData_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.busData_.isEmpty()) {
                            if (busDataBuilder_.isEmpty()) {
                                busDataBuilder_.dispose();
                                busDataBuilder_ = null;
                                busData_ = other.busData_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                                busDataBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getBusDataFieldBuilder()
                                        : null;
                            } else {
                                busDataBuilder_.addAllMessages(other.busData_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    if (!hasReqTime()) {

                        return false;
                    }
                    for (int i = 0; i < getBusDataCount(); i++) {
                        if (!getBusData(i).isInitialized()) {

                            return false;
                        }
                    }
                    return true;
                }

                public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage) e
                                .getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private long reqTime_;

                /**
                 * <code>required int64 reqTime = 1;</code>
                 *
                 * <pre>
                 * 发送时间
                 * </pre>
                 */
                public boolean hasReqTime() {
                    return ((bitField0_ & 0x00000001) == 0x00000001);
                }

                /**
                 * <code>required int64 reqTime = 1;</code>
                 *
                 * <pre>
                 * 发送时间
                 * </pre>
                 */
                public long getReqTime() {
                    return reqTime_;
                }

                /**
                 * <code>required int64 reqTime = 1;</code>
                 *
                 * <pre>
                 * 发送时间
                 * </pre>
                 */
                public Builder setReqTime(long value) {
                    bitField0_ |= 0x00000001;
                    reqTime_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>required int64 reqTime = 1;</code>
                 *
                 * <pre>
                 * 发送时间
                 * </pre>
                 */
                public Builder clearReqTime() {
                    bitField0_ = (bitField0_ & ~0x00000001);
                    reqTime_ = 0L;
                    onChanged();
                    return this;
                }

                private java.lang.Object ver_ = "";

                /**
                 * <code>optional string ver = 2;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public boolean hasVer() {
                    return ((bitField0_ & 0x00000002) == 0x00000002);
                }

                /**
                 * <code>optional string ver = 2;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public java.lang.String getVer() {
                    java.lang.Object ref = ver_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (bs.isValidUtf8()) {
                            ver_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>optional string ver = 2;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public com.google.protobuf.ByteString getVerBytes() {
                    java.lang.Object ref = ver_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        ver_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string ver = 2;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public Builder setVer(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    ver_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string ver = 2;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public Builder clearVer() {
                    bitField0_ = (bitField0_ & ~0x00000002);
                    ver_ = getDefaultInstance().getVer();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string ver = 2;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public Builder setVerBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    ver_ = value;
                    onChanged();
                    return this;
                }

                private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> busData_ = java.util.Collections
                        .emptyList();

                private void ensureBusDataIsMutable() {
                    if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                        busData_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>(
                                busData_);
                        bitField0_ |= 0x00000004;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> busDataBuilder_;

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getBusDataList() {
                    if (busDataBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(busData_);
                    } else {
                        return busDataBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public int getBusDataCount() {
                    if (busDataBuilder_ == null) {
                        return busData_.size();
                    } else {
                        return busDataBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getBusData(int index) {
                    if (busDataBuilder_ == null) {
                        return busData_.get(index);
                    } else {
                        return busDataBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder setBusData(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (busDataBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureBusDataIsMutable();
                        busData_.set(index, value);
                        onChanged();
                    } else {
                        busDataBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder setBusData(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        busDataBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder addBusData(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (busDataBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureBusDataIsMutable();
                        busData_.add(value);
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder addBusData(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (busDataBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureBusDataIsMutable();
                        busData_.add(index, value);
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder addBusData(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.add(builderForValue.build());
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder addBusData(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder addAllBusData(
                        java.lang.Iterable<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> values) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, busData_);
                        onChanged();
                    } else {
                        busDataBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder clearBusData() {
                    if (busDataBuilder_ == null) {
                        busData_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                        onChanged();
                    } else {
                        busDataBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public Builder removeBusData(int index) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.remove(index);
                        onChanged();
                    } else {
                        busDataBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder getBusDataBuilder(int index) {
                    return getBusDataFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getBusDataOrBuilder(int index) {
                    if (busDataBuilder_ == null) {
                        return busData_.get(index);
                    } else {
                        return busDataBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataOrBuilderList() {
                    if (busDataBuilder_ != null) {
                        return busDataBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(busData_);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addBusDataBuilder() {
                    return getBusDataFieldBuilder()
                            .addBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addBusDataBuilder(int index) {
                    return getBusDataFieldBuilder().addBuilder(index,
                            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 3;</code>
                 *
                 * <pre>
                 * 业务数据key - value格式
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder> getBusDataBuilderList() {
                    return getBusDataFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataFieldBuilder() {
                    if (busDataBuilder_ == null) {
                        busDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder>(
                                busData_, ((bitField0_ & 0x00000004) == 0x00000004), getParentForChildren(), isClean());
                        busData_ = null;
                    }
                    return busDataBuilder_;
                }

                // @@protoc_insertion_point(builder_scope:netty.Message.ReqMessage)
            }

            static {
                defaultInstance = new ReqMessage(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:netty.Message.ReqMessage)
        }

        public interface RespMessageOrBuilder extends
                // @@protoc_insertion_point(interface_extends:netty.Message.RespMessage)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>required int32 status = 1;</code>
             *
             * <pre>
             *状态码 0;//业务成功1;//业务失败2;//系统繁忙
             * </pre>
             */
            boolean hasStatus();

            /**
             * <code>required int32 status = 1;</code>
             *
             * <pre>
             *状态码 0;//业务成功1;//业务失败2;//系统繁忙
             * </pre>
             */
            int getStatus();

            /**
             * <code>required int32 resultCode = 2;</code>
             *
             * <pre>
             * 业务码
             * </pre>
             */
            boolean hasResultCode();

            /**
             * <code>required int32 resultCode = 2;</code>
             *
             * <pre>
             * 业务码
             * </pre>
             */
            int getResultCode();

            /**
             * <code>required string desc = 3;</code>
             *
             * <pre>
             * 结果描述
             * </pre>
             */
            boolean hasDesc();

            /**
             * <code>required string desc = 3;</code>
             *
             * <pre>
             * 结果描述
             * </pre>
             */
            java.lang.String getDesc();

            /**
             * <code>required string desc = 3;</code>
             *
             * <pre>
             * 结果描述
             * </pre>
             */
            com.google.protobuf.ByteString getDescBytes();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getBusDataList();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getBusData(int index);

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            int getBusDataCount();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataOrBuilderList();

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getBusDataOrBuilder(int index);

            /**
             * <code>optional int64 respTime = 5;</code>
             *
             * <pre>
             * 响应时间
             * </pre>
             */
            boolean hasRespTime();

            /**
             * <code>optional int64 respTime = 5;</code>
             *
             * <pre>
             * 响应时间
             * </pre>
             */
            long getRespTime();

            /**
             * <code>optional string ver = 6;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            boolean hasVer();

            /**
             * <code>optional string ver = 6;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            java.lang.String getVer();

            /**
             * <code>optional string ver = 6;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            com.google.protobuf.ByteString getVerBytes();
        }

        /**
         * Protobuf type {@code netty.Message.RespMessage}
         */
        public static final class RespMessage extends com.google.protobuf.GeneratedMessage implements
                // @@protoc_insertion_point(message_implements:netty.Message.RespMessage)
                RespMessageOrBuilder {
            // Use RespMessage.newBuilder() to construct.
            private RespMessage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private RespMessage(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final RespMessage defaultInstance;

            public static RespMessage getDefaultInstance() {
                return defaultInstance;
            }

            public RespMessage getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private RespMessage(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 8: {
                            bitField0_ |= 0x00000001;
                            status_ = input.readInt32();
                            break;
                        }
                        case 16: {
                            bitField0_ |= 0x00000002;
                            resultCode_ = input.readInt32();
                            break;
                        }
                        case 26: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000004;
                            desc_ = bs;
                            break;
                        }
                        case 34: {
                            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                                busData_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>();
                                mutable_bitField0_ |= 0x00000008;
                            }
                            busData_.add(input.readMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.PARSER,
                                    extensionRegistry));
                            break;
                        }
                        case 40: {
                            bitField0_ |= 0x00000008;
                            respTime_ = input.readInt64();
                            break;
                        }
                        case 50: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000010;
                            ver_ = bs;
                            break;
                        }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                        busData_ = java.util.Collections.unmodifiableList(busData_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_RespMessage_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_RespMessage_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.class,
                                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder.class);
            }

            public static com.google.protobuf.Parser<RespMessage> PARSER = new com.google.protobuf.AbstractParser<RespMessage>() {
                public RespMessage parsePartialFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                    return new RespMessage(input, extensionRegistry);
                }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<RespMessage> getParserForType() {
                return PARSER;
            }

            private int bitField0_;
            public static final int STATUS_FIELD_NUMBER = 1;
            private int status_;

            /**
             * <code>required int32 status = 1;</code>
             *
             * <pre>
             *状态码 0;//业务成功1;//业务失败2;//系统繁忙
             * </pre>
             */
            public boolean hasStatus() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required int32 status = 1;</code>
             *
             * <pre>
             *状态码 0;//业务成功1;//业务失败2;//系统繁忙
             * </pre>
             */
            public int getStatus() {
                return status_;
            }

            public static final int RESULTCODE_FIELD_NUMBER = 2;
            private int resultCode_;

            /**
             * <code>required int32 resultCode = 2;</code>
             *
             * <pre>
             * 业务码
             * </pre>
             */
            public boolean hasResultCode() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required int32 resultCode = 2;</code>
             *
             * <pre>
             * 业务码
             * </pre>
             */
            public int getResultCode() {
                return resultCode_;
            }

            public static final int DESC_FIELD_NUMBER = 3;
            private java.lang.Object desc_;

            /**
             * <code>required string desc = 3;</code>
             *
             * <pre>
             * 结果描述
             * </pre>
             */
            public boolean hasDesc() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>required string desc = 3;</code>
             *
             * <pre>
             * 结果描述
             * </pre>
             */
            public java.lang.String getDesc() {
                java.lang.Object ref = desc_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        desc_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>required string desc = 3;</code>
             *
             * <pre>
             * 结果描述
             * </pre>
             */
            public com.google.protobuf.ByteString getDescBytes() {
                java.lang.Object ref = desc_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    desc_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int BUSDATA_FIELD_NUMBER = 4;
            private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> busData_;

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getBusDataList() {
                return busData_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataOrBuilderList() {
                return busData_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            public int getBusDataCount() {
                return busData_.size();
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getBusData(int index) {
                return busData_.get(index);
            }

            /**
             * <code>repeated .netty.Message.KeyStore busData = 4;</code>
             *
             * <pre>
             *业务数据key-value格式 map
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getBusDataOrBuilder(int index) {
                return busData_.get(index);
            }

            public static final int RESPTIME_FIELD_NUMBER = 5;
            private long respTime_;

            /**
             * <code>optional int64 respTime = 5;</code>
             *
             * <pre>
             * 响应时间
             * </pre>
             */
            public boolean hasRespTime() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional int64 respTime = 5;</code>
             *
             * <pre>
             * 响应时间
             * </pre>
             */
            public long getRespTime() {
                return respTime_;
            }

            public static final int VER_FIELD_NUMBER = 6;
            private java.lang.Object ver_;

            /**
             * <code>optional string ver = 6;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            public boolean hasVer() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional string ver = 6;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            public java.lang.String getVer() {
                java.lang.Object ref = ver_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        ver_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string ver = 6;</code>
             *
             * <pre>
             * 版本号
             * </pre>
             */
            public com.google.protobuf.ByteString getVerBytes() {
                java.lang.Object ref = ver_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    ver_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            private void initFields() {
                status_ = 0;
                resultCode_ = 0;
                desc_ = "";
                busData_ = java.util.Collections.emptyList();
                respTime_ = 0L;
                ver_ = "";
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;

                if (!hasStatus()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasResultCode()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
                if (!hasDesc()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
                for (int i = 0; i < getBusDataCount(); i++) {
                    if (!getBusData(i).isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeInt32(1, status_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeInt32(2, resultCode_);
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    output.writeBytes(3, getDescBytes());
                }
                for (int i = 0; i < busData_.size(); i++) {
                    output.writeMessage(4, busData_.get(i));
                }
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    output.writeInt64(5, respTime_);
                }
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    output.writeBytes(6, getVerBytes());
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1)
                    return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(1, status_);
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream.computeInt32Size(2, resultCode_);
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(3, getDescBytes());
                }
                for (int i = 0; i < busData_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, busData_.get(i));
                }
                if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    size += com.google.protobuf.CodedOutputStream.computeInt64Size(5, respTime_);
                }
                if (((bitField0_ & 0x00000010) == 0x00000010)) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(6, getVerBytes());
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @java.lang.Override
            protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(
                    com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(
                    com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseDelimitedFrom(
                    java.io.InputStream input) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseDelimitedFrom(
                    java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(
                    com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parseFrom(
                    com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code netty.Message.RespMessage}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>implements
                    // @@protoc_insertion_point(builder_implements:netty.Message.RespMessage)
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_RespMessage_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_RespMessage_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.class,
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder.class);
                }

                // Construct using
                // com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                        getBusDataFieldBuilder();
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    status_ = 0;
                    bitField0_ = (bitField0_ & ~0x00000001);
                    resultCode_ = 0;
                    bitField0_ = (bitField0_ & ~0x00000002);
                    desc_ = "";
                    bitField0_ = (bitField0_ & ~0x00000004);
                    if (busDataBuilder_ == null) {
                        busData_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000008);
                    } else {
                        busDataBuilder_.clear();
                    }
                    respTime_ = 0L;
                    bitField0_ = (bitField0_ & ~0x00000010);
                    ver_ = "";
                    bitField0_ = (bitField0_ & ~0x00000020);
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_RespMessage_descriptor;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage getDefaultInstanceForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.getDefaultInstance();
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage build() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage buildPartial() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage result = new com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage(
                            this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                        to_bitField0_ |= 0x00000001;
                    }
                    result.status_ = status_;
                    if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                        to_bitField0_ |= 0x00000002;
                    }
                    result.resultCode_ = resultCode_;
                    if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                        to_bitField0_ |= 0x00000004;
                    }
                    result.desc_ = desc_;
                    if (busDataBuilder_ == null) {
                        if (((bitField0_ & 0x00000008) == 0x00000008)) {
                            busData_ = java.util.Collections.unmodifiableList(busData_);
                            bitField0_ = (bitField0_ & ~0x00000008);
                        }
                        result.busData_ = busData_;
                    } else {
                        result.busData_ = busDataBuilder_.build();
                    }
                    if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                        to_bitField0_ |= 0x00000008;
                    }
                    result.respTime_ = respTime_;
                    if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
                        to_bitField0_ |= 0x00000010;
                    }
                    result.ver_ = ver_;
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage) {
                        return mergeFrom((com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage other) {
                    if (other == com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.getDefaultInstance())
                        return this;
                    if (other.hasStatus()) {
                        setStatus(other.getStatus());
                    }
                    if (other.hasResultCode()) {
                        setResultCode(other.getResultCode());
                    }
                    if (other.hasDesc()) {
                        bitField0_ |= 0x00000004;
                        desc_ = other.desc_;
                        onChanged();
                    }
                    if (busDataBuilder_ == null) {
                        if (!other.busData_.isEmpty()) {
                            if (busData_.isEmpty()) {
                                busData_ = other.busData_;
                                bitField0_ = (bitField0_ & ~0x00000008);
                            } else {
                                ensureBusDataIsMutable();
                                busData_.addAll(other.busData_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.busData_.isEmpty()) {
                            if (busDataBuilder_.isEmpty()) {
                                busDataBuilder_.dispose();
                                busDataBuilder_ = null;
                                busData_ = other.busData_;
                                bitField0_ = (bitField0_ & ~0x00000008);
                                busDataBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getBusDataFieldBuilder()
                                        : null;
                            } else {
                                busDataBuilder_.addAllMessages(other.busData_);
                            }
                        }
                    }
                    if (other.hasRespTime()) {
                        setRespTime(other.getRespTime());
                    }
                    if (other.hasVer()) {
                        bitField0_ |= 0x00000020;
                        ver_ = other.ver_;
                        onChanged();
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    if (!hasStatus()) {

                        return false;
                    }
                    if (!hasResultCode()) {

                        return false;
                    }
                    if (!hasDesc()) {

                        return false;
                    }
                    for (int i = 0; i < getBusDataCount(); i++) {
                        if (!getBusData(i).isInitialized()) {

                            return false;
                        }
                    }
                    return true;
                }

                public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage) e
                                .getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private int status_;

                /**
                 * <code>required int32 status = 1;</code>
                 *
                 * <pre>
                 *状态码 0;//业务成功1;//业务失败2;//系统繁忙
                 * </pre>
                 */
                public boolean hasStatus() {
                    return ((bitField0_ & 0x00000001) == 0x00000001);
                }

                /**
                 * <code>required int32 status = 1;</code>
                 *
                 * <pre>
                 *状态码 0;//业务成功1;//业务失败2;//系统繁忙
                 * </pre>
                 */
                public int getStatus() {
                    return status_;
                }

                /**
                 * <code>required int32 status = 1;</code>
                 *
                 * <pre>
                 *状态码 0;//业务成功1;//业务失败2;//系统繁忙
                 * </pre>
                 */
                public Builder setStatus(int value) {
                    bitField0_ |= 0x00000001;
                    status_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>required int32 status = 1;</code>
                 *
                 * <pre>
                 *状态码 0;//业务成功1;//业务失败2;//系统繁忙
                 * </pre>
                 */
                public Builder clearStatus() {
                    bitField0_ = (bitField0_ & ~0x00000001);
                    status_ = 0;
                    onChanged();
                    return this;
                }

                private int resultCode_;

                /**
                 * <code>required int32 resultCode = 2;</code>
                 *
                 * <pre>
                 * 业务码
                 * </pre>
                 */
                public boolean hasResultCode() {
                    return ((bitField0_ & 0x00000002) == 0x00000002);
                }

                /**
                 * <code>required int32 resultCode = 2;</code>
                 *
                 * <pre>
                 * 业务码
                 * </pre>
                 */
                public int getResultCode() {
                    return resultCode_;
                }

                /**
                 * <code>required int32 resultCode = 2;</code>
                 *
                 * <pre>
                 * 业务码
                 * </pre>
                 */
                public Builder setResultCode(int value) {
                    bitField0_ |= 0x00000002;
                    resultCode_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>required int32 resultCode = 2;</code>
                 *
                 * <pre>
                 * 业务码
                 * </pre>
                 */
                public Builder clearResultCode() {
                    bitField0_ = (bitField0_ & ~0x00000002);
                    resultCode_ = 0;
                    onChanged();
                    return this;
                }

                private java.lang.Object desc_ = "";

                /**
                 * <code>required string desc = 3;</code>
                 *
                 * <pre>
                 * 结果描述
                 * </pre>
                 */
                public boolean hasDesc() {
                    return ((bitField0_ & 0x00000004) == 0x00000004);
                }

                /**
                 * <code>required string desc = 3;</code>
                 *
                 * <pre>
                 * 结果描述
                 * </pre>
                 */
                public java.lang.String getDesc() {
                    java.lang.Object ref = desc_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (bs.isValidUtf8()) {
                            desc_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>required string desc = 3;</code>
                 *
                 * <pre>
                 * 结果描述
                 * </pre>
                 */
                public com.google.protobuf.ByteString getDescBytes() {
                    java.lang.Object ref = desc_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        desc_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>required string desc = 3;</code>
                 *
                 * <pre>
                 * 结果描述
                 * </pre>
                 */
                public Builder setDesc(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000004;
                    desc_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>required string desc = 3;</code>
                 *
                 * <pre>
                 * 结果描述
                 * </pre>
                 */
                public Builder clearDesc() {
                    bitField0_ = (bitField0_ & ~0x00000004);
                    desc_ = getDefaultInstance().getDesc();
                    onChanged();
                    return this;
                }

                /**
                 * <code>required string desc = 3;</code>
                 *
                 * <pre>
                 * 结果描述
                 * </pre>
                 */
                public Builder setDescBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000004;
                    desc_ = value;
                    onChanged();
                    return this;
                }

                private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> busData_ = java.util.Collections
                        .emptyList();

                private void ensureBusDataIsMutable() {
                    if (!((bitField0_ & 0x00000008) == 0x00000008)) {
                        busData_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>(
                                busData_);
                        bitField0_ |= 0x00000008;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> busDataBuilder_;

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getBusDataList() {
                    if (busDataBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(busData_);
                    } else {
                        return busDataBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public int getBusDataCount() {
                    if (busDataBuilder_ == null) {
                        return busData_.size();
                    } else {
                        return busDataBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getBusData(int index) {
                    if (busDataBuilder_ == null) {
                        return busData_.get(index);
                    } else {
                        return busDataBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder setBusData(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (busDataBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureBusDataIsMutable();
                        busData_.set(index, value);
                        onChanged();
                    } else {
                        busDataBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder setBusData(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        busDataBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder addBusData(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (busDataBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureBusDataIsMutable();
                        busData_.add(value);
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder addBusData(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (busDataBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureBusDataIsMutable();
                        busData_.add(index, value);
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder addBusData(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.add(builderForValue.build());
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder addBusData(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        busDataBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder addAllBusData(
                        java.lang.Iterable<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> values) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, busData_);
                        onChanged();
                    } else {
                        busDataBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder clearBusData() {
                    if (busDataBuilder_ == null) {
                        busData_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000008);
                        onChanged();
                    } else {
                        busDataBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public Builder removeBusData(int index) {
                    if (busDataBuilder_ == null) {
                        ensureBusDataIsMutable();
                        busData_.remove(index);
                        onChanged();
                    } else {
                        busDataBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder getBusDataBuilder(int index) {
                    return getBusDataFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getBusDataOrBuilder(int index) {
                    if (busDataBuilder_ == null) {
                        return busData_.get(index);
                    } else {
                        return busDataBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataOrBuilderList() {
                    if (busDataBuilder_ != null) {
                        return busDataBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(busData_);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addBusDataBuilder() {
                    return getBusDataFieldBuilder()
                            .addBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addBusDataBuilder(int index) {
                    return getBusDataFieldBuilder().addBuilder(index,
                            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore busData = 4;</code>
                 *
                 * <pre>
                 *业务数据key-value格式 map
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder> getBusDataBuilderList() {
                    return getBusDataFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getBusDataFieldBuilder() {
                    if (busDataBuilder_ == null) {
                        busDataBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder>(
                                busData_, ((bitField0_ & 0x00000008) == 0x00000008), getParentForChildren(), isClean());
                        busData_ = null;
                    }
                    return busDataBuilder_;
                }

                private long respTime_;

                /**
                 * <code>optional int64 respTime = 5;</code>
                 *
                 * <pre>
                 * 响应时间
                 * </pre>
                 */
                public boolean hasRespTime() {
                    return ((bitField0_ & 0x00000010) == 0x00000010);
                }

                /**
                 * <code>optional int64 respTime = 5;</code>
                 *
                 * <pre>
                 * 响应时间
                 * </pre>
                 */
                public long getRespTime() {
                    return respTime_;
                }

                /**
                 * <code>optional int64 respTime = 5;</code>
                 *
                 * <pre>
                 * 响应时间
                 * </pre>
                 */
                public Builder setRespTime(long value) {
                    bitField0_ |= 0x00000010;
                    respTime_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional int64 respTime = 5;</code>
                 *
                 * <pre>
                 * 响应时间
                 * </pre>
                 */
                public Builder clearRespTime() {
                    bitField0_ = (bitField0_ & ~0x00000010);
                    respTime_ = 0L;
                    onChanged();
                    return this;
                }

                private java.lang.Object ver_ = "";

                /**
                 * <code>optional string ver = 6;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public boolean hasVer() {
                    return ((bitField0_ & 0x00000020) == 0x00000020);
                }

                /**
                 * <code>optional string ver = 6;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public java.lang.String getVer() {
                    java.lang.Object ref = ver_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (bs.isValidUtf8()) {
                            ver_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>optional string ver = 6;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public com.google.protobuf.ByteString getVerBytes() {
                    java.lang.Object ref = ver_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        ver_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string ver = 6;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public Builder setVer(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000020;
                    ver_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string ver = 6;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public Builder clearVer() {
                    bitField0_ = (bitField0_ & ~0x00000020);
                    ver_ = getDefaultInstance().getVer();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string ver = 6;</code>
                 *
                 * <pre>
                 * 版本号
                 * </pre>
                 */
                public Builder setVerBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000020;
                    ver_ = value;
                    onChanged();
                    return this;
                }

                // @@protoc_insertion_point(builder_scope:netty.Message.RespMessage)
            }

            static {
                defaultInstance = new RespMessage(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:netty.Message.RespMessage)
        }

        public interface KeyStoreOrBuilder extends
                // @@protoc_insertion_point(interface_extends:netty.Message.KeyStore)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>required string key = 1;</code>
             *
             * <pre>
             * 键
             * </pre>
             */
            boolean hasKey();

            /**
             * <code>required string key = 1;</code>
             *
             * <pre>
             * 键
             * </pre>
             */
            java.lang.String getKey();

            /**
             * <code>required string key = 1;</code>
             *
             * <pre>
             * 键
             * </pre>
             */
            com.google.protobuf.ByteString getKeyBytes();

            /**
             * <code>optional string value = 2;</code>
             *
             * <pre>
             *值 普通String值
             * </pre>
             */
            boolean hasValue();

            /**
             * <code>optional string value = 2;</code>
             *
             * <pre>
             *值 普通String值
             * </pre>
             */
            java.lang.String getValue();

            /**
             * <code>optional string value = 2;</code>
             *
             * <pre>
             *值 普通String值
             * </pre>
             */
            com.google.protobuf.ByteString getValueBytes();

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList> getKeyStoreListList();

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList getKeyStoreList(int index);

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            int getKeyStoreListCount();

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder> getKeyStoreListOrBuilderList();

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder getKeyStoreListOrBuilder(int index);

            /**
             * <code>optional bytes byteValue = 4;</code>
             *
             * <pre>
             *bytes 数据
             * </pre>
             */
            boolean hasByteValue();

            /**
             * <code>optional bytes byteValue = 4;</code>
             *
             * <pre>
             *bytes 数据
             * </pre>
             */
            com.google.protobuf.ByteString getByteValue();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getKeyStoreList();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getKeyStore(int index);

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            int getKeyStoreCount();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreOrBuilderList();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getKeyStoreOrBuilder(int index);
        }

        /**
         * Protobuf type {@code netty.Message.KeyStore}
         */
        public static final class KeyStore extends com.google.protobuf.GeneratedMessage implements
                // @@protoc_insertion_point(message_implements:netty.Message.KeyStore)
                KeyStoreOrBuilder {
            // Use KeyStore.newBuilder() to construct.
            private KeyStore(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private KeyStore(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final KeyStore defaultInstance;

            public static KeyStore getDefaultInstance() {
                return defaultInstance;
            }

            public KeyStore getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private KeyStore(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000001;
                            key_ = bs;
                            break;
                        }
                        case 18: {
                            com.google.protobuf.ByteString bs = input.readBytes();
                            bitField0_ |= 0x00000002;
                            value_ = bs;
                            break;
                        }
                        case 26: {
                            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                                keyStoreList_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList>();
                                mutable_bitField0_ |= 0x00000004;
                            }
                            keyStoreList_.add(input.readMessage(
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.PARSER, extensionRegistry));
                            break;
                        }
                        case 34: {
                            bitField0_ |= 0x00000004;
                            byteValue_ = input.readBytes();
                            break;
                        }
                        case 42: {
                            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                                keyStore_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>();
                                mutable_bitField0_ |= 0x00000010;
                            }
                            keyStore_.add(input.readMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.PARSER,
                                    extensionRegistry));
                            break;
                        }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                        keyStoreList_ = java.util.Collections.unmodifiableList(keyStoreList_);
                    }
                    if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                        keyStore_ = java.util.Collections.unmodifiableList(keyStore_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStore_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStore_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.class,
                                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder.class);
            }

            public static com.google.protobuf.Parser<KeyStore> PARSER = new com.google.protobuf.AbstractParser<KeyStore>() {
                public KeyStore parsePartialFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                    return new KeyStore(input, extensionRegistry);
                }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<KeyStore> getParserForType() {
                return PARSER;
            }

            private int bitField0_;
            public static final int KEY_FIELD_NUMBER = 1;
            private java.lang.Object key_;

            /**
             * <code>required string key = 1;</code>
             *
             * <pre>
             * 键
             * </pre>
             */
            public boolean hasKey() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string key = 1;</code>
             *
             * <pre>
             * 键
             * </pre>
             */
            public java.lang.String getKey() {
                java.lang.Object ref = key_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        key_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>required string key = 1;</code>
             *
             * <pre>
             * 键
             * </pre>
             */
            public com.google.protobuf.ByteString getKeyBytes() {
                java.lang.Object ref = key_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    key_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int VALUE_FIELD_NUMBER = 2;
            private java.lang.Object value_;

            /**
             * <code>optional string value = 2;</code>
             *
             * <pre>
             *值 普通String值
             * </pre>
             */
            public boolean hasValue() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>optional string value = 2;</code>
             *
             * <pre>
             *值 普通String值
             * </pre>
             */
            public java.lang.String getValue() {
                java.lang.Object ref = value_;
                if (ref instanceof java.lang.String) {
                    return (java.lang.String) ref;
                } else {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        value_ = s;
                    }
                    return s;
                }
            }

            /**
             * <code>optional string value = 2;</code>
             *
             * <pre>
             *值 普通String值
             * </pre>
             */
            public com.google.protobuf.ByteString getValueBytes() {
                java.lang.Object ref = value_;
                if (ref instanceof java.lang.String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    value_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            public static final int KEYSTORELIST_FIELD_NUMBER = 3;
            private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList> keyStoreList_;

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList> getKeyStoreListList() {
                return keyStoreList_;
            }

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder> getKeyStoreListOrBuilderList() {
                return keyStoreList_;
            }

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            public int getKeyStoreListCount() {
                return keyStoreList_.size();
            }

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList getKeyStoreList(int index) {
                return keyStoreList_.get(index);
            }

            /**
             * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
             *
             * <pre>
             * List对象值
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder getKeyStoreListOrBuilder(
                    int index) {
                return keyStoreList_.get(index);
            }

            public static final int BYTEVALUE_FIELD_NUMBER = 4;
            private com.google.protobuf.ByteString byteValue_;

            /**
             * <code>optional bytes byteValue = 4;</code>
             *
             * <pre>
             *bytes 数据
             * </pre>
             */
            public boolean hasByteValue() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional bytes byteValue = 4;</code>
             *
             * <pre>
             *bytes 数据
             * </pre>
             */
            public com.google.protobuf.ByteString getByteValue() {
                return byteValue_;
            }

            public static final int KEYSTORE_FIELD_NUMBER = 5;
            private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> keyStore_;

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getKeyStoreList() {
                return keyStore_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreOrBuilderList() {
                return keyStore_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            public int getKeyStoreCount() {
                return keyStore_.size();
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getKeyStore(int index) {
                return keyStore_.get(index);
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
             *
             * <pre>
             * 单个对象值
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getKeyStoreOrBuilder(int index) {
                return keyStore_.get(index);
            }

            private void initFields() {
                key_ = "";
                value_ = "";
                keyStoreList_ = java.util.Collections.emptyList();
                byteValue_ = com.google.protobuf.ByteString.EMPTY;
                keyStore_ = java.util.Collections.emptyList();
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;

                if (!hasKey()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
                for (int i = 0; i < getKeyStoreListCount(); i++) {
                    if (!getKeyStoreList(i).isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                for (int i = 0; i < getKeyStoreCount(); i++) {
                    if (!getKeyStore(i).isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
                getSerializedSize();
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    output.writeBytes(1, getKeyBytes());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    output.writeBytes(2, getValueBytes());
                }
                for (int i = 0; i < keyStoreList_.size(); i++) {
                    output.writeMessage(3, keyStoreList_.get(i));
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    output.writeBytes(4, byteValue_);
                }
                for (int i = 0; i < keyStore_.size(); i++) {
                    output.writeMessage(5, keyStore_.get(i));
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1)
                    return size;

                size = 0;
                if (((bitField0_ & 0x00000001) == 0x00000001)) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getKeyBytes());
                }
                if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, getValueBytes());
                }
                for (int i = 0; i < keyStoreList_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, keyStoreList_.get(i));
                }
                if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    size += com.google.protobuf.CodedOutputStream.computeBytesSize(4, byteValue_);
                }
                for (int i = 0; i < keyStore_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, keyStore_.get(i));
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @java.lang.Override
            protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(
                    com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(
                    com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseDelimitedFrom(
                    java.io.InputStream input) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseDelimitedFrom(
                    java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(
                    com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parseFrom(
                    com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code netty.Message.KeyStore}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>implements
                    // @@protoc_insertion_point(builder_implements:netty.Message.KeyStore)
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStore_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStore_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.class,
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder.class);
                }

                // Construct using
                // com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                        getKeyStoreListFieldBuilder();
                        getKeyStoreFieldBuilder();
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    key_ = "";
                    bitField0_ = (bitField0_ & ~0x00000001);
                    value_ = "";
                    bitField0_ = (bitField0_ & ~0x00000002);
                    if (keyStoreListBuilder_ == null) {
                        keyStoreList_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                    } else {
                        keyStoreListBuilder_.clear();
                    }
                    byteValue_ = com.google.protobuf.ByteString.EMPTY;
                    bitField0_ = (bitField0_ & ~0x00000008);
                    if (keyStoreBuilder_ == null) {
                        keyStore_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000010);
                    } else {
                        keyStoreBuilder_.clear();
                    }
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStore_descriptor;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getDefaultInstanceForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance();
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore build() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore buildPartial() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore result = new com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore(
                            this);
                    int from_bitField0_ = bitField0_;
                    int to_bitField0_ = 0;
                    if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                        to_bitField0_ |= 0x00000001;
                    }
                    result.key_ = key_;
                    if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                        to_bitField0_ |= 0x00000002;
                    }
                    result.value_ = value_;
                    if (keyStoreListBuilder_ == null) {
                        if (((bitField0_ & 0x00000004) == 0x00000004)) {
                            keyStoreList_ = java.util.Collections.unmodifiableList(keyStoreList_);
                            bitField0_ = (bitField0_ & ~0x00000004);
                        }
                        result.keyStoreList_ = keyStoreList_;
                    } else {
                        result.keyStoreList_ = keyStoreListBuilder_.build();
                    }
                    if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                        to_bitField0_ |= 0x00000004;
                    }
                    result.byteValue_ = byteValue_;
                    if (keyStoreBuilder_ == null) {
                        if (((bitField0_ & 0x00000010) == 0x00000010)) {
                            keyStore_ = java.util.Collections.unmodifiableList(keyStore_);
                            bitField0_ = (bitField0_ & ~0x00000010);
                        }
                        result.keyStore_ = keyStore_;
                    } else {
                        result.keyStore_ = keyStoreBuilder_.build();
                    }
                    result.bitField0_ = to_bitField0_;
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore) {
                        return mergeFrom((com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore other) {
                    if (other == com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance())
                        return this;
                    if (other.hasKey()) {
                        bitField0_ |= 0x00000001;
                        key_ = other.key_;
                        onChanged();
                    }
                    if (other.hasValue()) {
                        bitField0_ |= 0x00000002;
                        value_ = other.value_;
                        onChanged();
                    }
                    if (keyStoreListBuilder_ == null) {
                        if (!other.keyStoreList_.isEmpty()) {
                            if (keyStoreList_.isEmpty()) {
                                keyStoreList_ = other.keyStoreList_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                            } else {
                                ensureKeyStoreListIsMutable();
                                keyStoreList_.addAll(other.keyStoreList_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.keyStoreList_.isEmpty()) {
                            if (keyStoreListBuilder_.isEmpty()) {
                                keyStoreListBuilder_.dispose();
                                keyStoreListBuilder_ = null;
                                keyStoreList_ = other.keyStoreList_;
                                bitField0_ = (bitField0_ & ~0x00000004);
                                keyStoreListBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders
                                        ? getKeyStoreListFieldBuilder() : null;
                            } else {
                                keyStoreListBuilder_.addAllMessages(other.keyStoreList_);
                            }
                        }
                    }
                    if (other.hasByteValue()) {
                        setByteValue(other.getByteValue());
                    }
                    if (keyStoreBuilder_ == null) {
                        if (!other.keyStore_.isEmpty()) {
                            if (keyStore_.isEmpty()) {
                                keyStore_ = other.keyStore_;
                                bitField0_ = (bitField0_ & ~0x00000010);
                            } else {
                                ensureKeyStoreIsMutable();
                                keyStore_.addAll(other.keyStore_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.keyStore_.isEmpty()) {
                            if (keyStoreBuilder_.isEmpty()) {
                                keyStoreBuilder_.dispose();
                                keyStoreBuilder_ = null;
                                keyStore_ = other.keyStore_;
                                bitField0_ = (bitField0_ & ~0x00000010);
                                keyStoreBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getKeyStoreFieldBuilder()
                                        : null;
                            } else {
                                keyStoreBuilder_.addAllMessages(other.keyStore_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    if (!hasKey()) {

                        return false;
                    }
                    for (int i = 0; i < getKeyStoreListCount(); i++) {
                        if (!getKeyStoreList(i).isInitialized()) {

                            return false;
                        }
                    }
                    for (int i = 0; i < getKeyStoreCount(); i++) {
                        if (!getKeyStore(i).isInitialized()) {

                            return false;
                        }
                    }
                    return true;
                }

                public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore) e.getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private java.lang.Object key_ = "";

                /**
                 * <code>required string key = 1;</code>
                 *
                 * <pre>
                 * 键
                 * </pre>
                 */
                public boolean hasKey() {
                    return ((bitField0_ & 0x00000001) == 0x00000001);
                }

                /**
                 * <code>required string key = 1;</code>
                 *
                 * <pre>
                 * 键
                 * </pre>
                 */
                public java.lang.String getKey() {
                    java.lang.Object ref = key_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (bs.isValidUtf8()) {
                            key_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>required string key = 1;</code>
                 *
                 * <pre>
                 * 键
                 * </pre>
                 */
                public com.google.protobuf.ByteString getKeyBytes() {
                    java.lang.Object ref = key_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        key_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>required string key = 1;</code>
                 *
                 * <pre>
                 * 键
                 * </pre>
                 */
                public Builder setKey(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000001;
                    key_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>required string key = 1;</code>
                 *
                 * <pre>
                 * 键
                 * </pre>
                 */
                public Builder clearKey() {
                    bitField0_ = (bitField0_ & ~0x00000001);
                    key_ = getDefaultInstance().getKey();
                    onChanged();
                    return this;
                }

                /**
                 * <code>required string key = 1;</code>
                 *
                 * <pre>
                 * 键
                 * </pre>
                 */
                public Builder setKeyBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000001;
                    key_ = value;
                    onChanged();
                    return this;
                }

                private java.lang.Object value_ = "";

                /**
                 * <code>optional string value = 2;</code>
                 *
                 * <pre>
                 *值 普通String值
                 * </pre>
                 */
                public boolean hasValue() {
                    return ((bitField0_ & 0x00000002) == 0x00000002);
                }

                /**
                 * <code>optional string value = 2;</code>
                 *
                 * <pre>
                 *值 普通String值
                 * </pre>
                 */
                public java.lang.String getValue() {
                    java.lang.Object ref = value_;
                    if (!(ref instanceof java.lang.String)) {
                        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                        java.lang.String s = bs.toStringUtf8();
                        if (bs.isValidUtf8()) {
                            value_ = s;
                        }
                        return s;
                    } else {
                        return (java.lang.String) ref;
                    }
                }

                /**
                 * <code>optional string value = 2;</code>
                 *
                 * <pre>
                 *值 普通String值
                 * </pre>
                 */
                public com.google.protobuf.ByteString getValueBytes() {
                    java.lang.Object ref = value_;
                    if (ref instanceof String) {
                        com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                        value_ = b;
                        return b;
                    } else {
                        return (com.google.protobuf.ByteString) ref;
                    }
                }

                /**
                 * <code>optional string value = 2;</code>
                 *
                 * <pre>
                 *值 普通String值
                 * </pre>
                 */
                public Builder setValue(java.lang.String value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    value_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string value = 2;</code>
                 *
                 * <pre>
                 *值 普通String值
                 * </pre>
                 */
                public Builder clearValue() {
                    bitField0_ = (bitField0_ & ~0x00000002);
                    value_ = getDefaultInstance().getValue();
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional string value = 2;</code>
                 *
                 * <pre>
                 *值 普通String值
                 * </pre>
                 */
                public Builder setValueBytes(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000002;
                    value_ = value;
                    onChanged();
                    return this;
                }

                private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList> keyStoreList_ = java.util.Collections
                        .emptyList();

                private void ensureKeyStoreListIsMutable() {
                    if (!((bitField0_ & 0x00000004) == 0x00000004)) {
                        keyStoreList_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList>(
                                keyStoreList_);
                        bitField0_ |= 0x00000004;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder> keyStoreListBuilder_;

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList> getKeyStoreListList() {
                    if (keyStoreListBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(keyStoreList_);
                    } else {
                        return keyStoreListBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public int getKeyStoreListCount() {
                    if (keyStoreListBuilder_ == null) {
                        return keyStoreList_.size();
                    } else {
                        return keyStoreListBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList getKeyStoreList(int index) {
                    if (keyStoreListBuilder_ == null) {
                        return keyStoreList_.get(index);
                    } else {
                        return keyStoreListBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder setKeyStoreList(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList value) {
                    if (keyStoreListBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.set(index, value);
                        onChanged();
                    } else {
                        keyStoreListBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder setKeyStoreList(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder builderForValue) {
                    if (keyStoreListBuilder_ == null) {
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreListBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder addKeyStoreList(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList value) {
                    if (keyStoreListBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.add(value);
                        onChanged();
                    } else {
                        keyStoreListBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder addKeyStoreList(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList value) {
                    if (keyStoreListBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.add(index, value);
                        onChanged();
                    } else {
                        keyStoreListBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder addKeyStoreList(
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder builderForValue) {
                    if (keyStoreListBuilder_ == null) {
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.add(builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreListBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder addKeyStoreList(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder builderForValue) {
                    if (keyStoreListBuilder_ == null) {
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreListBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder addAllKeyStoreList(
                        java.lang.Iterable<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList> values) {
                    if (keyStoreListBuilder_ == null) {
                        ensureKeyStoreListIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, keyStoreList_);
                        onChanged();
                    } else {
                        keyStoreListBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder clearKeyStoreList() {
                    if (keyStoreListBuilder_ == null) {
                        keyStoreList_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000004);
                        onChanged();
                    } else {
                        keyStoreListBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public Builder removeKeyStoreList(int index) {
                    if (keyStoreListBuilder_ == null) {
                        ensureKeyStoreListIsMutable();
                        keyStoreList_.remove(index);
                        onChanged();
                    } else {
                        keyStoreListBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder getKeyStoreListBuilder(
                        int index) {
                    return getKeyStoreListFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder getKeyStoreListOrBuilder(
                        int index) {
                    if (keyStoreListBuilder_ == null) {
                        return keyStoreList_.get(index);
                    } else {
                        return keyStoreListBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder> getKeyStoreListOrBuilderList() {
                    if (keyStoreListBuilder_ != null) {
                        return keyStoreListBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(keyStoreList_);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder addKeyStoreListBuilder() {
                    return getKeyStoreListFieldBuilder()
                            .addBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder addKeyStoreListBuilder(
                        int index) {
                    return getKeyStoreListFieldBuilder().addBuilder(index,
                            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStoreList keyStoreList = 3;</code>
                 *
                 * <pre>
                 * List对象值
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder> getKeyStoreListBuilderList() {
                    return getKeyStoreListFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder> getKeyStoreListFieldBuilder() {
                    if (keyStoreListBuilder_ == null) {
                        keyStoreListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder>(
                                keyStoreList_, ((bitField0_ & 0x00000004) == 0x00000004), getParentForChildren(), isClean());
                        keyStoreList_ = null;
                    }
                    return keyStoreListBuilder_;
                }

                private com.google.protobuf.ByteString byteValue_ = com.google.protobuf.ByteString.EMPTY;

                /**
                 * <code>optional bytes byteValue = 4;</code>
                 *
                 * <pre>
                 *bytes 数据
                 * </pre>
                 */
                public boolean hasByteValue() {
                    return ((bitField0_ & 0x00000008) == 0x00000008);
                }

                /**
                 * <code>optional bytes byteValue = 4;</code>
                 *
                 * <pre>
                 *bytes 数据
                 * </pre>
                 */
                public com.google.protobuf.ByteString getByteValue() {
                    return byteValue_;
                }

                /**
                 * <code>optional bytes byteValue = 4;</code>
                 *
                 * <pre>
                 *bytes 数据
                 * </pre>
                 */
                public Builder setByteValue(com.google.protobuf.ByteString value) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    bitField0_ |= 0x00000008;
                    byteValue_ = value;
                    onChanged();
                    return this;
                }

                /**
                 * <code>optional bytes byteValue = 4;</code>
                 *
                 * <pre>
                 *bytes 数据
                 * </pre>
                 */
                public Builder clearByteValue() {
                    bitField0_ = (bitField0_ & ~0x00000008);
                    byteValue_ = getDefaultInstance().getByteValue();
                    onChanged();
                    return this;
                }

                private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> keyStore_ = java.util.Collections
                        .emptyList();

                private void ensureKeyStoreIsMutable() {
                    if (!((bitField0_ & 0x00000010) == 0x00000010)) {
                        keyStore_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>(
                                keyStore_);
                        bitField0_ |= 0x00000010;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> keyStoreBuilder_;

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getKeyStoreList() {
                    if (keyStoreBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(keyStore_);
                    } else {
                        return keyStoreBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public int getKeyStoreCount() {
                    if (keyStoreBuilder_ == null) {
                        return keyStore_.size();
                    } else {
                        return keyStoreBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getKeyStore(int index) {
                    if (keyStoreBuilder_ == null) {
                        return keyStore_.get(index);
                    } else {
                        return keyStoreBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder setKeyStore(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (keyStoreBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreIsMutable();
                        keyStore_.set(index, value);
                        onChanged();
                    } else {
                        keyStoreBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder setKeyStore(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder addKeyStore(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (keyStoreBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreIsMutable();
                        keyStore_.add(value);
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder addKeyStore(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (keyStoreBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreIsMutable();
                        keyStore_.add(index, value);
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder addKeyStore(
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.add(builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder addKeyStore(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder addAllKeyStore(
                        java.lang.Iterable<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> values) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, keyStore_);
                        onChanged();
                    } else {
                        keyStoreBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder clearKeyStore() {
                    if (keyStoreBuilder_ == null) {
                        keyStore_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000010);
                        onChanged();
                    } else {
                        keyStoreBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public Builder removeKeyStore(int index) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.remove(index);
                        onChanged();
                    } else {
                        keyStoreBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder getKeyStoreBuilder(int index) {
                    return getKeyStoreFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getKeyStoreOrBuilder(int index) {
                    if (keyStoreBuilder_ == null) {
                        return keyStore_.get(index);
                    } else {
                        return keyStoreBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreOrBuilderList() {
                    if (keyStoreBuilder_ != null) {
                        return keyStoreBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(keyStore_);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addKeyStoreBuilder() {
                    return getKeyStoreFieldBuilder()
                            .addBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addKeyStoreBuilder(int index) {
                    return getKeyStoreFieldBuilder().addBuilder(index,
                            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 5;</code>
                 *
                 * <pre>
                 * 单个对象值
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder> getKeyStoreBuilderList() {
                    return getKeyStoreFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreFieldBuilder() {
                    if (keyStoreBuilder_ == null) {
                        keyStoreBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder>(
                                keyStore_, ((bitField0_ & 0x00000010) == 0x00000010), getParentForChildren(), isClean());
                        keyStore_ = null;
                    }
                    return keyStoreBuilder_;
                }

                // @@protoc_insertion_point(builder_scope:netty.Message.KeyStore)
            }

            static {
                defaultInstance = new KeyStore(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:netty.Message.KeyStore)
        }

        public interface KeyStoreListOrBuilder extends
                // @@protoc_insertion_point(interface_extends:netty.Message.KeyStoreList)
                com.google.protobuf.MessageOrBuilder {

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getKeyStoreList();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getKeyStore(int index);

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            int getKeyStoreCount();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreOrBuilderList();

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getKeyStoreOrBuilder(int index);
        }

        /**
         * Protobuf type {@code netty.Message.KeyStoreList}
         */
        public static final class KeyStoreList extends com.google.protobuf.GeneratedMessage implements
                // @@protoc_insertion_point(message_implements:netty.Message.KeyStoreList)
                KeyStoreListOrBuilder {
            // Use KeyStoreList.newBuilder() to construct.
            private KeyStoreList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
                super(builder);
                this.unknownFields = builder.getUnknownFields();
            }

            private KeyStoreList(boolean noInit) {
                this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
            }

            private static final KeyStoreList defaultInstance;

            public static KeyStoreList getDefaultInstance() {
                return defaultInstance;
            }

            public KeyStoreList getDefaultInstanceForType() {
                return defaultInstance;
            }

            private final com.google.protobuf.UnknownFieldSet unknownFields;

            @java.lang.Override
            public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
                return this.unknownFields;
            }

            private KeyStoreList(com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                initFields();
                int mutable_bitField0_ = 0;
                com.google.protobuf.UnknownFieldSet.Builder unknownFields = com.google.protobuf.UnknownFieldSet.newBuilder();
                try {
                    boolean done = false;
                    while (!done) {
                        int tag = input.readTag();
                        switch (tag) {
                        case 0:
                            done = true;
                            break;
                        default: {
                            if (!parseUnknownField(input, unknownFields, extensionRegistry, tag)) {
                                done = true;
                            }
                            break;
                        }
                        case 10: {
                            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                                keyStore_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>();
                                mutable_bitField0_ |= 0x00000001;
                            }
                            keyStore_.add(input.readMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.PARSER,
                                    extensionRegistry));
                            break;
                        }
                        }
                    }
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    throw e.setUnfinishedMessage(this);
                } catch (java.io.IOException e) {
                    throw new com.google.protobuf.InvalidProtocolBufferException(e.getMessage()).setUnfinishedMessage(this);
                } finally {
                    if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                        keyStore_ = java.util.Collections.unmodifiableList(keyStore_);
                    }
                    this.unknownFields = unknownFields.build();
                    makeExtensionsImmutable();
                }
            }

            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStoreList_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStoreList_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.class,
                                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder.class);
            }

            public static com.google.protobuf.Parser<KeyStoreList> PARSER = new com.google.protobuf.AbstractParser<KeyStoreList>() {
                public KeyStoreList parsePartialFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                                throws com.google.protobuf.InvalidProtocolBufferException {
                    return new KeyStoreList(input, extensionRegistry);
                }
            };

            @java.lang.Override
            public com.google.protobuf.Parser<KeyStoreList> getParserForType() {
                return PARSER;
            }

            public static final int KEYSTORE_FIELD_NUMBER = 1;
            private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> keyStore_;

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getKeyStoreList() {
                return keyStore_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreOrBuilderList() {
                return keyStore_;
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            public int getKeyStoreCount() {
                return keyStore_.size();
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getKeyStore(int index) {
                return keyStore_.get(index);
            }

            /**
             * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
             *
             * <pre>
             * Map值
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getKeyStoreOrBuilder(int index) {
                return keyStore_.get(index);
            }

            private void initFields() {
                keyStore_ = java.util.Collections.emptyList();
            }

            private byte memoizedIsInitialized = -1;

            public final boolean isInitialized() {
                byte isInitialized = memoizedIsInitialized;
                if (isInitialized == 1)
                    return true;
                if (isInitialized == 0)
                    return false;

                for (int i = 0; i < getKeyStoreCount(); i++) {
                    if (!getKeyStore(i).isInitialized()) {
                        memoizedIsInitialized = 0;
                        return false;
                    }
                }
                memoizedIsInitialized = 1;
                return true;
            }

            public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
                getSerializedSize();
                for (int i = 0; i < keyStore_.size(); i++) {
                    output.writeMessage(1, keyStore_.get(i));
                }
                getUnknownFields().writeTo(output);
            }

            private int memoizedSerializedSize = -1;

            public int getSerializedSize() {
                int size = memoizedSerializedSize;
                if (size != -1)
                    return size;

                size = 0;
                for (int i = 0; i < keyStore_.size(); i++) {
                    size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, keyStore_.get(i));
                }
                size += getUnknownFields().getSerializedSize();
                memoizedSerializedSize = size;
                return size;
            }

            private static final long serialVersionUID = 0L;

            @java.lang.Override
            protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
                return super.writeReplace();
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(
                    com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(
                    com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(byte[] data)
                    throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(byte[] data,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
                return PARSER.parseFrom(data, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(java.io.InputStream input)
                    throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(java.io.InputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseDelimitedFrom(
                    java.io.InputStream input) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseDelimitedFrom(
                    java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                return PARSER.parseDelimitedFrom(input, extensionRegistry);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(
                    com.google.protobuf.CodedInputStream input) throws java.io.IOException {
                return PARSER.parseFrom(input);
            }

            public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parseFrom(
                    com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                            throws java.io.IOException {
                return PARSER.parseFrom(input, extensionRegistry);
            }

            public static Builder newBuilder() {
                return Builder.create();
            }

            public Builder newBuilderForType() {
                return newBuilder();
            }

            public static Builder newBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList prototype) {
                return newBuilder().mergeFrom(prototype);
            }

            public Builder toBuilder() {
                return newBuilder(this);
            }

            @java.lang.Override
            protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                Builder builder = new Builder(parent);
                return builder;
            }

            /**
             * Protobuf type {@code netty.Message.KeyStoreList}
             */
            public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>implements
                    // @@protoc_insertion_point(builder_implements:netty.Message.KeyStoreList)
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreListOrBuilder {
                public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStoreList_descriptor;
                }

                protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStoreList_fieldAccessorTable
                            .ensureFieldAccessorsInitialized(
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.class,
                                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.Builder.class);
                }

                // Construct using
                // com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.newBuilder()
                private Builder() {
                    maybeForceBuilderInitialization();
                }

                private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                    super(parent);
                    maybeForceBuilderInitialization();
                }

                private void maybeForceBuilderInitialization() {
                    if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                        getKeyStoreFieldBuilder();
                    }
                }

                private static Builder create() {
                    return new Builder();
                }

                public Builder clear() {
                    super.clear();
                    if (keyStoreBuilder_ == null) {
                        keyStore_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        keyStoreBuilder_.clear();
                    }
                    return this;
                }

                public Builder clone() {
                    return create().mergeFrom(buildPartial());
                }

                public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_KeyStoreList_descriptor;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList getDefaultInstanceForType() {
                    return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.getDefaultInstance();
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList build() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList result = buildPartial();
                    if (!result.isInitialized()) {
                        throw newUninitializedMessageException(result);
                    }
                    return result;
                }

                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList buildPartial() {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList result = new com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList(
                            this);
                    int from_bitField0_ = bitField0_;
                    if (keyStoreBuilder_ == null) {
                        if (((bitField0_ & 0x00000001) == 0x00000001)) {
                            keyStore_ = java.util.Collections.unmodifiableList(keyStore_);
                            bitField0_ = (bitField0_ & ~0x00000001);
                        }
                        result.keyStore_ = keyStore_;
                    } else {
                        result.keyStore_ = keyStoreBuilder_.build();
                    }
                    onBuilt();
                    return result;
                }

                public Builder mergeFrom(com.google.protobuf.Message other) {
                    if (other instanceof com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList) {
                        return mergeFrom((com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList) other);
                    } else {
                        super.mergeFrom(other);
                        return this;
                    }
                }

                public Builder mergeFrom(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList other) {
                    if (other == com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList.getDefaultInstance())
                        return this;
                    if (keyStoreBuilder_ == null) {
                        if (!other.keyStore_.isEmpty()) {
                            if (keyStore_.isEmpty()) {
                                keyStore_ = other.keyStore_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                            } else {
                                ensureKeyStoreIsMutable();
                                keyStore_.addAll(other.keyStore_);
                            }
                            onChanged();
                        }
                    } else {
                        if (!other.keyStore_.isEmpty()) {
                            if (keyStoreBuilder_.isEmpty()) {
                                keyStoreBuilder_.dispose();
                                keyStoreBuilder_ = null;
                                keyStore_ = other.keyStore_;
                                bitField0_ = (bitField0_ & ~0x00000001);
                                keyStoreBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ? getKeyStoreFieldBuilder()
                                        : null;
                            } else {
                                keyStoreBuilder_.addAllMessages(other.keyStore_);
                            }
                        }
                    }
                    this.mergeUnknownFields(other.getUnknownFields());
                    return this;
                }

                public final boolean isInitialized() {
                    for (int i = 0; i < getKeyStoreCount(); i++) {
                        if (!getKeyStore(i).isInitialized()) {

                            return false;
                        }
                    }
                    return true;
                }

                public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                        com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList parsedMessage = null;
                    try {
                        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                        parsedMessage = (com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreList) e
                                .getUnfinishedMessage();
                        throw e;
                    } finally {
                        if (parsedMessage != null) {
                            mergeFrom(parsedMessage);
                        }
                    }
                    return this;
                }

                private int bitField0_;

                private java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> keyStore_ = java.util.Collections
                        .emptyList();

                private void ensureKeyStoreIsMutable() {
                    if (!((bitField0_ & 0x00000001) == 0x00000001)) {
                        keyStore_ = new java.util.ArrayList<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore>(
                                keyStore_);
                        bitField0_ |= 0x00000001;
                    }
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> keyStoreBuilder_;

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> getKeyStoreList() {
                    if (keyStoreBuilder_ == null) {
                        return java.util.Collections.unmodifiableList(keyStore_);
                    } else {
                        return keyStoreBuilder_.getMessageList();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public int getKeyStoreCount() {
                    if (keyStoreBuilder_ == null) {
                        return keyStore_.size();
                    } else {
                        return keyStoreBuilder_.getCount();
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore getKeyStore(int index) {
                    if (keyStoreBuilder_ == null) {
                        return keyStore_.get(index);
                    } else {
                        return keyStoreBuilder_.getMessage(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder setKeyStore(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (keyStoreBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreIsMutable();
                        keyStore_.set(index, value);
                        onChanged();
                    } else {
                        keyStoreBuilder_.setMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder setKeyStore(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.set(index, builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreBuilder_.setMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder addKeyStore(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (keyStoreBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreIsMutable();
                        keyStore_.add(value);
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder addKeyStore(int index, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore value) {
                    if (keyStoreBuilder_ == null) {
                        if (value == null) {
                            throw new NullPointerException();
                        }
                        ensureKeyStoreIsMutable();
                        keyStore_.add(index, value);
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(index, value);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder addKeyStore(
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.add(builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder addKeyStore(int index,
                        com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder builderForValue) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.add(index, builderForValue.build());
                        onChanged();
                    } else {
                        keyStoreBuilder_.addMessage(index, builderForValue.build());
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder addAllKeyStore(
                        java.lang.Iterable<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore> values) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        com.google.protobuf.AbstractMessageLite.Builder.addAll(values, keyStore_);
                        onChanged();
                    } else {
                        keyStoreBuilder_.addAllMessages(values);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder clearKeyStore() {
                    if (keyStoreBuilder_ == null) {
                        keyStore_ = java.util.Collections.emptyList();
                        bitField0_ = (bitField0_ & ~0x00000001);
                        onChanged();
                    } else {
                        keyStoreBuilder_.clear();
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public Builder removeKeyStore(int index) {
                    if (keyStoreBuilder_ == null) {
                        ensureKeyStoreIsMutable();
                        keyStore_.remove(index);
                        onChanged();
                    } else {
                        keyStoreBuilder_.remove(index);
                    }
                    return this;
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder getKeyStoreBuilder(int index) {
                    return getKeyStoreFieldBuilder().getBuilder(index);
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder getKeyStoreOrBuilder(int index) {
                    if (keyStoreBuilder_ == null) {
                        return keyStore_.get(index);
                    } else {
                        return keyStoreBuilder_.getMessageOrBuilder(index);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public java.util.List<? extends com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreOrBuilderList() {
                    if (keyStoreBuilder_ != null) {
                        return keyStoreBuilder_.getMessageOrBuilderList();
                    } else {
                        return java.util.Collections.unmodifiableList(keyStore_);
                    }
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addKeyStoreBuilder() {
                    return getKeyStoreFieldBuilder()
                            .addBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder addKeyStoreBuilder(int index) {
                    return getKeyStoreFieldBuilder().addBuilder(index,
                            com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.getDefaultInstance());
                }

                /**
                 * <code>repeated .netty.Message.KeyStore keyStore = 1;</code>
                 *
                 * <pre>
                 * Map值
                 * </pre>
                 */
                public java.util.List<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder> getKeyStoreBuilderList() {
                    return getKeyStoreFieldBuilder().getBuilderList();
                }

                private com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder> getKeyStoreFieldBuilder() {
                    if (keyStoreBuilder_ == null) {
                        keyStoreBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStore.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.KeyStoreOrBuilder>(
                                keyStore_, ((bitField0_ & 0x00000001) == 0x00000001), getParentForChildren(), isClean());
                        keyStore_ = null;
                    }
                    return keyStoreBuilder_;
                }

                // @@protoc_insertion_point(builder_scope:netty.Message.KeyStoreList)
            }

            static {
                defaultInstance = new KeyStoreList(true);
                defaultInstance.initFields();
            }

            // @@protoc_insertion_point(class_scope:netty.Message.KeyStoreList)
        }

        private int bitField0_;
        public static final int MESSAGEID_FIELD_NUMBER = 1;
        private java.lang.Object messageId_;

        /**
         * <code>required string messageId = 1;</code>
         *
         * <pre>
         * 消息ID
         * </pre>
         */
        public boolean hasMessageId() {
            return ((bitField0_ & 0x00000001) == 0x00000001);
        }

        /**
         * <code>required string messageId = 1;</code>
         *
         * <pre>
         * 消息ID
         * </pre>
         */
        public java.lang.String getMessageId() {
            java.lang.Object ref = messageId_;
            if (ref instanceof java.lang.String) {
                return (java.lang.String) ref;
            } else {
                com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                java.lang.String s = bs.toStringUtf8();
                if (bs.isValidUtf8()) {
                    messageId_ = s;
                }
                return s;
            }
        }

        /**
         * <code>required string messageId = 1;</code>
         *
         * <pre>
         * 消息ID
         * </pre>
         */
        public com.google.protobuf.ByteString getMessageIdBytes() {
            java.lang.Object ref = messageId_;
            if (ref instanceof java.lang.String) {
                com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                messageId_ = b;
                return b;
            } else {
                return (com.google.protobuf.ByteString) ref;
            }
        }

        public static final int MESSAGETYPE_FIELD_NUMBER = 2;
        private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType messageType_;

        /**
         * <code>required .netty.Message.MessageType messageType = 2;</code>
         *
         * <pre>
         * 消息类型
         * </pre>
         */
        public boolean hasMessageType() {
            return ((bitField0_ & 0x00000002) == 0x00000002);
        }

        /**
         * <code>required .netty.Message.MessageType messageType = 2;</code>
         *
         * <pre>
         * 消息类型
         * </pre>
         */
        public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType getMessageType() {
            return messageType_;
        }

        public static final int SERVICETYPE_FIELD_NUMBER = 3;
        private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType serviceType_;

        /**
         * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
         *
         * <pre>
         * 业务类型
         * </pre>
         */
        public boolean hasServiceType() {
            return ((bitField0_ & 0x00000004) == 0x00000004);
        }

        /**
         * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
         *
         * <pre>
         * 业务类型
         * </pre>
         */
        public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType getServiceType() {
            return serviceType_;
        }

        public static final int REQMEESAGE_FIELD_NUMBER = 4;
        private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage reqMeesage_;

        /**
         * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
         *
         * <pre>
         * 业务请求消息
         * </pre>
         */
        public boolean hasReqMeesage() {
            return ((bitField0_ & 0x00000008) == 0x00000008);
        }

        /**
         * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
         *
         * <pre>
         * 业务请求消息
         * </pre>
         */
        public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage getReqMeesage() {
            return reqMeesage_;
        }

        /**
         * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
         *
         * <pre>
         * 业务请求消息
         * </pre>
         */
        public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder getReqMeesageOrBuilder() {
            return reqMeesage_;
        }

        public static final int RESPMESSAGE_FIELD_NUMBER = 5;
        private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage respMessage_;

        /**
         * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
         *
         * <pre>
         * 业务响应消息
         * </pre>
         */
        public boolean hasRespMessage() {
            return ((bitField0_ & 0x00000010) == 0x00000010);
        }

        /**
         * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
         *
         * <pre>
         * 业务响应消息
         * </pre>
         */
        public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage getRespMessage() {
            return respMessage_;
        }

        /**
         * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
         *
         * <pre>
         * 业务响应消息
         * </pre>
         */
        public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder getRespMessageOrBuilder() {
            return respMessage_;
        }

        private void initFields() {
            messageId_ = "";
            messageType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType.SERVICE_REQ;
            serviceType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType.LOGIN;
            reqMeesage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.getDefaultInstance();
            respMessage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.getDefaultInstance();
        }

        private byte memoizedIsInitialized = -1;

        public final boolean isInitialized() {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1)
                return true;
            if (isInitialized == 0)
                return false;

            if (!hasMessageId()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (!hasMessageType()) {
                memoizedIsInitialized = 0;
                return false;
            }
            if (hasReqMeesage()) {
                if (!getReqMeesage().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            if (hasRespMessage()) {
                if (!getRespMessage().isInitialized()) {
                    memoizedIsInitialized = 0;
                    return false;
                }
            }
            memoizedIsInitialized = 1;
            return true;
        }

        public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
            getSerializedSize();
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                output.writeBytes(1, getMessageIdBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                output.writeEnum(2, messageType_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                output.writeEnum(3, serviceType_.getNumber());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                output.writeMessage(4, reqMeesage_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                output.writeMessage(5, respMessage_);
            }
            getUnknownFields().writeTo(output);
        }

        private int memoizedSerializedSize = -1;

        public int getSerializedSize() {
            int size = memoizedSerializedSize;
            if (size != -1)
                return size;

            size = 0;
            if (((bitField0_ & 0x00000001) == 0x00000001)) {
                size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, getMessageIdBytes());
            }
            if (((bitField0_ & 0x00000002) == 0x00000002)) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(2, messageType_.getNumber());
            }
            if (((bitField0_ & 0x00000004) == 0x00000004)) {
                size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, serviceType_.getNumber());
            }
            if (((bitField0_ & 0x00000008) == 0x00000008)) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(4, reqMeesage_);
            }
            if (((bitField0_ & 0x00000010) == 0x00000010)) {
                size += com.google.protobuf.CodedOutputStream.computeMessageSize(5, respMessage_);
            }
            size += getUnknownFields().getSerializedSize();
            memoizedSerializedSize = size;
            return size;
        }

        private static final long serialVersionUID = 0L;

        @java.lang.Override
        protected java.lang.Object writeReplace() throws java.io.ObjectStreamException {
            return super.writeReplace();
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(com.google.protobuf.ByteString data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(com.google.protobuf.ByteString data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(byte[] data)
                throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(byte[] data,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws com.google.protobuf.InvalidProtocolBufferException {
            return PARSER.parseFrom(data, extensionRegistry);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseDelimitedFrom(java.io.InputStream input)
                throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseDelimitedFrom(java.io.InputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseDelimitedFrom(input, extensionRegistry);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(com.google.protobuf.CodedInputStream input)
                throws java.io.IOException {
            return PARSER.parseFrom(input);
        }

        public static com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parseFrom(com.google.protobuf.CodedInputStream input,
                com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
            return PARSER.parseFrom(input, extensionRegistry);
        }

        public static Builder newBuilder() {
            return Builder.create();
        }

        public Builder newBuilderForType() {
            return newBuilder();
        }

        public static Builder newBuilder(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message prototype) {
            return newBuilder().mergeFrom(prototype);
        }

        public Builder toBuilder() {
            return newBuilder(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            Builder builder = new Builder(parent);
            return builder;
        }

        /**
         * Protobuf type {@code netty.Message}
         */
        public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>implements
                // @@protoc_insertion_point(builder_implements:netty.Message)
                com.cnfantasia.server.api.access.codec.ake.MessageInfo.MessageOrBuilder {
            public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_descriptor;
            }

            protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_fieldAccessorTable
                        .ensureFieldAccessorsInitialized(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.class,
                                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.Builder.class);
            }

            // Construct using
            // com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.newBuilder()
            private Builder() {
                maybeForceBuilderInitialization();
            }

            private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
                super(parent);
                maybeForceBuilderInitialization();
            }

            private void maybeForceBuilderInitialization() {
                if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
                    getReqMeesageFieldBuilder();
                    getRespMessageFieldBuilder();
                }
            }

            private static Builder create() {
                return new Builder();
            }

            public Builder clear() {
                super.clear();
                messageId_ = "";
                bitField0_ = (bitField0_ & ~0x00000001);
                messageType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType.SERVICE_REQ;
                bitField0_ = (bitField0_ & ~0x00000002);
                serviceType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType.LOGIN;
                bitField0_ = (bitField0_ & ~0x00000004);
                if (reqMeesageBuilder_ == null) {
                    reqMeesage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.getDefaultInstance();
                } else {
                    reqMeesageBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                if (respMessageBuilder_ == null) {
                    respMessage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.getDefaultInstance();
                } else {
                    respMessageBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            public Builder clone() {
                return create().mergeFrom(buildPartial());
            }

            public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.internal_static_netty_Message_descriptor;
            }

            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message getDefaultInstanceForType() {
                return com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.getDefaultInstance();
            }

            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message build() {
                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message result = buildPartial();
                if (!result.isInitialized()) {
                    throw newUninitializedMessageException(result);
                }
                return result;
            }

            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message buildPartial() {
                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message result = new com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message(
                        this);
                int from_bitField0_ = bitField0_;
                int to_bitField0_ = 0;
                if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
                    to_bitField0_ |= 0x00000001;
                }
                result.messageId_ = messageId_;
                if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
                    to_bitField0_ |= 0x00000002;
                }
                result.messageType_ = messageType_;
                if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
                    to_bitField0_ |= 0x00000004;
                }
                result.serviceType_ = serviceType_;
                if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
                    to_bitField0_ |= 0x00000008;
                }
                if (reqMeesageBuilder_ == null) {
                    result.reqMeesage_ = reqMeesage_;
                } else {
                    result.reqMeesage_ = reqMeesageBuilder_.build();
                }
                if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
                    to_bitField0_ |= 0x00000010;
                }
                if (respMessageBuilder_ == null) {
                    result.respMessage_ = respMessage_;
                } else {
                    result.respMessage_ = respMessageBuilder_.build();
                }
                result.bitField0_ = to_bitField0_;
                onBuilt();
                return result;
            }

            public Builder mergeFrom(com.google.protobuf.Message other) {
                if (other instanceof com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message) {
                    return mergeFrom((com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message) other);
                } else {
                    super.mergeFrom(other);
                    return this;
                }
            }

            public Builder mergeFrom(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message other) {
                if (other == com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.getDefaultInstance())
                    return this;
                if (other.hasMessageId()) {
                    bitField0_ |= 0x00000001;
                    messageId_ = other.messageId_;
                    onChanged();
                }
                if (other.hasMessageType()) {
                    setMessageType(other.getMessageType());
                }
                if (other.hasServiceType()) {
                    setServiceType(other.getServiceType());
                }
                if (other.hasReqMeesage()) {
                    mergeReqMeesage(other.getReqMeesage());
                }
                if (other.hasRespMessage()) {
                    mergeRespMessage(other.getRespMessage());
                }
                this.mergeUnknownFields(other.getUnknownFields());
                return this;
            }

            public final boolean isInitialized() {
                if (!hasMessageId()) {

                    return false;
                }
                if (!hasMessageType()) {

                    return false;
                }
                if (hasReqMeesage()) {
                    if (!getReqMeesage().isInitialized()) {

                        return false;
                    }
                }
                if (hasRespMessage()) {
                    if (!getRespMessage().isInitialized()) {

                        return false;
                    }
                }
                return true;
            }

            public Builder mergeFrom(com.google.protobuf.CodedInputStream input,
                    com.google.protobuf.ExtensionRegistryLite extensionRegistry) throws java.io.IOException {
                com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message parsedMessage = null;
                try {
                    parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
                } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                    parsedMessage = (com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message) e.getUnfinishedMessage();
                    throw e;
                } finally {
                    if (parsedMessage != null) {
                        mergeFrom(parsedMessage);
                    }
                }
                return this;
            }

            private int bitField0_;

            private java.lang.Object messageId_ = "";

            /**
             * <code>required string messageId = 1;</code>
             *
             * <pre>
             * 消息ID
             * </pre>
             */
            public boolean hasMessageId() {
                return ((bitField0_ & 0x00000001) == 0x00000001);
            }

            /**
             * <code>required string messageId = 1;</code>
             *
             * <pre>
             * 消息ID
             * </pre>
             */
            public java.lang.String getMessageId() {
                java.lang.Object ref = messageId_;
                if (!(ref instanceof java.lang.String)) {
                    com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
                    java.lang.String s = bs.toStringUtf8();
                    if (bs.isValidUtf8()) {
                        messageId_ = s;
                    }
                    return s;
                } else {
                    return (java.lang.String) ref;
                }
            }

            /**
             * <code>required string messageId = 1;</code>
             *
             * <pre>
             * 消息ID
             * </pre>
             */
            public com.google.protobuf.ByteString getMessageIdBytes() {
                java.lang.Object ref = messageId_;
                if (ref instanceof String) {
                    com.google.protobuf.ByteString b = com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
                    messageId_ = b;
                    return b;
                } else {
                    return (com.google.protobuf.ByteString) ref;
                }
            }

            /**
             * <code>required string messageId = 1;</code>
             *
             * <pre>
             * 消息ID
             * </pre>
             */
            public Builder setMessageId(java.lang.String value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                messageId_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required string messageId = 1;</code>
             *
             * <pre>
             * 消息ID
             * </pre>
             */
            public Builder clearMessageId() {
                bitField0_ = (bitField0_ & ~0x00000001);
                messageId_ = getDefaultInstance().getMessageId();
                onChanged();
                return this;
            }

            /**
             * <code>required string messageId = 1;</code>
             *
             * <pre>
             * 消息ID
             * </pre>
             */
            public Builder setMessageIdBytes(com.google.protobuf.ByteString value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000001;
                messageId_ = value;
                onChanged();
                return this;
            }

            private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType messageType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType.SERVICE_REQ;

            /**
             * <code>required .netty.Message.MessageType messageType = 2;</code>
             *
             * <pre>
             * 消息类型
             * </pre>
             */
            public boolean hasMessageType() {
                return ((bitField0_ & 0x00000002) == 0x00000002);
            }

            /**
             * <code>required .netty.Message.MessageType messageType = 2;</code>
             *
             * <pre>
             * 消息类型
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType getMessageType() {
                return messageType_;
            }

            /**
             * <code>required .netty.Message.MessageType messageType = 2;</code>
             *
             * <pre>
             * 消息类型
             * </pre>
             */
            public Builder setMessageType(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000002;
                messageType_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>required .netty.Message.MessageType messageType = 2;</code>
             *
             * <pre>
             * 消息类型
             * </pre>
             */
            public Builder clearMessageType() {
                bitField0_ = (bitField0_ & ~0x00000002);
                messageType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.MessageType.SERVICE_REQ;
                onChanged();
                return this;
            }

            private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType serviceType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType.LOGIN;

            /**
             * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
             *
             * <pre>
             * 业务类型
             * </pre>
             */
            public boolean hasServiceType() {
                return ((bitField0_ & 0x00000004) == 0x00000004);
            }

            /**
             * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
             *
             * <pre>
             * 业务类型
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType getServiceType() {
                return serviceType_;
            }

            /**
             * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
             *
             * <pre>
             * 业务类型
             * </pre>
             */
            public Builder setServiceType(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType value) {
                if (value == null) {
                    throw new NullPointerException();
                }
                bitField0_ |= 0x00000004;
                serviceType_ = value;
                onChanged();
                return this;
            }

            /**
             * <code>optional .netty.Message.ServiceType serviceType = 3;</code>
             *
             * <pre>
             * 业务类型
             * </pre>
             */
            public Builder clearServiceType() {
                bitField0_ = (bitField0_ & ~0x00000004);
                serviceType_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ServiceType.LOGIN;
                onChanged();
                return this;
            }

            private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage reqMeesage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage
                    .getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder> reqMeesageBuilder_;

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public boolean hasReqMeesage() {
                return ((bitField0_ & 0x00000008) == 0x00000008);
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage getReqMeesage() {
                if (reqMeesageBuilder_ == null) {
                    return reqMeesage_;
                } else {
                    return reqMeesageBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public Builder setReqMeesage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage value) {
                if (reqMeesageBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    reqMeesage_ = value;
                    onChanged();
                } else {
                    reqMeesageBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public Builder setReqMeesage(
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder builderForValue) {
                if (reqMeesageBuilder_ == null) {
                    reqMeesage_ = builderForValue.build();
                    onChanged();
                } else {
                    reqMeesageBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public Builder mergeReqMeesage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage value) {
                if (reqMeesageBuilder_ == null) {
                    if (((bitField0_ & 0x00000008) == 0x00000008)
                            && reqMeesage_ != com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage
                                    .getDefaultInstance()) {
                        reqMeesage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.newBuilder(reqMeesage_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        reqMeesage_ = value;
                    }
                    onChanged();
                } else {
                    reqMeesageBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000008;
                return this;
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public Builder clearReqMeesage() {
                if (reqMeesageBuilder_ == null) {
                    reqMeesage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.getDefaultInstance();
                    onChanged();
                } else {
                    reqMeesageBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000008);
                return this;
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder getReqMeesageBuilder() {
                bitField0_ |= 0x00000008;
                onChanged();
                return getReqMeesageFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder getReqMeesageOrBuilder() {
                if (reqMeesageBuilder_ != null) {
                    return reqMeesageBuilder_.getMessageOrBuilder();
                } else {
                    return reqMeesage_;
                }
            }

            /**
             * <code>optional .netty.Message.ReqMessage reqMeesage = 4;</code>
             *
             * <pre>
             * 业务请求消息
             * </pre>
             */
            private com.google.protobuf.SingleFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder> getReqMeesageFieldBuilder() {
                if (reqMeesageBuilder_ == null) {
                    reqMeesageBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessage.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.ReqMessageOrBuilder>(
                            getReqMeesage(), getParentForChildren(), isClean());
                    reqMeesage_ = null;
                }
                return reqMeesageBuilder_;
            }

            private com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage respMessage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage
                    .getDefaultInstance();
            private com.google.protobuf.SingleFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder> respMessageBuilder_;

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public boolean hasRespMessage() {
                return ((bitField0_ & 0x00000010) == 0x00000010);
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage getRespMessage() {
                if (respMessageBuilder_ == null) {
                    return respMessage_;
                } else {
                    return respMessageBuilder_.getMessage();
                }
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public Builder setRespMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage value) {
                if (respMessageBuilder_ == null) {
                    if (value == null) {
                        throw new NullPointerException();
                    }
                    respMessage_ = value;
                    onChanged();
                } else {
                    respMessageBuilder_.setMessage(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public Builder setRespMessage(
                    com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder builderForValue) {
                if (respMessageBuilder_ == null) {
                    respMessage_ = builderForValue.build();
                    onChanged();
                } else {
                    respMessageBuilder_.setMessage(builderForValue.build());
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public Builder mergeRespMessage(com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage value) {
                if (respMessageBuilder_ == null) {
                    if (((bitField0_ & 0x00000010) == 0x00000010)
                            && respMessage_ != com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage
                                    .getDefaultInstance()) {
                        respMessage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.newBuilder(respMessage_)
                                .mergeFrom(value).buildPartial();
                    } else {
                        respMessage_ = value;
                    }
                    onChanged();
                } else {
                    respMessageBuilder_.mergeFrom(value);
                }
                bitField0_ |= 0x00000010;
                return this;
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public Builder clearRespMessage() {
                if (respMessageBuilder_ == null) {
                    respMessage_ = com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.getDefaultInstance();
                    onChanged();
                } else {
                    respMessageBuilder_.clear();
                }
                bitField0_ = (bitField0_ & ~0x00000010);
                return this;
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder getRespMessageBuilder() {
                bitField0_ |= 0x00000010;
                onChanged();
                return getRespMessageFieldBuilder().getBuilder();
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            public com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder getRespMessageOrBuilder() {
                if (respMessageBuilder_ != null) {
                    return respMessageBuilder_.getMessageOrBuilder();
                } else {
                    return respMessage_;
                }
            }

            /**
             * <code>optional .netty.Message.RespMessage respMessage = 5;</code>
             *
             * <pre>
             * 业务响应消息
             * </pre>
             */
            private com.google.protobuf.SingleFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder> getRespMessageFieldBuilder() {
                if (respMessageBuilder_ == null) {
                    respMessageBuilder_ = new com.google.protobuf.SingleFieldBuilder<com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessage.Builder, com.cnfantasia.server.api.access.codec.ake.MessageInfo.Message.RespMessageOrBuilder>(
                            getRespMessage(), getParentForChildren(), isClean());
                    respMessage_ = null;
                }
                return respMessageBuilder_;
            }

            // @@protoc_insertion_point(builder_scope:netty.Message)
        }

        static {
            defaultInstance = new Message(true);
            defaultInstance.initFields();
        }

        // @@protoc_insertion_point(class_scope:netty.Message)
    }

    private static final com.google.protobuf.Descriptors.Descriptor internal_static_netty_Message_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_netty_Message_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_netty_Message_ReqMessage_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_netty_Message_ReqMessage_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_netty_Message_RespMessage_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_netty_Message_RespMessage_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_netty_Message_KeyStore_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_netty_Message_KeyStore_fieldAccessorTable;
    private static final com.google.protobuf.Descriptors.Descriptor internal_static_netty_Message_KeyStoreList_descriptor;
    private static com.google.protobuf.GeneratedMessage.FieldAccessorTable internal_static_netty_Message_KeyStoreList_fieldAccessorTable;

    public static com.google.protobuf.Descriptors.FileDescriptor getDescriptor() {
        return descriptor;
    }

    private static com.google.protobuf.Descriptors.FileDescriptor descriptor;

    static {
        java.lang.String[] descriptorData = {
                "\n\021MessageInfo.proto\022\005netty\"\253\t\n\007Message\022\021"
                        + "\n\tmessageId\030\001 \002(\t\022/\n\013messageType\030\002 \002(\0162\032"
                        + ".netty.Message.MessageType\022/\n\013serviceTyp" + "e\030\003 \001(\0162\032.netty.Message.ServiceType\022-\n\nr"
                        + "eqMeesage\030\004 \001(\0132\031.netty.Message.ReqMessa"
                        + "ge\022/\n\013respMessage\030\005 \001(\0132\032.netty.Message."
                        + "RespMessage\032T\n\nReqMessage\022\017\n\007reqTime\030\001 \002"
                        + "(\003\022\013\n\003ver\030\002 \001(\t\022(\n\007busData\030\003 \003(\0132\027.netty"
                        + ".Message.KeyStore\032\210\001\n\013RespMessage\022\016\n\006sta"
                        + "tus\030\001 \002(\005\022\022\n\nresultCode\030\002 \002(\005\022\014\n\004desc\030\003 ",
                "\002(\t\022(\n\007busData\030\004 \003(\0132\027.netty.Message.Key"
                        + "Store\022\020\n\010respTime\030\005 \001(\003\022\013\n\003ver\030\006 \001(\t\032\227\001\n"
                        + "\010KeyStore\022\013\n\003key\030\001 \002(\t\022\r\n\005value\030\002 \001(\t\0221\n"
                        + "\014keyStoreList\030\003 \003(\0132\033.netty.Message.KeyS"
                        + "toreList\022\021\n\tbyteValue\030\004 \001(\014\022)\n\010keyStore\030"
                        + "\005 \003(\0132\027.netty.Message.KeyStore\0329\n\014KeySto"
                        + "reList\022)\n\010keyStore\030\001 \003(\0132\027.netty.Message"
                        + ".KeyStore\"W\n\013MessageType\022\017\n\013SERVICE_REQ\020"
                        + "\000\022\020\n\014SERVICE_RESP\020\001\022\021\n\rHEARTBEAT_REQ\020\002\022\022"
                        + "\n\016HEARTBEAT_RESP\020\003\"\273\003\n\013ServiceType\022\t\n\005LO",
                "GIN\020\000\022\016\n\nSEARCH_CAR\020\001\022\r\n\tSYNC_PARK\020\002\022\023\n\017"
                        + "REPORT_CARPORTS\020\003\022\n\n\006CAR_IN\020\004\022\013\n\007CAR_OUT"
                        + "\020\005\022\016\n\nPREPAY_FEE\020\006\022\r\n\tQUERY_FEE\020\007\022\022\n\016SYN"
                        + "C_PARK_BILL\020\010\022\021\n\rSYNC_YDT_BILL\020\t\022\024\n\020SYNC"
                        + "_SERVER_TIME\020\n\022\020\n\014QUERY_COUPON\020\013\022\031\n\025CORR"
                        + "ECT_PARK_CAR_CODE\020\014\022\030\n\024CORRECT_YDT_CAR_C"
                        + "ODE\020\r\022\027\n\023UPLOAD_CAMERA_IMAGE\020\016\022\024\n\020QUERY_"
                        + "MONTH_CARD\020\017\022\035\n\031RENEWALFEES_OF_MONTH_CAR"
                        + "D\020\020\022\021\n\rOPEN_GATE_REQ\020\021\022\027\n\023UPLOAD_CAR_LOC"
                        + "ATION\020\022\022\026\n\022SEND_TRADER_COUPON\020\023\022\037\n\033UPDAT",
                "E_TRADER_COUPON_STATUS\020\024B9\n*com.cnfantas" + "ia.server.api.access.codec.akeB\013MessageI" + "nfo" };
        com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner = new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
            public com.google.protobuf.ExtensionRegistry assignDescriptors(com.google.protobuf.Descriptors.FileDescriptor root) {
                descriptor = root;
                return null;
            }
        };
        com.google.protobuf.Descriptors.FileDescriptor.internalBuildGeneratedFileFrom(descriptorData,
                new com.google.protobuf.Descriptors.FileDescriptor[] {}, assigner);
        internal_static_netty_Message_descriptor = getDescriptor().getMessageTypes().get(0);
        internal_static_netty_Message_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_Message_descriptor,
                new java.lang.String[] { "MessageId", "MessageType", "ServiceType", "ReqMeesage", "RespMessage", });
        internal_static_netty_Message_ReqMessage_descriptor = internal_static_netty_Message_descriptor.getNestedTypes().get(0);
        internal_static_netty_Message_ReqMessage_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_Message_ReqMessage_descriptor, new java.lang.String[] { "ReqTime", "Ver", "BusData", });
        internal_static_netty_Message_RespMessage_descriptor = internal_static_netty_Message_descriptor.getNestedTypes().get(1);
        internal_static_netty_Message_RespMessage_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_Message_RespMessage_descriptor,
                new java.lang.String[] { "Status", "ResultCode", "Desc", "BusData", "RespTime", "Ver", });
        internal_static_netty_Message_KeyStore_descriptor = internal_static_netty_Message_descriptor.getNestedTypes().get(2);
        internal_static_netty_Message_KeyStore_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_Message_KeyStore_descriptor,
                new java.lang.String[] { "Key", "Value", "KeyStoreList", "ByteValue", "KeyStore", });
        internal_static_netty_Message_KeyStoreList_descriptor = internal_static_netty_Message_descriptor.getNestedTypes().get(3);
        internal_static_netty_Message_KeyStoreList_fieldAccessorTable = new com.google.protobuf.GeneratedMessage.FieldAccessorTable(
                internal_static_netty_Message_KeyStoreList_descriptor, new java.lang.String[] { "KeyStore", });
    }

    // @@protoc_insertion_point(outer_class_scope)
}
