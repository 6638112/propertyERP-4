/**   
* Filename:    HeaderInterceptor.java   
* @version:    1.0  
* Create at:   2014年5月6日 上午12:54:08   
* Description:  
*   
* Modification History:   
* Date        Author      Version     Description   
* ----------------------------------------------------------------- 
* 2014年5月6日    shiyl      1.0         1.0 Version   
*/
package com.cnfantasia.server.api.pub.header;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.web.servlet.handler.HandlerInterceptorAdapter;

import com.cnfantasia.server.api.commonBusiness.service.ICommonLoginService;
import com.cnfantasia.server.api.pub.constant.FocConstants;
import com.cnfantasia.server.api.pub.session.SessionManager;

/**
 * Filename:    HeaderInterceptor.java
 * @version:    1.0.0
 * Create at:   2014年5月6日 上午12:54:08
 * Description:请求头header拦截处理
 *
 * Modification History:
 * Date           Author           Version           Description
 * ------------------------------------------------------------------
 * 2014年5月6日       shiyl             1.0             1.0 Version
 */
public class HeaderInterceptor extends HandlerInterceptorAdapter{

	private ICommonLoginService commonLoginService;
	public void setCommonLoginService(ICommonLoginService commonLoginService) {
		this.commonLoginService = commonLoginService;
	}

	@Override
	public boolean preHandle(HttpServletRequest request, HttpServletResponse response, Object handler) throws Exception {
//		//将主渠道信息存入request的attribute
//		String channelId = request.getHeader(HEADER_PARAM_NAME_CHANNEL);
//		request.setAttribute(HeaderManager.HEADER_ATTR_NAME_CHANNEL, channelId);
		//将sub渠道信息存入request的attribute
		String subChannel = request.getHeader(FocConstants.Header_Param.HEADER_PARAM_NAME_SUB_CHANNEL);
		SessionManager.getRequest().getSession().setAttribute(HeaderManager.HEADER_ATTR_NAME_SUB_CHANNEL,subChannel);
		
		String deviceId = request.getHeader(FocConstants.Header_Param.HEADER_PARAM_NAME_DEVICE_ID);
		SessionManager.getRequest().getSession().setAttribute(HeaderManager.HEADER_ATTR_NAME_DEVICE_ID,deviceId);
		
		
		//检查SessionKey，并自动登录
		commonLoginService.checkSessionKeyAndAutoLogin(request);
		return super.preHandle(request, response, handler);
	}
	
}
