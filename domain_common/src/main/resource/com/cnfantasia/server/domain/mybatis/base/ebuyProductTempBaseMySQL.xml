<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN:商品表，临时存储从外部抓取的数据 t_ebuy_product_temp -->
<mapper namespace="ebuyProductTempBase">
	<resultMap type="EbuyProductTemp" id="ebuyProductTempBaseMap">
        <id column="f_id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="t_supply_merchant_f_id" javaType="java.math.BigInteger" property="tSupplyMerchantFId"/>  <!-- 供应商Id -->        <result column="f_name" javaType="java.lang.String" property="name"/>  <!-- 商品名称 -->        <result column="f_name_mini" javaType="java.lang.String" property="nameMini"/>  <!-- 商品名称缩写 -->        <result column="f_price" javaType="java.lang.Long" property="price"/>  <!-- 价格 -->        <result column="f_price_discount" javaType="java.lang.Long" property="priceDiscount"/>  <!-- 折扣后价格 -->        <result column="f_create_time" javaType="java.lang.String" property="createTime"/>  <!-- 创建时间 -->        <result column="f_pic_base" javaType="java.lang.String" property="picBase"/>  <!-- 产品外观图片 -->        <result column="f_pic_base_mini" javaType="java.lang.String" property="picBaseMini"/>  <!-- 产品外观小图 -->        <result column="f_price_unit" javaType="java.lang.String" property="priceUnit"/>  <!-- 计价单位 -->        <result column="f_specification" javaType="java.lang.String" property="specification"/>  <!-- 规格 -->        <result column="f_desc" javaType="java.lang.String" property="desc"/>  <!-- 产品描述 -->        <result column="f_status" javaType="java.lang.Integer" property="status"/>  <!-- 产品状态 -->        <result column="f_is_sync" javaType="java.lang.Integer" property="isSync"/>  <!-- 是否同步 -->        <result column="f_up_shelf_time" javaType="java.lang.String" property="upShelfTime"/>  <!-- 上架时间 -->        <result column="f_down_shelf_time" javaType="java.lang.String" property="downShelfTime"/>  <!-- 下架时间 -->        <result column="f_sys0_add_time" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="f_sys0_upd_time" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="f_sys0_del_time" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="f_sys0_add_user" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="f_sys0_upd_user" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="f_sys0_del_user" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="f_sys0_del_state" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->        <result column="f_src_id" javaType="java.math.BigInteger" property="srcId"/>  <!-- 源ID，从哪个网站上抓的，就取那里的ID -->        <result column="f_from_where" javaType="java.lang.String" property="fromWhere"/>  <!-- 从哪里抓取，比如”海吉星“，”中粮“，”依谷网“ -->        <result column="f_src_product_type_id" javaType="java.math.BigInteger" property="srcProductTypeId"/>  <!-- 源产品类型ID，从哪个网站上抓的，就取那里的产品类型ID -->        <result column="t_ebuy_product_type_f_id" javaType="java.math.BigInteger" property="tEbuyProductTypeFId"/>  <!-- 商品分类 -->        <result column="f_left_count" javaType="java.math.BigInteger" property="leftCount"/>  <!-- 库存数 -->
	</resultMap>
	<resultMap type="EbuyProductTemp" id="ebuyProductTempExtendMap" extends="ebuyProductTempBaseMap">
	</resultMap>
	<resultMap type="EbuyProductTemp" id="ebuyProductTempBaseMap_AppendTable">
        <id column="EPTid" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="EPTtSupplyMerchantFId" javaType="java.math.BigInteger" property="tSupplyMerchantFId"/>  <!-- 供应商Id -->        <result column="EPTname" javaType="java.lang.String" property="name"/>  <!-- 商品名称 -->        <result column="EPTnameMini" javaType="java.lang.String" property="nameMini"/>  <!-- 商品名称缩写 -->        <result column="EPTprice" javaType="java.lang.Long" property="price"/>  <!-- 价格 -->        <result column="EPTpriceDiscount" javaType="java.lang.Long" property="priceDiscount"/>  <!-- 折扣后价格 -->        <result column="EPTcreateTime" javaType="java.lang.String" property="createTime"/>  <!-- 创建时间 -->        <result column="EPTpicBase" javaType="java.lang.String" property="picBase"/>  <!-- 产品外观图片 -->        <result column="EPTpicBaseMini" javaType="java.lang.String" property="picBaseMini"/>  <!-- 产品外观小图 -->        <result column="EPTpriceUnit" javaType="java.lang.String" property="priceUnit"/>  <!-- 计价单位 -->        <result column="EPTspecification" javaType="java.lang.String" property="specification"/>  <!-- 规格 -->        <result column="EPTdesc" javaType="java.lang.String" property="desc"/>  <!-- 产品描述 -->        <result column="EPTstatus" javaType="java.lang.Integer" property="status"/>  <!-- 产品状态 -->        <result column="EPTisSync" javaType="java.lang.Integer" property="isSync"/>  <!-- 是否同步 -->        <result column="EPTupShelfTime" javaType="java.lang.String" property="upShelfTime"/>  <!-- 上架时间 -->        <result column="EPTdownShelfTime" javaType="java.lang.String" property="downShelfTime"/>  <!-- 下架时间 -->        <result column="EPTsys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="EPTsys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="EPTsys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="EPTsys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="EPTsys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="EPTsys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="EPTsys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->        <result column="EPTsrcId" javaType="java.math.BigInteger" property="srcId"/>  <!-- 源ID，从哪个网站上抓的，就取那里的ID -->        <result column="EPTfromWhere" javaType="java.lang.String" property="fromWhere"/>  <!-- 从哪里抓取，比如”海吉星“，”中粮“，”依谷网“ -->        <result column="EPTsrcProductTypeId" javaType="java.math.BigInteger" property="srcProductTypeId"/>  <!-- 源产品类型ID，从哪个网站上抓的，就取那里的产品类型ID -->        <result column="EPTtEbuyProductTypeFId" javaType="java.math.BigInteger" property="tEbuyProductTypeFId"/>  <!-- 商品分类 -->        <result column="EPTleftCount" javaType="java.math.BigInteger" property="leftCount"/>  <!-- 库存数 -->
	</resultMap>
	<resultMap type="EbuyProductTemp" id="ebuyProductTempBaseMap_AppendTable1">
        <id column="EPT1id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="EPT1tSupplyMerchantFId" javaType="java.math.BigInteger" property="tSupplyMerchantFId"/>  <!-- 供应商Id -->        <result column="EPT1name" javaType="java.lang.String" property="name"/>  <!-- 商品名称 -->        <result column="EPT1nameMini" javaType="java.lang.String" property="nameMini"/>  <!-- 商品名称缩写 -->        <result column="EPT1price" javaType="java.lang.Long" property="price"/>  <!-- 价格 -->        <result column="EPT1priceDiscount" javaType="java.lang.Long" property="priceDiscount"/>  <!-- 折扣后价格 -->        <result column="EPT1createTime" javaType="java.lang.String" property="createTime"/>  <!-- 创建时间 -->        <result column="EPT1picBase" javaType="java.lang.String" property="picBase"/>  <!-- 产品外观图片 -->        <result column="EPT1picBaseMini" javaType="java.lang.String" property="picBaseMini"/>  <!-- 产品外观小图 -->        <result column="EPT1priceUnit" javaType="java.lang.String" property="priceUnit"/>  <!-- 计价单位 -->        <result column="EPT1specification" javaType="java.lang.String" property="specification"/>  <!-- 规格 -->        <result column="EPT1desc" javaType="java.lang.String" property="desc"/>  <!-- 产品描述 -->        <result column="EPT1status" javaType="java.lang.Integer" property="status"/>  <!-- 产品状态 -->        <result column="EPT1isSync" javaType="java.lang.Integer" property="isSync"/>  <!-- 是否同步 -->        <result column="EPT1upShelfTime" javaType="java.lang.String" property="upShelfTime"/>  <!-- 上架时间 -->        <result column="EPT1downShelfTime" javaType="java.lang.String" property="downShelfTime"/>  <!-- 下架时间 -->        <result column="EPT1sys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="EPT1sys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="EPT1sys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="EPT1sys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="EPT1sys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="EPT1sys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="EPT1sys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->        <result column="EPT1srcId" javaType="java.math.BigInteger" property="srcId"/>  <!-- 源ID，从哪个网站上抓的，就取那里的ID -->        <result column="EPT1fromWhere" javaType="java.lang.String" property="fromWhere"/>  <!-- 从哪里抓取，比如”海吉星“，”中粮“，”依谷网“ -->        <result column="EPT1srcProductTypeId" javaType="java.math.BigInteger" property="srcProductTypeId"/>  <!-- 源产品类型ID，从哪个网站上抓的，就取那里的产品类型ID -->        <result column="EPT1tEbuyProductTypeFId" javaType="java.math.BigInteger" property="tEbuyProductTypeFId"/>  <!-- 商品分类 -->        <result column="EPT1leftCount" javaType="java.math.BigInteger" property="leftCount"/>  <!-- 库存数 -->
	</resultMap>
	<!-- 公共sql提取  -->
	<sql id="queryHead">
		EPT.f_id,EPT.t_supply_merchant_f_id,EPT.f_name,EPT.f_name_mini,EPT.f_price,EPT.f_price_discount,date_format(EPT.f_create_time,'%Y-%m-%d %T') as f_create_time,EPT.f_pic_base,EPT.f_pic_base_mini,EPT.f_price_unit,EPT.f_specification,EPT.f_desc,EPT.f_status,EPT.f_is_sync,date_format(EPT.f_up_shelf_time,'%Y-%m-%d %T') as f_up_shelf_time,date_format(EPT.f_down_shelf_time,'%Y-%m-%d %T') as f_down_shelf_time,EPT.f_src_id,EPT.f_from_where,EPT.f_src_product_type_id,EPT.t_ebuy_product_type_f_id,EPT.f_left_count
	</sql>
	<sql id="queryHead_AppendTable">
		EPT.f_id as EPTid,EPT.t_supply_merchant_f_id as EPTtSupplyMerchantFId,EPT.f_name as EPTname,EPT.f_name_mini as EPTnameMini,EPT.f_price as EPTprice,EPT.f_price_discount as EPTpriceDiscount,date_format(EPT.f_create_time,'%Y-%m-%d %T') as EPTcreateTime,EPT.f_pic_base as EPTpicBase,EPT.f_pic_base_mini as EPTpicBaseMini,EPT.f_price_unit as EPTpriceUnit,EPT.f_specification as EPTspecification,EPT.f_desc as EPTdesc,EPT.f_status as EPTstatus,EPT.f_is_sync as EPTisSync,date_format(EPT.f_up_shelf_time,'%Y-%m-%d %T') as EPTupShelfTime,date_format(EPT.f_down_shelf_time,'%Y-%m-%d %T') as EPTdownShelfTime,EPT.f_src_id as EPTsrcId,EPT.f_from_where as EPTfromWhere,EPT.f_src_product_type_id as EPTsrcProductTypeId,EPT.t_ebuy_product_type_f_id as EPTtEbuyProductTypeFId,EPT.f_left_count as EPTleftCount
	</sql>
	<sql id="queryHead_AppendTable1">
		EPT1.f_id as EPT1id,EPT1.t_supply_merchant_f_id as EPT1tSupplyMerchantFId,EPT1.f_name as EPT1name,EPT1.f_name_mini as EPT1nameMini,EPT1.f_price as EPT1price,EPT1.f_price_discount as EPT1priceDiscount,date_format(EPT1.f_create_time,'%Y-%m-%d %T') as EPT1createTime,EPT1.f_pic_base as EPT1picBase,EPT1.f_pic_base_mini as EPT1picBaseMini,EPT1.f_price_unit as EPT1priceUnit,EPT1.f_specification as EPT1specification,EPT1.f_desc as EPT1desc,EPT1.f_status as EPT1status,EPT1.f_is_sync as EPT1isSync,date_format(EPT1.f_up_shelf_time,'%Y-%m-%d %T') as EPT1upShelfTime,date_format(EPT1.f_down_shelf_time,'%Y-%m-%d %T') as EPT1downShelfTime,EPT1.f_src_id as EPT1srcId,EPT1.f_from_where as EPT1fromWhere,EPT1.f_src_product_type_id as EPT1srcProductTypeId,EPT1.t_ebuy_product_type_f_id as EPT1tEbuyProductTypeFId,EPT1.f_left_count as EPT1leftCount
	</sql>
	<sql id="querySql">
        <if test="id != null">  and (EPT.f_id = #{id} ) </if>        <if test="tSupplyMerchantFId != null">  and (EPT.t_supply_merchant_f_id = #{tSupplyMerchantFId} ) </if>        <if test="name != null">  and (EPT.f_name = #{name} ) </if>        <if test="nameMini != null">  and (EPT.f_name_mini = #{nameMini} ) </if>        <if test="price != null">  and (EPT.f_price = #{price} ) </if>        <if test="priceDiscount != null">  and (EPT.f_price_discount = #{priceDiscount} ) </if>        <if test="createTime != null and !createTime.equals('')  ">  and (EPT.f_create_time = str_to_date(#{createTime},'%Y-%m-%d %T') ) </if>        <if test="createTime_START != null and !createTime_START.equals('')  ">              <![CDATA[ and (EPT.f_create_time >= str_to_date(#{createTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="createTime_END != null and !createTime_END.equals('')  ">            <![CDATA[ and (EPT.f_create_time <= str_to_date(#{createTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="picBase != null">  and (EPT.f_pic_base = #{picBase} ) </if>        <if test="picBaseMini != null">  and (EPT.f_pic_base_mini = #{picBaseMini} ) </if>        <if test="priceUnit != null">  and (EPT.f_price_unit = #{priceUnit} ) </if>        <if test="specification != null">  and (EPT.f_specification = #{specification} ) </if>        <if test="desc != null">  and (EPT.f_desc = #{desc} ) </if>        <if test="status != null">  and (EPT.f_status = #{status} ) </if>        <if test="isSync != null">  and (EPT.f_is_sync = #{isSync} ) </if>        <if test="upShelfTime != null and !upShelfTime.equals('')  ">  and (EPT.f_up_shelf_time = str_to_date(#{upShelfTime},'%Y-%m-%d %T') ) </if>        <if test="upShelfTime_START != null and !upShelfTime_START.equals('')  ">              <![CDATA[ and (EPT.f_up_shelf_time >= str_to_date(#{upShelfTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="upShelfTime_END != null and !upShelfTime_END.equals('')  ">            <![CDATA[ and (EPT.f_up_shelf_time <= str_to_date(#{upShelfTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="downShelfTime != null and !downShelfTime.equals('')  ">  and (EPT.f_down_shelf_time = str_to_date(#{downShelfTime},'%Y-%m-%d %T') ) </if>        <if test="downShelfTime_START != null and !downShelfTime_START.equals('')  ">              <![CDATA[ and (EPT.f_down_shelf_time >= str_to_date(#{downShelfTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="downShelfTime_END != null and !downShelfTime_END.equals('')  ">            <![CDATA[ and (EPT.f_down_shelf_time <= str_to_date(#{downShelfTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (EPT.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (EPT.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (EPT.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (EPT.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (EPT.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (EPT.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (EPT.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (EPT.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (EPT.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null">  and (EPT.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null">  and (EPT.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null">  and (EPT.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null">  and (EPT.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null">  and (EPT.f_sys0_del_state = 0 ) </if>        <if test="srcId != null">  and (EPT.f_src_id = #{srcId} ) </if>        <if test="fromWhere != null">  and (EPT.f_from_where = #{fromWhere} ) </if>        <if test="srcProductTypeId != null">  and (EPT.f_src_product_type_id = #{srcProductTypeId} ) </if>        <if test="tEbuyProductTypeFId != null">  and (EPT.t_ebuy_product_type_f_id = #{tEbuyProductTypeFId} ) </if>        <if test="leftCount != null">  and (EPT.f_left_count = #{leftCount} ) </if>
	</sql>
	<sql id="querySqlDim">
        <if test="id != null and !id.equals('')  ">  and (EPT.f_id = #{id} ) </if>        <if test="tSupplyMerchantFId != null and !tSupplyMerchantFId.equals('')  ">  and (EPT.t_supply_merchant_f_id = #{tSupplyMerchantFId} ) </if>        <if test="name != null and !name.equals('')  ">  and (EPT.f_name like CONCAT('%',#{name},'%') ) </if>        <if test="nameMini != null and !nameMini.equals('')  ">  and (EPT.f_name_mini like CONCAT('%',#{nameMini},'%') ) </if>        <if test="price != null and !price.equals('')  ">  and (EPT.f_price = #{price} ) </if>        <if test="priceDiscount != null and !priceDiscount.equals('')  ">  and (EPT.f_price_discount = #{priceDiscount} ) </if>        <if test="createTime != null and !createTime.equals('')  ">  and (EPT.f_create_time = str_to_date(#{createTime},'%Y-%m-%d %T') ) </if>        <if test="createTime_START != null and !createTime_START.equals('')  ">              <![CDATA[ and (EPT.f_create_time >= str_to_date(#{createTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="createTime_END != null and !createTime_END.equals('')  ">            <![CDATA[ and (EPT.f_create_time <= str_to_date(#{createTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="picBase != null and !picBase.equals('')  ">  and (EPT.f_pic_base like CONCAT('%',#{picBase},'%') ) </if>        <if test="picBaseMini != null and !picBaseMini.equals('')  ">  and (EPT.f_pic_base_mini like CONCAT('%',#{picBaseMini},'%') ) </if>        <if test="priceUnit != null and !priceUnit.equals('')  ">  and (EPT.f_price_unit like CONCAT('%',#{priceUnit},'%') ) </if>        <if test="specification != null and !specification.equals('')  ">  and (EPT.f_specification like CONCAT('%',#{specification},'%') ) </if>        <if test="desc != null and !desc.equals('')  ">  and (EPT.f_desc like CONCAT('%',#{desc},'%') ) </if>        <if test="status != null and !status.equals('')  ">  and (EPT.f_status = #{status} ) </if>        <if test="isSync != null and !isSync.equals('')  ">  and (EPT.f_is_sync = #{isSync} ) </if>        <if test="upShelfTime != null and !upShelfTime.equals('')  ">  and (EPT.f_up_shelf_time = str_to_date(#{upShelfTime},'%Y-%m-%d %T') ) </if>        <if test="upShelfTime_START != null and !upShelfTime_START.equals('')  ">              <![CDATA[ and (EPT.f_up_shelf_time >= str_to_date(#{upShelfTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="upShelfTime_END != null and !upShelfTime_END.equals('')  ">            <![CDATA[ and (EPT.f_up_shelf_time <= str_to_date(#{upShelfTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="downShelfTime != null and !downShelfTime.equals('')  ">  and (EPT.f_down_shelf_time = str_to_date(#{downShelfTime},'%Y-%m-%d %T') ) </if>        <if test="downShelfTime_START != null and !downShelfTime_START.equals('')  ">              <![CDATA[ and (EPT.f_down_shelf_time >= str_to_date(#{downShelfTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="downShelfTime_END != null and !downShelfTime_END.equals('')  ">            <![CDATA[ and (EPT.f_down_shelf_time <= str_to_date(#{downShelfTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (EPT.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (EPT.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (EPT.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (EPT.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (EPT.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (EPT.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (EPT.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (EPT.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (EPT.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null and !sys0AddUser.equals('')  ">  and (EPT.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null and !sys0UpdUser.equals('')  ">  and (EPT.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null and !sys0DelUser.equals('')  ">  and (EPT.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null and !sys0DelState.equals('')  ">  and (EPT.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null or sys0DelState == '' ">  and (EPT.f_sys0_del_state = 0 ) </if>        <if test="srcId != null and !srcId.equals('')  ">  and (EPT.f_src_id = #{srcId} ) </if>        <if test="fromWhere != null and !fromWhere.equals('')  ">  and (EPT.f_from_where like CONCAT('%',#{fromWhere},'%') ) </if>        <if test="srcProductTypeId != null and !srcProductTypeId.equals('')  ">  and (EPT.f_src_product_type_id = #{srcProductTypeId} ) </if>        <if test="tEbuyProductTypeFId != null and !tEbuyProductTypeFId.equals('')  ">  and (EPT.t_ebuy_product_type_f_id = #{tEbuyProductTypeFId} ) </if>        <if test="leftCount != null and !leftCount.equals('')  ">  and (EPT.f_left_count = #{leftCount} ) </if>
	</sql>
	<sql id="dimCheckSql">
		<if test="_QUERY_TYPE_IF_DIM == true"><include refid="ebuyProductTempBase.querySqlDim"/></if>
		<if test="_QUERY_TYPE_IF_DIM == null or  _QUERY_TYPE_IF_DIM == '' or  _QUERY_TYPE_IF_DIM == false or _QUERY_TYPE_IF_DIM != true"><include refid="ebuyProductTempBase.querySql"/></if><!-- 默认精确查询 -->
		<!-- <if test="_QUERY_TYPE_IF_DIM != true"><include refid="ebuyProductTempBase.querySql"/></if> --><!-- 默认精确查询 -->
	</sql>
	<!-- 各种查询附加的查询条件 -->
	<sql id="busiQueryCondition">
	    <include refid="ebuyProductTempBase.busiQueryCount"/>
	</sql>
	<!-- 查询记录数附加的查询条件 -->
	<sql id="busiQueryCount">
	     FROM t_ebuy_product_temp EPT    	 WHERE 1=1
	</sql>
	
	<!-- 根据条件查询(商品表，临时存储从外部抓取的数据)信息。 -->
	<sql id="select_ebuyProductTemp">
		SELECT <include refid="ebuyProductTempBase.queryHead"/>
		<include refid="ebuyProductTempBase.busiQueryCondition"/>
		<include refid="ebuyProductTempBase.dimCheckSql"/>
		ORDER BY EPT.f_id DESC
	</sql>
	<select id="select_ebuyProductTemp" parameterType="java.util.Map" resultMap="ebuyProductTempBase.ebuyProductTempExtendMap">
		<include refid="ebuyProductTempBase.select_ebuyProductTemp"/>
	</select>
	
	<!-- 根据条件分页查询(商品表，临时存储从外部抓取的数据)信息  -->
	<sql id="select_ebuyProductTemp_withPage">
		SELECT <include refid="ebuyProductTempBase.queryHead"/>
		<include refid="ebuyProductTempBase.busiQueryCondition"/>
		<include refid="ebuyProductTempBase.dimCheckSql"/>
		ORDER BY f_id DESC
		<![CDATA[ LIMIT #{_begin},#{_length} ]]>
	</sql>
	<select id="select_ebuyProductTemp_withPage" resultMap="ebuyProductTempBase.ebuyProductTempExtendMap" parameterType="java.util.Map">
		<include refid="ebuyProductTempBase.select_ebuyProductTemp_withPage"/>
	</select>

	<!-- 根据序列号查询某个(商品表，临时存储从外部抓取的数据)信息。 -->
	<sql id="select_ebuyProductTemp_bySeqId">
		SELECT <include refid="ebuyProductTempBase.queryHead"/>
		<include refid="ebuyProductTempBase.busiQueryCondition"/>
		 and EPT.f_id = #{_parameter}
	</sql>
	<select id="select_ebuyProductTemp_bySeqId" parameterType="java.math.BigInteger" resultMap="ebuyProductTempBase.ebuyProductTempBaseMap">
		<include refid="ebuyProductTempBase.select_ebuyProductTemp_bySeqId"/>
	</select>
	
	<!-- 根据条件查询满足条件的(商品表，临时存储从外部抓取的数据)记录数  -->
	<sql id="select_ebuyProductTemp_count">
		SELECT COUNT(*)
		<include refid="ebuyProductTempBase.busiQueryCount"/>
		<include refid="ebuyProductTempBase.dimCheckSql"/>
	</sql>
	<select id="select_ebuyProductTemp_count" resultType="java.lang.Integer">
		<include refid="ebuyProductTempBase.select_ebuyProductTemp_count"/>
	</select>
	
	 <!-- 往(商品表，临时存储从外部抓取的数据)新增一条记录。 -->
	 <sql id="insert_ebuyProductTemp">
		INSERT INTO t_ebuy_product_temp 
		(f_id,t_supply_merchant_f_id,f_name,f_name_mini,f_price,f_price_discount,f_create_time,f_pic_base,f_pic_base_mini,f_price_unit,f_specification,f_desc,f_status,f_is_sync,f_up_shelf_time,f_down_shelf_time,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state,f_src_id,f_from_where,f_src_product_type_id,t_ebuy_product_type_f_id,f_left_count) VALUES 
		(#{id},#{tSupplyMerchantFId},#{name,jdbcType=VARCHAR},#{nameMini,jdbcType=VARCHAR},#{price},#{priceDiscount},str_to_date(#{createTime,jdbcType=DATE},'%Y-%m-%d %T'),#{picBase,jdbcType=VARCHAR},#{picBaseMini,jdbcType=VARCHAR},#{priceUnit,jdbcType=VARCHAR},#{specification,jdbcType=VARCHAR},#{desc,jdbcType=VARCHAR},#{status},#{isSync},str_to_date(#{upShelfTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{downShelfTime,jdbcType=DATE},'%Y-%m-%d %T'),sysdate(),str_to_date(#{sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{sys0AddUser},#{sys0UpdUser},#{sys0DelUser},0,#{srcId},#{fromWhere,jdbcType=VARCHAR},#{srcProductTypeId},#{tEbuyProductTypeFId},#{leftCount})
	 </sql>
    <insert id="insert_ebuyProductTemp" parameterType="EbuyProductTemp">
		<include refid="ebuyProductTempBase.insert_ebuyProductTemp"/>
    </insert>
    
	<!-- 批量新增(商品表，临时存储从外部抓取的数据)信息 -->
    <insert id="insert_ebuyProductTemp_Batch" parameterType="java.util.List">
    	INSERT INTO t_ebuy_product_temp 
		(f_id,t_supply_merchant_f_id,f_name,f_name_mini,f_price,f_price_discount,f_create_time,f_pic_base,f_pic_base_mini,f_price_unit,f_specification,f_desc,f_status,f_is_sync,f_up_shelf_time,f_down_shelf_time,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state,f_src_id,f_from_where,f_src_product_type_id,t_ebuy_product_type_f_id,f_left_count) VALUES  
		<foreach item="item" collection="list"  separator=","><!-- open="("  close=")" -->
		(#{item.id},#{item.tSupplyMerchantFId},#{item.name,jdbcType=VARCHAR},#{item.nameMini,jdbcType=VARCHAR},#{item.price},#{item.priceDiscount},str_to_date(#{item.createTime,jdbcType=DATE},'%Y-%m-%d %T'),#{item.picBase,jdbcType=VARCHAR},#{item.picBaseMini,jdbcType=VARCHAR},#{item.priceUnit,jdbcType=VARCHAR},#{item.specification,jdbcType=VARCHAR},#{item.desc,jdbcType=VARCHAR},#{item.status},#{item.isSync},str_to_date(#{item.upShelfTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.downShelfTime,jdbcType=DATE},'%Y-%m-%d %T'),sysdate(),str_to_date(#{item.sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{item.sys0AddUser},#{item.sys0UpdUser},#{item.sys0DelUser},0,#{item.srcId},#{item.fromWhere,jdbcType=VARCHAR},#{item.srcProductTypeId},#{item.tEbuyProductTypeFId},#{item.leftCount})
		</foreach>
    </insert>
    
    <!-- 更新(商品表，临时存储从外部抓取的数据)信息。 -->
    <sql id="update_ebuyProductTemp">
		UPDATE t_ebuy_product_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="tSupplyMerchantFId != null and !tSupplyMerchantFId.equals('') "> ,t_supply_merchant_f_id=#{tSupplyMerchantFId}</if> 		<if test="name != null and !name.equals('') "> ,f_name=#{name}</if> 		<if test="nameMini != null and !nameMini.equals('') "> ,f_name_mini=#{nameMini}</if> 		<if test="price != null and !price.equals('') "> ,f_price=#{price}</if> 		<if test="priceDiscount != null and !priceDiscount.equals('') "> ,f_price_discount=#{priceDiscount}</if> 		<if test="createTime != null and !createTime.equals('') "> ,f_create_time=str_to_date(#{createTime},'%Y-%m-%d %T')</if> 		<if test="picBase != null and !picBase.equals('') "> ,f_pic_base=#{picBase}</if> 		<if test="picBaseMini != null and !picBaseMini.equals('') "> ,f_pic_base_mini=#{picBaseMini}</if> 		<if test="priceUnit != null and !priceUnit.equals('') "> ,f_price_unit=#{priceUnit}</if> 		<if test="specification != null and !specification.equals('') "> ,f_specification=#{specification}</if> 		<if test="desc != null and !desc.equals('') "> ,f_desc=#{desc}</if> 		<if test="status != null and !status.equals('') "> ,f_status=#{status}</if> 		<if test="isSync != null and !isSync.equals('') "> ,f_is_sync=#{isSync}</if> 		<if test="upShelfTime != null and !upShelfTime.equals('') "> ,f_up_shelf_time=str_to_date(#{upShelfTime},'%Y-%m-%d %T')</if> 		<if test="downShelfTime != null and !downShelfTime.equals('') "> ,f_down_shelf_time=str_to_date(#{downShelfTime},'%Y-%m-%d %T')</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('') "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('') "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime == null or sys0UpdTime.equals('')  "> ,f_sys0_upd_time= sysdate() </if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('') "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('') "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('') "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('') "> ,f_sys0_del_user=#{sys0DelUser}</if> 		<if test="sys0DelState != null and !sys0DelState.equals('') "> ,f_sys0_del_state=#{sys0DelState}</if> 		<if test="srcId != null and !srcId.equals('') "> ,f_src_id=#{srcId}</if> 		<if test="fromWhere != null and !fromWhere.equals('') "> ,f_from_where=#{fromWhere}</if> 		<if test="srcProductTypeId != null and !srcProductTypeId.equals('') "> ,f_src_product_type_id=#{srcProductTypeId}</if> 		<if test="tEbuyProductTypeFId != null and !tEbuyProductTypeFId.equals('') "> ,t_ebuy_product_type_f_id=#{tEbuyProductTypeFId}</if> 		<if test="leftCount != null and !leftCount.equals('') "> ,f_left_count=#{leftCount}</if>		</trim>		WHERE f_id=#{id}
    </sql>
	<update id="update_ebuyProductTemp" parameterType="EbuyProductTemp">
		<include refid="ebuyProductTempBase.update_ebuyProductTemp"/>
    </update>
    
    <!-- 批量更新(商品表，临时存储从外部抓取的数据)信息。 -->
    <update id="update_ebuyProductTemp_Batch" parameterType="java.util.List">
    	<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_ebuy_product_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="item.tSupplyMerchantFId != null and !item.tSupplyMerchantFId.equals('')  "> ,t_supply_merchant_f_id=#{item.tSupplyMerchantFId}</if> 		<if test="item.name != null and !item.name.equals('')  "> ,f_name=#{item.name}</if> 		<if test="item.nameMini != null and !item.nameMini.equals('')  "> ,f_name_mini=#{item.nameMini}</if> 		<if test="item.price != null and !item.price.equals('')  "> ,f_price=#{item.price}</if> 		<if test="item.priceDiscount != null and !item.priceDiscount.equals('')  "> ,f_price_discount=#{item.priceDiscount}</if> 		<if test="item.createTime != null and !item.createTime.equals('')  "> ,f_create_time=str_to_date(#{item.createTime},'%Y-%m-%d %T')</if> 		<if test="item.picBase != null and !item.picBase.equals('')  "> ,f_pic_base=#{item.picBase}</if> 		<if test="item.picBaseMini != null and !item.picBaseMini.equals('')  "> ,f_pic_base_mini=#{item.picBaseMini}</if> 		<if test="item.priceUnit != null and !item.priceUnit.equals('')  "> ,f_price_unit=#{item.priceUnit}</if> 		<if test="item.specification != null and !item.specification.equals('')  "> ,f_specification=#{item.specification}</if> 		<if test="item.desc != null and !item.desc.equals('')  "> ,f_desc=#{item.desc}</if> 		<if test="item.status != null and !item.status.equals('')  "> ,f_status=#{item.status}</if> 		<if test="item.isSync != null and !item.isSync.equals('')  "> ,f_is_sync=#{item.isSync}</if> 		<if test="item.upShelfTime != null and !item.upShelfTime.equals('')  "> ,f_up_shelf_time=str_to_date(#{item.upShelfTime},'%Y-%m-%d %T')</if> 		<if test="item.downShelfTime != null and !item.downShelfTime.equals('')  "> ,f_down_shelf_time=str_to_date(#{item.downShelfTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime == null or item.sys0UpdTime == '' "> ,f_sys0_upd_time= sysdate() </if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		<if test="item.sys0DelState != null and !item.sys0DelState.equals('')  "> ,f_sys0_del_state=#{item.sys0DelState}</if> 		<if test="item.srcId != null and !item.srcId.equals('')  "> ,f_src_id=#{item.srcId}</if> 		<if test="item.fromWhere != null and !item.fromWhere.equals('')  "> ,f_from_where=#{item.fromWhere}</if> 		<if test="item.srcProductTypeId != null and !item.srcProductTypeId.equals('')  "> ,f_src_product_type_id=#{item.srcProductTypeId}</if> 		<if test="item.tEbuyProductTypeFId != null and !item.tEbuyProductTypeFId.equals('')  "> ,t_ebuy_product_type_f_id=#{item.tEbuyProductTypeFId}</if> 		<if test="item.leftCount != null and !item.leftCount.equals('')  "> ,f_left_count=#{item.leftCount}</if>		</trim>		WHERE f_id=#{item.id}
    	</foreach>
    </update>

   <!-- 根据序列号删除(商品表，临时存储从外部抓取的数据)信息_逻辑删除。 -->
    <sql id="delete_ebuyProductTemp_Logic">
		UPDATE t_ebuy_product_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="tSupplyMerchantFId != null and !tSupplyMerchantFId.equals('')  "> ,t_supply_merchant_f_id=#{tSupplyMerchantFId}</if> 		<if test="name != null and !name.equals('')  "> ,f_name=#{name}</if> 		<if test="nameMini != null and !nameMini.equals('')  "> ,f_name_mini=#{nameMini}</if> 		<if test="price != null and !price.equals('')  "> ,f_price=#{price}</if> 		<if test="priceDiscount != null and !priceDiscount.equals('')  "> ,f_price_discount=#{priceDiscount}</if> 		<if test="createTime != null and !createTime.equals('')  "> ,f_create_time=str_to_date(#{createTime},'%Y-%m-%d %T')</if> 		<if test="picBase != null and !picBase.equals('')  "> ,f_pic_base=#{picBase}</if> 		<if test="picBaseMini != null and !picBaseMini.equals('')  "> ,f_pic_base_mini=#{picBaseMini}</if> 		<if test="priceUnit != null and !priceUnit.equals('')  "> ,f_price_unit=#{priceUnit}</if> 		<if test="specification != null and !specification.equals('')  "> ,f_specification=#{specification}</if> 		<if test="desc != null and !desc.equals('')  "> ,f_desc=#{desc}</if> 		<if test="status != null and !status.equals('')  "> ,f_status=#{status}</if> 		<if test="isSync != null and !isSync.equals('')  "> ,f_is_sync=#{isSync}</if> 		<if test="upShelfTime != null and !upShelfTime.equals('')  "> ,f_up_shelf_time=str_to_date(#{upShelfTime},'%Y-%m-%d %T')</if> 		<if test="downShelfTime != null and !downShelfTime.equals('')  "> ,f_down_shelf_time=str_to_date(#{downShelfTime},'%Y-%m-%d %T')</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime == null or sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('')  "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('')  "> ,f_sys0_del_user=#{sys0DelUser}</if> 		<if test="srcId != null and !srcId.equals('')  "> ,f_src_id=#{srcId}</if> 		<if test="fromWhere != null and !fromWhere.equals('')  "> ,f_from_where=#{fromWhere}</if> 		<if test="srcProductTypeId != null and !srcProductTypeId.equals('')  "> ,f_src_product_type_id=#{srcProductTypeId}</if> 		<if test="tEbuyProductTypeFId != null and !tEbuyProductTypeFId.equals('')  "> ,t_ebuy_product_type_f_id=#{tEbuyProductTypeFId}</if> 		<if test="leftCount != null and !leftCount.equals('')  "> ,f_left_count=#{leftCount}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{id}
    </sql>
    <update id="delete_ebuyProductTemp_Logic" parameterType="EbuyProductTemp">
		<include refid="ebuyProductTempBase.delete_ebuyProductTemp_Logic"/>
    </update>
    
    <!-- 批量删除(商品表，临时存储从外部抓取的数据)信息_逻辑删除 -->
    <update id="delete_ebuyProductTemp_Logic_Batch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_ebuy_product_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="item.tSupplyMerchantFId != null and !item.tSupplyMerchantFId.equals('')  "> ,t_supply_merchant_f_id=#{item.tSupplyMerchantFId}</if> 		<if test="item.name != null and !item.name.equals('')  "> ,f_name=#{item.name}</if> 		<if test="item.nameMini != null and !item.nameMini.equals('')  "> ,f_name_mini=#{item.nameMini}</if> 		<if test="item.price != null and !item.price.equals('')  "> ,f_price=#{item.price}</if> 		<if test="item.priceDiscount != null and !item.priceDiscount.equals('')  "> ,f_price_discount=#{item.priceDiscount}</if> 		<if test="item.createTime != null and !item.createTime.equals('')  "> ,f_create_time=str_to_date(#{item.createTime},'%Y-%m-%d %T')</if> 		<if test="item.picBase != null and !item.picBase.equals('')  "> ,f_pic_base=#{item.picBase}</if> 		<if test="item.picBaseMini != null and !item.picBaseMini.equals('')  "> ,f_pic_base_mini=#{item.picBaseMini}</if> 		<if test="item.priceUnit != null and !item.priceUnit.equals('')  "> ,f_price_unit=#{item.priceUnit}</if> 		<if test="item.specification != null and !item.specification.equals('')  "> ,f_specification=#{item.specification}</if> 		<if test="item.desc != null and !item.desc.equals('')  "> ,f_desc=#{item.desc}</if> 		<if test="item.status != null and !item.status.equals('')  "> ,f_status=#{item.status}</if> 		<if test="item.isSync != null and !item.isSync.equals('')  "> ,f_is_sync=#{item.isSync}</if> 		<if test="item.upShelfTime != null and !item.upShelfTime.equals('')  "> ,f_up_shelf_time=str_to_date(#{item.upShelfTime},'%Y-%m-%d %T')</if> 		<if test="item.downShelfTime != null and !item.downShelfTime.equals('')  "> ,f_down_shelf_time=str_to_date(#{item.downShelfTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime == null or item.sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		<if test="item.srcId != null and !item.srcId.equals('')  "> ,f_src_id=#{item.srcId}</if> 		<if test="item.fromWhere != null and !item.fromWhere.equals('')  "> ,f_from_where=#{item.fromWhere}</if> 		<if test="item.srcProductTypeId != null and !item.srcProductTypeId.equals('')  "> ,f_src_product_type_id=#{item.srcProductTypeId}</if> 		<if test="item.tEbuyProductTypeFId != null and !item.tEbuyProductTypeFId.equals('')  "> ,t_ebuy_product_type_f_id=#{item.tEbuyProductTypeFId}</if> 		<if test="item.leftCount != null and !item.leftCount.equals('')  "> ,f_left_count=#{item.leftCount}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{item.id}
    	</foreach>
    </update>
    
    <!-- 根据序列号删除(商品表，临时存储从外部抓取的数据)信息。 -->
    <sql id="delete_ebuyProductTemp">
		DELETE FROM t_ebuy_product_temp WHERE f_id=#{_parameter}
    </sql>
    <delete id="delete_ebuyProductTemp" parameterType="java.lang.String">
		<include refid="ebuyProductTempBase.delete_ebuyProductTemp"/>
    </delete>
    
    <!-- 根据序列号批量删除(商品表，临时存储从外部抓取的数据)信息。 -->
    <delete id="delete_ebuyProductTemp_Batch" parameterType="java.util.List">
		DELETE FROM t_ebuy_product_temp WHERE 1=1 AND f_id IN 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
</mapper>
