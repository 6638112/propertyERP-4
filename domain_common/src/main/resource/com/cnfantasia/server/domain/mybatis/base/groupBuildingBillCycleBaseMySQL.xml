<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN:账期管理 t_group_building_bill_cycle -->
<mapper namespace="groupBuildingBillCycleBase">
	<resultMap type="GroupBuildingBillCycle" id="groupBuildingBillCycleBaseMap">
        <id column="f_id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="t_group_building_id" javaType="java.math.BigInteger" property="tGroupBuildingId"/>  <!-- 小区id -->        <result column="t_pay_bill_type_id" javaType="java.math.BigInteger" property="tPayBillTypeId"/>  <!-- 费用类型id -->        <result column="t_pay_bill_time_cfg_id" javaType="java.math.BigInteger" property="tPayBillTimeCfgId"/>  <!-- 周期缴费时间配置 -->        <result column="f_bill_month" javaType="java.lang.String" property="billMonth"/>  <!-- 账单月份 -->        <result column="f_bill_pay_start" javaType="java.lang.String" property="billPayStart"/>  <!-- 缴费开始时间 -->        <result column="f_bill_pay_end" javaType="java.lang.String" property="billPayEnd"/>  <!-- 缴费结束时间 -->        <result column="f_bill_month_start" javaType="java.lang.String" property="billMonthStart"/>  <!-- 账单开始时间（周期） -->        <result column="f_bill_month_end" javaType="java.lang.String" property="billMonthEnd"/>  <!-- 账单结束时间（周期） -->        <result column="f_paytime_type" javaType="java.lang.Integer" property="paytimeType"/>  <!-- 缴费时间方式 -->        <result column="f_operate_status" javaType="java.lang.Integer" property="operateStatus"/>  <!-- 账期操作状态（0可以操作，1不可以操作） -->        <result column="f_fee_type" javaType="java.lang.String" property="feeType"/>  <!-- 包含费用项（1,2,3）逗号分隔存储，1 -->        <result column="f_gbbc_cfg_id" javaType="java.math.BigInteger" property="gbbcCfgId"/>  <!-- 自动生成的账期 -->        <result column="f_is_collect_arrears" javaType="java.lang.Integer" property="isCollectArrears"/>  <!-- 是否收缴欠费（2收缴 1或者空不收缴） -->        <result column="f_is_generate_bill" javaType="java.lang.Integer" property="isGenerateBill"/>  <!-- 是否已经生成（抄表、固定、临时）账单 -->        <result column="f_period_months" javaType="java.lang.String" property="periodMonths"/>  <!-- 选择周期月份数（使用逗号分隔 -->        <result column="f_charging_mode" javaType="java.lang.Integer" property="chargingMode"/>  <!-- 收费模式（1定期，2选择周期） -->        <result column="f_sys0_add_time" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="f_sys0_upd_time" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="f_sys0_del_time" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="f_sys0_add_user" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="f_sys0_upd_user" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="f_sys0_del_user" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="f_sys0_del_state" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->        <result column="f_bank_collection_status" javaType="java.lang.Integer" property="bankCollectionStatus"/>  <!-- 是否银行托收（1托收，2不托收） -->
	</resultMap>
	<resultMap type="GroupBuildingBillCycle" id="groupBuildingBillCycleExtendMap" extends="groupBuildingBillCycleBaseMap">
	</resultMap>
	<resultMap type="GroupBuildingBillCycle" id="groupBuildingBillCycleBaseMap_AppendTable">
        <id column="GBBCid" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="GBBCtGroupBuildingId" javaType="java.math.BigInteger" property="tGroupBuildingId"/>  <!-- 小区id -->        <result column="GBBCtPayBillTypeId" javaType="java.math.BigInteger" property="tPayBillTypeId"/>  <!-- 费用类型id -->        <result column="GBBCtPayBillTimeCfgId" javaType="java.math.BigInteger" property="tPayBillTimeCfgId"/>  <!-- 周期缴费时间配置 -->        <result column="GBBCbillMonth" javaType="java.lang.String" property="billMonth"/>  <!-- 账单月份 -->        <result column="GBBCbillPayStart" javaType="java.lang.String" property="billPayStart"/>  <!-- 缴费开始时间 -->        <result column="GBBCbillPayEnd" javaType="java.lang.String" property="billPayEnd"/>  <!-- 缴费结束时间 -->        <result column="GBBCbillMonthStart" javaType="java.lang.String" property="billMonthStart"/>  <!-- 账单开始时间（周期） -->        <result column="GBBCbillMonthEnd" javaType="java.lang.String" property="billMonthEnd"/>  <!-- 账单结束时间（周期） -->        <result column="GBBCpaytimeType" javaType="java.lang.Integer" property="paytimeType"/>  <!-- 缴费时间方式 -->        <result column="GBBCoperateStatus" javaType="java.lang.Integer" property="operateStatus"/>  <!-- 账期操作状态（0可以操作，1不可以操作） -->        <result column="GBBCfeeType" javaType="java.lang.String" property="feeType"/>  <!-- 包含费用项（1,2,3）逗号分隔存储，1 -->        <result column="GBBCgbbcCfgId" javaType="java.math.BigInteger" property="gbbcCfgId"/>  <!-- 自动生成的账期 -->        <result column="GBBCisCollectArrears" javaType="java.lang.Integer" property="isCollectArrears"/>  <!-- 是否收缴欠费（2收缴 1或者空不收缴） -->        <result column="GBBCisGenerateBill" javaType="java.lang.Integer" property="isGenerateBill"/>  <!-- 是否已经生成（抄表、固定、临时）账单 -->        <result column="GBBCperiodMonths" javaType="java.lang.String" property="periodMonths"/>  <!-- 选择周期月份数（使用逗号分隔 -->        <result column="GBBCchargingMode" javaType="java.lang.Integer" property="chargingMode"/>  <!-- 收费模式（1定期，2选择周期） -->        <result column="GBBCsys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="GBBCsys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="GBBCsys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="GBBCsys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="GBBCsys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="GBBCsys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="GBBCsys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->        <result column="GBBCbankCollectionStatus" javaType="java.lang.Integer" property="bankCollectionStatus"/>  <!-- 是否银行托收（1托收，2不托收） -->
	</resultMap>
	<resultMap type="GroupBuildingBillCycle" id="groupBuildingBillCycleBaseMap_AppendTable1">
        <id column="GBBC1id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="GBBC1tGroupBuildingId" javaType="java.math.BigInteger" property="tGroupBuildingId"/>  <!-- 小区id -->        <result column="GBBC1tPayBillTypeId" javaType="java.math.BigInteger" property="tPayBillTypeId"/>  <!-- 费用类型id -->        <result column="GBBC1tPayBillTimeCfgId" javaType="java.math.BigInteger" property="tPayBillTimeCfgId"/>  <!-- 周期缴费时间配置 -->        <result column="GBBC1billMonth" javaType="java.lang.String" property="billMonth"/>  <!-- 账单月份 -->        <result column="GBBC1billPayStart" javaType="java.lang.String" property="billPayStart"/>  <!-- 缴费开始时间 -->        <result column="GBBC1billPayEnd" javaType="java.lang.String" property="billPayEnd"/>  <!-- 缴费结束时间 -->        <result column="GBBC1billMonthStart" javaType="java.lang.String" property="billMonthStart"/>  <!-- 账单开始时间（周期） -->        <result column="GBBC1billMonthEnd" javaType="java.lang.String" property="billMonthEnd"/>  <!-- 账单结束时间（周期） -->        <result column="GBBC1paytimeType" javaType="java.lang.Integer" property="paytimeType"/>  <!-- 缴费时间方式 -->        <result column="GBBC1operateStatus" javaType="java.lang.Integer" property="operateStatus"/>  <!-- 账期操作状态（0可以操作，1不可以操作） -->        <result column="GBBC1feeType" javaType="java.lang.String" property="feeType"/>  <!-- 包含费用项（1,2,3）逗号分隔存储，1 -->        <result column="GBBC1gbbcCfgId" javaType="java.math.BigInteger" property="gbbcCfgId"/>  <!-- 自动生成的账期 -->        <result column="GBBC1isCollectArrears" javaType="java.lang.Integer" property="isCollectArrears"/>  <!-- 是否收缴欠费（2收缴 1或者空不收缴） -->        <result column="GBBC1isGenerateBill" javaType="java.lang.Integer" property="isGenerateBill"/>  <!-- 是否已经生成（抄表、固定、临时）账单 -->        <result column="GBBC1periodMonths" javaType="java.lang.String" property="periodMonths"/>  <!-- 选择周期月份数（使用逗号分隔 -->        <result column="GBBC1chargingMode" javaType="java.lang.Integer" property="chargingMode"/>  <!-- 收费模式（1定期，2选择周期） -->        <result column="GBBC1sys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="GBBC1sys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="GBBC1sys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="GBBC1sys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="GBBC1sys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="GBBC1sys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="GBBC1sys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->        <result column="GBBC1bankCollectionStatus" javaType="java.lang.Integer" property="bankCollectionStatus"/>  <!-- 是否银行托收（1托收，2不托收） -->
	</resultMap>
	<!-- 公共sql提取  -->
	<sql id="queryHead">
		GBBC.f_id,GBBC.t_group_building_id,GBBC.t_pay_bill_type_id,GBBC.t_pay_bill_time_cfg_id,date_format(GBBC.f_bill_month,'%Y-%m-%d %T') as f_bill_month,date_format(GBBC.f_bill_pay_start,'%Y-%m-%d %T') as f_bill_pay_start,date_format(GBBC.f_bill_pay_end,'%Y-%m-%d %T') as f_bill_pay_end,date_format(GBBC.f_bill_month_start,'%Y-%m-%d %T') as f_bill_month_start,date_format(GBBC.f_bill_month_end,'%Y-%m-%d %T') as f_bill_month_end,GBBC.f_paytime_type,GBBC.f_operate_status,GBBC.f_fee_type,GBBC.f_gbbc_cfg_id,GBBC.f_is_collect_arrears,GBBC.f_is_generate_bill,GBBC.f_period_months,GBBC.f_charging_mode,GBBC.f_bank_collection_status
	</sql>
	<sql id="queryHead_AppendTable">
		GBBC.f_id as GBBCid,GBBC.t_group_building_id as GBBCtGroupBuildingId,GBBC.t_pay_bill_type_id as GBBCtPayBillTypeId,GBBC.t_pay_bill_time_cfg_id as GBBCtPayBillTimeCfgId,date_format(GBBC.f_bill_month,'%Y-%m-%d %T') as GBBCbillMonth,date_format(GBBC.f_bill_pay_start,'%Y-%m-%d %T') as GBBCbillPayStart,date_format(GBBC.f_bill_pay_end,'%Y-%m-%d %T') as GBBCbillPayEnd,date_format(GBBC.f_bill_month_start,'%Y-%m-%d %T') as GBBCbillMonthStart,date_format(GBBC.f_bill_month_end,'%Y-%m-%d %T') as GBBCbillMonthEnd,GBBC.f_paytime_type as GBBCpaytimeType,GBBC.f_operate_status as GBBCoperateStatus,GBBC.f_fee_type as GBBCfeeType,GBBC.f_gbbc_cfg_id as GBBCgbbcCfgId,GBBC.f_is_collect_arrears as GBBCisCollectArrears,GBBC.f_is_generate_bill as GBBCisGenerateBill,GBBC.f_period_months as GBBCperiodMonths,GBBC.f_charging_mode as GBBCchargingMode,GBBC.f_bank_collection_status as GBBCbankCollectionStatus
	</sql>
	<sql id="queryHead_AppendTable1">
		GBBC1.f_id as GBBC1id,GBBC1.t_group_building_id as GBBC1tGroupBuildingId,GBBC1.t_pay_bill_type_id as GBBC1tPayBillTypeId,GBBC1.t_pay_bill_time_cfg_id as GBBC1tPayBillTimeCfgId,date_format(GBBC1.f_bill_month,'%Y-%m-%d %T') as GBBC1billMonth,date_format(GBBC1.f_bill_pay_start,'%Y-%m-%d %T') as GBBC1billPayStart,date_format(GBBC1.f_bill_pay_end,'%Y-%m-%d %T') as GBBC1billPayEnd,date_format(GBBC1.f_bill_month_start,'%Y-%m-%d %T') as GBBC1billMonthStart,date_format(GBBC1.f_bill_month_end,'%Y-%m-%d %T') as GBBC1billMonthEnd,GBBC1.f_paytime_type as GBBC1paytimeType,GBBC1.f_operate_status as GBBC1operateStatus,GBBC1.f_fee_type as GBBC1feeType,GBBC1.f_gbbc_cfg_id as GBBC1gbbcCfgId,GBBC1.f_is_collect_arrears as GBBC1isCollectArrears,GBBC1.f_is_generate_bill as GBBC1isGenerateBill,GBBC1.f_period_months as GBBC1periodMonths,GBBC1.f_charging_mode as GBBC1chargingMode,GBBC1.f_bank_collection_status as GBBC1bankCollectionStatus
	</sql>
	<sql id="querySql">
        <if test="id != null">  and (GBBC.f_id = #{id} ) </if>        <if test="tGroupBuildingId != null">  and (GBBC.t_group_building_id = #{tGroupBuildingId} ) </if>        <if test="tPayBillTypeId != null">  and (GBBC.t_pay_bill_type_id = #{tPayBillTypeId} ) </if>        <if test="tPayBillTimeCfgId != null">  and (GBBC.t_pay_bill_time_cfg_id = #{tPayBillTimeCfgId} ) </if>        <if test="billMonth != null and !billMonth.equals('')  ">  and (GBBC.f_bill_month = str_to_date(#{billMonth},'%Y-%m-%d %T') ) </if>        <if test="billMonth_START != null and !billMonth_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_month >= str_to_date(#{billMonth_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonth_END != null and !billMonth_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_month <= str_to_date(#{billMonth_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayStart != null and !billPayStart.equals('')  ">  and (GBBC.f_bill_pay_start = str_to_date(#{billPayStart},'%Y-%m-%d %T') ) </if>        <if test="billPayStart_START != null and !billPayStart_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_pay_start >= str_to_date(#{billPayStart_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayStart_END != null and !billPayStart_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_pay_start <= str_to_date(#{billPayStart_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayEnd != null and !billPayEnd.equals('')  ">  and (GBBC.f_bill_pay_end = str_to_date(#{billPayEnd},'%Y-%m-%d %T') ) </if>        <if test="billPayEnd_START != null and !billPayEnd_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_pay_end >= str_to_date(#{billPayEnd_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayEnd_END != null and !billPayEnd_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_pay_end <= str_to_date(#{billPayEnd_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthStart != null and !billMonthStart.equals('')  ">  and (GBBC.f_bill_month_start = str_to_date(#{billMonthStart},'%Y-%m-%d %T') ) </if>        <if test="billMonthStart_START != null and !billMonthStart_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_month_start >= str_to_date(#{billMonthStart_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthStart_END != null and !billMonthStart_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_month_start <= str_to_date(#{billMonthStart_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthEnd != null and !billMonthEnd.equals('')  ">  and (GBBC.f_bill_month_end = str_to_date(#{billMonthEnd},'%Y-%m-%d %T') ) </if>        <if test="billMonthEnd_START != null and !billMonthEnd_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_month_end >= str_to_date(#{billMonthEnd_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthEnd_END != null and !billMonthEnd_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_month_end <= str_to_date(#{billMonthEnd_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="paytimeType != null">  and (GBBC.f_paytime_type = #{paytimeType} ) </if>        <if test="operateStatus != null">  and (GBBC.f_operate_status = #{operateStatus} ) </if>        <if test="feeType != null">  and (GBBC.f_fee_type = #{feeType} ) </if>        <if test="gbbcCfgId != null">  and (GBBC.f_gbbc_cfg_id = #{gbbcCfgId} ) </if>        <if test="isCollectArrears != null">  and (GBBC.f_is_collect_arrears = #{isCollectArrears} ) </if>        <if test="isGenerateBill != null">  and (GBBC.f_is_generate_bill = #{isGenerateBill} ) </if>        <if test="periodMonths != null">  and (GBBC.f_period_months = #{periodMonths} ) </if>        <if test="chargingMode != null">  and (GBBC.f_charging_mode = #{chargingMode} ) </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (GBBC.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (GBBC.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (GBBC.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (GBBC.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (GBBC.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (GBBC.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (GBBC.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (GBBC.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (GBBC.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null">  and (GBBC.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null">  and (GBBC.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null">  and (GBBC.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null">  and (GBBC.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null">  and (GBBC.f_sys0_del_state = 0 ) </if>        <if test="bankCollectionStatus != null">  and (GBBC.f_bank_collection_status = #{bankCollectionStatus} ) </if>
	</sql>
	<sql id="querySqlDim">
        <if test="id != null and !id.equals('')  ">  and (GBBC.f_id = #{id} ) </if>        <if test="tGroupBuildingId != null and !tGroupBuildingId.equals('')  ">  and (GBBC.t_group_building_id = #{tGroupBuildingId} ) </if>        <if test="tPayBillTypeId != null and !tPayBillTypeId.equals('')  ">  and (GBBC.t_pay_bill_type_id = #{tPayBillTypeId} ) </if>        <if test="tPayBillTimeCfgId != null and !tPayBillTimeCfgId.equals('')  ">  and (GBBC.t_pay_bill_time_cfg_id = #{tPayBillTimeCfgId} ) </if>        <if test="billMonth != null and !billMonth.equals('')  ">  and (GBBC.f_bill_month = str_to_date(#{billMonth},'%Y-%m-%d %T') ) </if>        <if test="billMonth_START != null and !billMonth_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_month >= str_to_date(#{billMonth_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonth_END != null and !billMonth_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_month <= str_to_date(#{billMonth_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayStart != null and !billPayStart.equals('')  ">  and (GBBC.f_bill_pay_start = str_to_date(#{billPayStart},'%Y-%m-%d %T') ) </if>        <if test="billPayStart_START != null and !billPayStart_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_pay_start >= str_to_date(#{billPayStart_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayStart_END != null and !billPayStart_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_pay_start <= str_to_date(#{billPayStart_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayEnd != null and !billPayEnd.equals('')  ">  and (GBBC.f_bill_pay_end = str_to_date(#{billPayEnd},'%Y-%m-%d %T') ) </if>        <if test="billPayEnd_START != null and !billPayEnd_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_pay_end >= str_to_date(#{billPayEnd_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billPayEnd_END != null and !billPayEnd_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_pay_end <= str_to_date(#{billPayEnd_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthStart != null and !billMonthStart.equals('')  ">  and (GBBC.f_bill_month_start = str_to_date(#{billMonthStart},'%Y-%m-%d %T') ) </if>        <if test="billMonthStart_START != null and !billMonthStart_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_month_start >= str_to_date(#{billMonthStart_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthStart_END != null and !billMonthStart_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_month_start <= str_to_date(#{billMonthStart_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthEnd != null and !billMonthEnd.equals('')  ">  and (GBBC.f_bill_month_end = str_to_date(#{billMonthEnd},'%Y-%m-%d %T') ) </if>        <if test="billMonthEnd_START != null and !billMonthEnd_START.equals('')  ">              <![CDATA[ and (GBBC.f_bill_month_end >= str_to_date(#{billMonthEnd_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthEnd_END != null and !billMonthEnd_END.equals('')  ">            <![CDATA[ and (GBBC.f_bill_month_end <= str_to_date(#{billMonthEnd_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="paytimeType != null and !paytimeType.equals('')  ">  and (GBBC.f_paytime_type = #{paytimeType} ) </if>        <if test="operateStatus != null and !operateStatus.equals('')  ">  and (GBBC.f_operate_status = #{operateStatus} ) </if>        <if test="feeType != null and !feeType.equals('')  ">  and (GBBC.f_fee_type like CONCAT('%',#{feeType},'%') ) </if>        <if test="gbbcCfgId != null and !gbbcCfgId.equals('')  ">  and (GBBC.f_gbbc_cfg_id = #{gbbcCfgId} ) </if>        <if test="isCollectArrears != null and !isCollectArrears.equals('')  ">  and (GBBC.f_is_collect_arrears = #{isCollectArrears} ) </if>        <if test="isGenerateBill != null and !isGenerateBill.equals('')  ">  and (GBBC.f_is_generate_bill = #{isGenerateBill} ) </if>        <if test="periodMonths != null and !periodMonths.equals('')  ">  and (GBBC.f_period_months like CONCAT('%',#{periodMonths},'%') ) </if>        <if test="chargingMode != null and !chargingMode.equals('')  ">  and (GBBC.f_charging_mode = #{chargingMode} ) </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (GBBC.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (GBBC.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (GBBC.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (GBBC.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (GBBC.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (GBBC.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (GBBC.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (GBBC.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (GBBC.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null and !sys0AddUser.equals('')  ">  and (GBBC.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null and !sys0UpdUser.equals('')  ">  and (GBBC.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null and !sys0DelUser.equals('')  ">  and (GBBC.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null and !sys0DelState.equals('')  ">  and (GBBC.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null or sys0DelState == '' ">  and (GBBC.f_sys0_del_state = 0 ) </if>        <if test="bankCollectionStatus != null and !bankCollectionStatus.equals('')  ">  and (GBBC.f_bank_collection_status = #{bankCollectionStatus} ) </if>
	</sql>
	<sql id="dimCheckSql">
		<if test="_QUERY_TYPE_IF_DIM == true"><include refid="groupBuildingBillCycleBase.querySqlDim"/></if>
		<if test="_QUERY_TYPE_IF_DIM == null or  _QUERY_TYPE_IF_DIM == '' or  _QUERY_TYPE_IF_DIM == false or _QUERY_TYPE_IF_DIM != true"><include refid="groupBuildingBillCycleBase.querySql"/></if><!-- 默认精确查询 -->
		<!-- <if test="_QUERY_TYPE_IF_DIM != true"><include refid="groupBuildingBillCycleBase.querySql"/></if> --><!-- 默认精确查询 -->
	</sql>
	<!-- 各种查询附加的查询条件 -->
	<sql id="busiQueryCondition">
	    <include refid="groupBuildingBillCycleBase.busiQueryCount"/>
	</sql>
	<!-- 查询记录数附加的查询条件 -->
	<sql id="busiQueryCount">
	     FROM t_group_building_bill_cycle GBBC    	 WHERE 1=1
	</sql>
	
	<!-- 根据条件查询(账期管理)信息。 -->
	<sql id="select_groupBuildingBillCycle">
		SELECT <include refid="groupBuildingBillCycleBase.queryHead"/>
		<include refid="groupBuildingBillCycleBase.busiQueryCondition"/>
		<include refid="groupBuildingBillCycleBase.dimCheckSql"/>
		ORDER BY GBBC.f_id DESC
	</sql>
	<select id="select_groupBuildingBillCycle" parameterType="java.util.Map" resultMap="groupBuildingBillCycleBase.groupBuildingBillCycleExtendMap">
		<include refid="groupBuildingBillCycleBase.select_groupBuildingBillCycle"/>
	</select>
	
	<!-- 根据条件分页查询(账期管理)信息  -->
	<sql id="select_groupBuildingBillCycle_withPage">
		SELECT <include refid="groupBuildingBillCycleBase.queryHead"/>
		<include refid="groupBuildingBillCycleBase.busiQueryCondition"/>
		<include refid="groupBuildingBillCycleBase.dimCheckSql"/>
		ORDER BY f_id DESC
		<![CDATA[ LIMIT #{_begin},#{_length} ]]>
	</sql>
	<select id="select_groupBuildingBillCycle_withPage" resultMap="groupBuildingBillCycleBase.groupBuildingBillCycleExtendMap" parameterType="java.util.Map">
		<include refid="groupBuildingBillCycleBase.select_groupBuildingBillCycle_withPage"/>
	</select>

	<!-- 根据序列号查询某个(账期管理)信息。 -->
	<sql id="select_groupBuildingBillCycle_bySeqId">
		SELECT <include refid="groupBuildingBillCycleBase.queryHead"/>
		<include refid="groupBuildingBillCycleBase.busiQueryCondition"/>
		 and GBBC.f_id = #{_parameter}
	</sql>
	<select id="select_groupBuildingBillCycle_bySeqId" parameterType="java.math.BigInteger" resultMap="groupBuildingBillCycleBase.groupBuildingBillCycleBaseMap">
		<include refid="groupBuildingBillCycleBase.select_groupBuildingBillCycle_bySeqId"/>
	</select>
	
	<!-- 根据条件查询满足条件的(账期管理)记录数  -->
	<sql id="select_groupBuildingBillCycle_count">
		SELECT COUNT(*)
		<include refid="groupBuildingBillCycleBase.busiQueryCount"/>
		<include refid="groupBuildingBillCycleBase.dimCheckSql"/>
	</sql>
	<select id="select_groupBuildingBillCycle_count" resultType="java.lang.Integer">
		<include refid="groupBuildingBillCycleBase.select_groupBuildingBillCycle_count"/>
	</select>
	
	 <!-- 往(账期管理)新增一条记录。 -->
	 <sql id="insert_groupBuildingBillCycle">
		INSERT INTO t_group_building_bill_cycle 
		(f_id,t_group_building_id,t_pay_bill_type_id,t_pay_bill_time_cfg_id,f_bill_month,f_bill_pay_start,f_bill_pay_end,f_bill_month_start,f_bill_month_end,f_paytime_type,f_operate_status,f_fee_type,f_gbbc_cfg_id,f_is_collect_arrears,f_is_generate_bill,f_period_months,f_charging_mode,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state,f_bank_collection_status) VALUES 
		(#{id},#{tGroupBuildingId},#{tPayBillTypeId},#{tPayBillTimeCfgId},str_to_date(#{billMonth,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{billPayStart,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{billPayEnd,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{billMonthStart,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{billMonthEnd,jdbcType=DATE},'%Y-%m-%d %T'),#{paytimeType},#{operateStatus},#{feeType,jdbcType=VARCHAR},#{gbbcCfgId},#{isCollectArrears},#{isGenerateBill},#{periodMonths,jdbcType=VARCHAR},#{chargingMode},sysdate(),str_to_date(#{sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{sys0AddUser},#{sys0UpdUser},#{sys0DelUser},0,#{bankCollectionStatus})
	 </sql>
    <insert id="insert_groupBuildingBillCycle" parameterType="GroupBuildingBillCycle">
		<include refid="groupBuildingBillCycleBase.insert_groupBuildingBillCycle"/>
    </insert>
    
	<!-- 批量新增(账期管理)信息 -->
    <insert id="insert_groupBuildingBillCycle_Batch" parameterType="java.util.List">
    	INSERT INTO t_group_building_bill_cycle 
		(f_id,t_group_building_id,t_pay_bill_type_id,t_pay_bill_time_cfg_id,f_bill_month,f_bill_pay_start,f_bill_pay_end,f_bill_month_start,f_bill_month_end,f_paytime_type,f_operate_status,f_fee_type,f_gbbc_cfg_id,f_is_collect_arrears,f_is_generate_bill,f_period_months,f_charging_mode,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state,f_bank_collection_status) VALUES  
		<foreach item="item" collection="list"  separator=","><!-- open="("  close=")" -->
		(#{item.id},#{item.tGroupBuildingId},#{item.tPayBillTypeId},#{item.tPayBillTimeCfgId},str_to_date(#{item.billMonth,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.billPayStart,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.billPayEnd,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.billMonthStart,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.billMonthEnd,jdbcType=DATE},'%Y-%m-%d %T'),#{item.paytimeType},#{item.operateStatus},#{item.feeType,jdbcType=VARCHAR},#{item.gbbcCfgId},#{item.isCollectArrears},#{item.isGenerateBill},#{item.periodMonths,jdbcType=VARCHAR},#{item.chargingMode},sysdate(),str_to_date(#{item.sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{item.sys0AddUser},#{item.sys0UpdUser},#{item.sys0DelUser},0,#{item.bankCollectionStatus})
		</foreach>
    </insert>
    
    <!-- 更新(账期管理)信息。 -->
    <sql id="update_groupBuildingBillCycle">
		UPDATE t_group_building_bill_cycle		<trim prefix="SET" prefixOverrides=","> 		<if test="tGroupBuildingId != null and !tGroupBuildingId.equals('') "> ,t_group_building_id=#{tGroupBuildingId}</if> 		<if test="tPayBillTypeId != null and !tPayBillTypeId.equals('') "> ,t_pay_bill_type_id=#{tPayBillTypeId}</if> 		<if test="tPayBillTimeCfgId != null and !tPayBillTimeCfgId.equals('') "> ,t_pay_bill_time_cfg_id=#{tPayBillTimeCfgId}</if> 		<if test="billMonth != null and !billMonth.equals('') "> ,f_bill_month=str_to_date(#{billMonth},'%Y-%m-%d %T')</if> 		<if test="billPayStart != null and !billPayStart.equals('') "> ,f_bill_pay_start=str_to_date(#{billPayStart},'%Y-%m-%d %T')</if> 		<if test="billPayEnd != null and !billPayEnd.equals('') "> ,f_bill_pay_end=str_to_date(#{billPayEnd},'%Y-%m-%d %T')</if> 		<if test="billMonthStart != null and !billMonthStart.equals('') "> ,f_bill_month_start=str_to_date(#{billMonthStart},'%Y-%m-%d %T')</if> 		<if test="billMonthEnd != null and !billMonthEnd.equals('') "> ,f_bill_month_end=str_to_date(#{billMonthEnd},'%Y-%m-%d %T')</if> 		<if test="paytimeType != null and !paytimeType.equals('') "> ,f_paytime_type=#{paytimeType}</if> 		<if test="operateStatus != null and !operateStatus.equals('') "> ,f_operate_status=#{operateStatus}</if> 		<if test="feeType != null and !feeType.equals('') "> ,f_fee_type=#{feeType}</if> 		<if test="gbbcCfgId != null and !gbbcCfgId.equals('') "> ,f_gbbc_cfg_id=#{gbbcCfgId}</if> 		<if test="isCollectArrears != null and !isCollectArrears.equals('') "> ,f_is_collect_arrears=#{isCollectArrears}</if> 		<if test="isGenerateBill != null and !isGenerateBill.equals('') "> ,f_is_generate_bill=#{isGenerateBill}</if> 		<if test="periodMonths != null and !periodMonths.equals('') "> ,f_period_months=#{periodMonths}</if> 		<if test="chargingMode != null and !chargingMode.equals('') "> ,f_charging_mode=#{chargingMode}</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('') "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('') "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime == null or sys0UpdTime.equals('')  "> ,f_sys0_upd_time= sysdate() </if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('') "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('') "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('') "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('') "> ,f_sys0_del_user=#{sys0DelUser}</if> 		<if test="sys0DelState != null and !sys0DelState.equals('') "> ,f_sys0_del_state=#{sys0DelState}</if> 		<if test="bankCollectionStatus != null and !bankCollectionStatus.equals('') "> ,f_bank_collection_status=#{bankCollectionStatus}</if>		</trim>		WHERE f_id=#{id}
    </sql>
	<update id="update_groupBuildingBillCycle" parameterType="GroupBuildingBillCycle">
		<include refid="groupBuildingBillCycleBase.update_groupBuildingBillCycle"/>
    </update>
    
    <!-- 批量更新(账期管理)信息。 -->
    <update id="update_groupBuildingBillCycle_Batch" parameterType="java.util.List">
    	<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_group_building_bill_cycle		<trim prefix="SET" prefixOverrides=","> 		<if test="item.tGroupBuildingId != null and !item.tGroupBuildingId.equals('')  "> ,t_group_building_id=#{item.tGroupBuildingId}</if> 		<if test="item.tPayBillTypeId != null and !item.tPayBillTypeId.equals('')  "> ,t_pay_bill_type_id=#{item.tPayBillTypeId}</if> 		<if test="item.tPayBillTimeCfgId != null and !item.tPayBillTimeCfgId.equals('')  "> ,t_pay_bill_time_cfg_id=#{item.tPayBillTimeCfgId}</if> 		<if test="item.billMonth != null and !item.billMonth.equals('')  "> ,f_bill_month=str_to_date(#{item.billMonth},'%Y-%m-%d %T')</if> 		<if test="item.billPayStart != null and !item.billPayStart.equals('')  "> ,f_bill_pay_start=str_to_date(#{item.billPayStart},'%Y-%m-%d %T')</if> 		<if test="item.billPayEnd != null and !item.billPayEnd.equals('')  "> ,f_bill_pay_end=str_to_date(#{item.billPayEnd},'%Y-%m-%d %T')</if> 		<if test="item.billMonthStart != null and !item.billMonthStart.equals('')  "> ,f_bill_month_start=str_to_date(#{item.billMonthStart},'%Y-%m-%d %T')</if> 		<if test="item.billMonthEnd != null and !item.billMonthEnd.equals('')  "> ,f_bill_month_end=str_to_date(#{item.billMonthEnd},'%Y-%m-%d %T')</if> 		<if test="item.paytimeType != null and !item.paytimeType.equals('')  "> ,f_paytime_type=#{item.paytimeType}</if> 		<if test="item.operateStatus != null and !item.operateStatus.equals('')  "> ,f_operate_status=#{item.operateStatus}</if> 		<if test="item.feeType != null and !item.feeType.equals('')  "> ,f_fee_type=#{item.feeType}</if> 		<if test="item.gbbcCfgId != null and !item.gbbcCfgId.equals('')  "> ,f_gbbc_cfg_id=#{item.gbbcCfgId}</if> 		<if test="item.isCollectArrears != null and !item.isCollectArrears.equals('')  "> ,f_is_collect_arrears=#{item.isCollectArrears}</if> 		<if test="item.isGenerateBill != null and !item.isGenerateBill.equals('')  "> ,f_is_generate_bill=#{item.isGenerateBill}</if> 		<if test="item.periodMonths != null and !item.periodMonths.equals('')  "> ,f_period_months=#{item.periodMonths}</if> 		<if test="item.chargingMode != null and !item.chargingMode.equals('')  "> ,f_charging_mode=#{item.chargingMode}</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime == null or item.sys0UpdTime == '' "> ,f_sys0_upd_time= sysdate() </if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		<if test="item.sys0DelState != null and !item.sys0DelState.equals('')  "> ,f_sys0_del_state=#{item.sys0DelState}</if> 		<if test="item.bankCollectionStatus != null and !item.bankCollectionStatus.equals('')  "> ,f_bank_collection_status=#{item.bankCollectionStatus}</if>		</trim>		WHERE f_id=#{item.id}
    	</foreach>
    </update>

   <!-- 根据序列号删除(账期管理)信息_逻辑删除。 -->
    <sql id="delete_groupBuildingBillCycle_Logic">
		UPDATE t_group_building_bill_cycle		<trim prefix="SET" prefixOverrides=","> 		<if test="tGroupBuildingId != null and !tGroupBuildingId.equals('')  "> ,t_group_building_id=#{tGroupBuildingId}</if> 		<if test="tPayBillTypeId != null and !tPayBillTypeId.equals('')  "> ,t_pay_bill_type_id=#{tPayBillTypeId}</if> 		<if test="tPayBillTimeCfgId != null and !tPayBillTimeCfgId.equals('')  "> ,t_pay_bill_time_cfg_id=#{tPayBillTimeCfgId}</if> 		<if test="billMonth != null and !billMonth.equals('')  "> ,f_bill_month=str_to_date(#{billMonth},'%Y-%m-%d %T')</if> 		<if test="billPayStart != null and !billPayStart.equals('')  "> ,f_bill_pay_start=str_to_date(#{billPayStart},'%Y-%m-%d %T')</if> 		<if test="billPayEnd != null and !billPayEnd.equals('')  "> ,f_bill_pay_end=str_to_date(#{billPayEnd},'%Y-%m-%d %T')</if> 		<if test="billMonthStart != null and !billMonthStart.equals('')  "> ,f_bill_month_start=str_to_date(#{billMonthStart},'%Y-%m-%d %T')</if> 		<if test="billMonthEnd != null and !billMonthEnd.equals('')  "> ,f_bill_month_end=str_to_date(#{billMonthEnd},'%Y-%m-%d %T')</if> 		<if test="paytimeType != null and !paytimeType.equals('')  "> ,f_paytime_type=#{paytimeType}</if> 		<if test="operateStatus != null and !operateStatus.equals('')  "> ,f_operate_status=#{operateStatus}</if> 		<if test="feeType != null and !feeType.equals('')  "> ,f_fee_type=#{feeType}</if> 		<if test="gbbcCfgId != null and !gbbcCfgId.equals('')  "> ,f_gbbc_cfg_id=#{gbbcCfgId}</if> 		<if test="isCollectArrears != null and !isCollectArrears.equals('')  "> ,f_is_collect_arrears=#{isCollectArrears}</if> 		<if test="isGenerateBill != null and !isGenerateBill.equals('')  "> ,f_is_generate_bill=#{isGenerateBill}</if> 		<if test="periodMonths != null and !periodMonths.equals('')  "> ,f_period_months=#{periodMonths}</if> 		<if test="chargingMode != null and !chargingMode.equals('')  "> ,f_charging_mode=#{chargingMode}</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime == null or sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('')  "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('')  "> ,f_sys0_del_user=#{sys0DelUser}</if> 		<if test="bankCollectionStatus != null and !bankCollectionStatus.equals('')  "> ,f_bank_collection_status=#{bankCollectionStatus}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{id}
    </sql>
    <update id="delete_groupBuildingBillCycle_Logic" parameterType="GroupBuildingBillCycle">
		<include refid="groupBuildingBillCycleBase.delete_groupBuildingBillCycle_Logic"/>
    </update>
    
    <!-- 批量删除(账期管理)信息_逻辑删除 -->
    <update id="delete_groupBuildingBillCycle_Logic_Batch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_group_building_bill_cycle		<trim prefix="SET" prefixOverrides=","> 		<if test="item.tGroupBuildingId != null and !item.tGroupBuildingId.equals('')  "> ,t_group_building_id=#{item.tGroupBuildingId}</if> 		<if test="item.tPayBillTypeId != null and !item.tPayBillTypeId.equals('')  "> ,t_pay_bill_type_id=#{item.tPayBillTypeId}</if> 		<if test="item.tPayBillTimeCfgId != null and !item.tPayBillTimeCfgId.equals('')  "> ,t_pay_bill_time_cfg_id=#{item.tPayBillTimeCfgId}</if> 		<if test="item.billMonth != null and !item.billMonth.equals('')  "> ,f_bill_month=str_to_date(#{item.billMonth},'%Y-%m-%d %T')</if> 		<if test="item.billPayStart != null and !item.billPayStart.equals('')  "> ,f_bill_pay_start=str_to_date(#{item.billPayStart},'%Y-%m-%d %T')</if> 		<if test="item.billPayEnd != null and !item.billPayEnd.equals('')  "> ,f_bill_pay_end=str_to_date(#{item.billPayEnd},'%Y-%m-%d %T')</if> 		<if test="item.billMonthStart != null and !item.billMonthStart.equals('')  "> ,f_bill_month_start=str_to_date(#{item.billMonthStart},'%Y-%m-%d %T')</if> 		<if test="item.billMonthEnd != null and !item.billMonthEnd.equals('')  "> ,f_bill_month_end=str_to_date(#{item.billMonthEnd},'%Y-%m-%d %T')</if> 		<if test="item.paytimeType != null and !item.paytimeType.equals('')  "> ,f_paytime_type=#{item.paytimeType}</if> 		<if test="item.operateStatus != null and !item.operateStatus.equals('')  "> ,f_operate_status=#{item.operateStatus}</if> 		<if test="item.feeType != null and !item.feeType.equals('')  "> ,f_fee_type=#{item.feeType}</if> 		<if test="item.gbbcCfgId != null and !item.gbbcCfgId.equals('')  "> ,f_gbbc_cfg_id=#{item.gbbcCfgId}</if> 		<if test="item.isCollectArrears != null and !item.isCollectArrears.equals('')  "> ,f_is_collect_arrears=#{item.isCollectArrears}</if> 		<if test="item.isGenerateBill != null and !item.isGenerateBill.equals('')  "> ,f_is_generate_bill=#{item.isGenerateBill}</if> 		<if test="item.periodMonths != null and !item.periodMonths.equals('')  "> ,f_period_months=#{item.periodMonths}</if> 		<if test="item.chargingMode != null and !item.chargingMode.equals('')  "> ,f_charging_mode=#{item.chargingMode}</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime == null or item.sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		<if test="item.bankCollectionStatus != null and !item.bankCollectionStatus.equals('')  "> ,f_bank_collection_status=#{item.bankCollectionStatus}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{item.id}
    	</foreach>
    </update>
    
    <!-- 根据序列号删除(账期管理)信息。 -->
    <sql id="delete_groupBuildingBillCycle">
		DELETE FROM t_group_building_bill_cycle WHERE f_id=#{_parameter}
    </sql>
    <delete id="delete_groupBuildingBillCycle" parameterType="java.lang.String">
		<include refid="groupBuildingBillCycleBase.delete_groupBuildingBillCycle"/>
    </delete>
    
    <!-- 根据序列号批量删除(账期管理)信息。 -->
    <delete id="delete_groupBuildingBillCycle_Batch" parameterType="java.util.List">
		DELETE FROM t_group_building_bill_cycle WHERE 1=1 AND f_id IN 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
</mapper>
