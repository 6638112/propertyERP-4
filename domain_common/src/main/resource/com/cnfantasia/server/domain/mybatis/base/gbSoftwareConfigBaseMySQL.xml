<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN:小区物业软件配置 t_gb_software_config -->
<mapper namespace="gbSoftwareConfigBase">
	<resultMap type="GbSoftwareConfig" id="gbSoftwareConfigBaseMap">
        <id column="f_id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="f_gb_id" javaType="java.math.BigInteger" property="gbId"/>  <!-- 小区ID -->        <result column="f_software_gb_id" javaType="java.lang.String" property="softwareGbId"/>  <!-- 物业软件的小区ID -->        <result column="f_ip_address" javaType="java.lang.String" property="ipAddress"/>  <!-- 物业软件访问地址 -->        <result column="f_software_type" javaType="java.lang.Integer" property="softwareType"/>  <!-- 哪个物业软件（1 -->        <result column="f_database_code" javaType="java.lang.String" property="databaseCode"/>  <!-- 数据库代码（极致用） -->        <result column="f_rsa_public_key" javaType="java.lang.String" property="rsaPublicKey"/>  <!-- rsa加密公钥 -->        <result column="f_rsa_private_key" javaType="java.lang.String" property="rsaPrivateKey"/>  <!-- rsa加密私钥 -->        <result column="f_service_class_name" javaType="java.lang.String" property="serviceClassName"/>  <!-- 实现了必要接口的class -->        <result column="f_cannot_connect_start_date" javaType="java.lang.Integer" property="cannotConnectStartDate"/>  <!-- 不可缴费开始日期 -->        <result column="f_cannot_connect_end_date" javaType="java.lang.Integer" property="cannotConnectEndDate"/>  <!-- 不可缴费结束日期 -->        <result column="f_is_valid" javaType="java.lang.Integer" property="isValid"/>  <!-- 配置是否有效 -->        <result column="f_default_repairer_id" javaType="java.math.BigInteger" property="defaultRepairerId"/>  <!-- 公共维修默认分配师傅ID -->        <result column="f_sys0_add_time" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="f_sys0_upd_time" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="f_sys0_del_time" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="f_sys0_add_user" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="f_sys0_upd_user" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="f_sys0_del_user" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="f_sys0_del_state" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
	</resultMap>
	<resultMap type="GbSoftwareConfig" id="gbSoftwareConfigExtendMap" extends="gbSoftwareConfigBaseMap">
	</resultMap>
	<resultMap type="GbSoftwareConfig" id="gbSoftwareConfigBaseMap_AppendTable">
        <id column="GSCid" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="GSCgbId" javaType="java.math.BigInteger" property="gbId"/>  <!-- 小区ID -->        <result column="GSCsoftwareGbId" javaType="java.lang.String" property="softwareGbId"/>  <!-- 物业软件的小区ID -->        <result column="GSCipAddress" javaType="java.lang.String" property="ipAddress"/>  <!-- 物业软件访问地址 -->        <result column="GSCsoftwareType" javaType="java.lang.Integer" property="softwareType"/>  <!-- 哪个物业软件（1 -->        <result column="GSCdatabaseCode" javaType="java.lang.String" property="databaseCode"/>  <!-- 数据库代码（极致用） -->        <result column="GSCrsaPublicKey" javaType="java.lang.String" property="rsaPublicKey"/>  <!-- rsa加密公钥 -->        <result column="GSCrsaPrivateKey" javaType="java.lang.String" property="rsaPrivateKey"/>  <!-- rsa加密私钥 -->        <result column="GSCserviceClassName" javaType="java.lang.String" property="serviceClassName"/>  <!-- 实现了必要接口的class -->        <result column="GSCcannotConnectStartDate" javaType="java.lang.Integer" property="cannotConnectStartDate"/>  <!-- 不可缴费开始日期 -->        <result column="GSCcannotConnectEndDate" javaType="java.lang.Integer" property="cannotConnectEndDate"/>  <!-- 不可缴费结束日期 -->        <result column="GSCisValid" javaType="java.lang.Integer" property="isValid"/>  <!-- 配置是否有效 -->        <result column="GSCdefaultRepairerId" javaType="java.math.BigInteger" property="defaultRepairerId"/>  <!-- 公共维修默认分配师傅ID -->        <result column="GSCsys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="GSCsys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="GSCsys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="GSCsys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="GSCsys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="GSCsys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="GSCsys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
	</resultMap>
	<resultMap type="GbSoftwareConfig" id="gbSoftwareConfigBaseMap_AppendTable1">
        <id column="GSC1id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="GSC1gbId" javaType="java.math.BigInteger" property="gbId"/>  <!-- 小区ID -->        <result column="GSC1softwareGbId" javaType="java.lang.String" property="softwareGbId"/>  <!-- 物业软件的小区ID -->        <result column="GSC1ipAddress" javaType="java.lang.String" property="ipAddress"/>  <!-- 物业软件访问地址 -->        <result column="GSC1softwareType" javaType="java.lang.Integer" property="softwareType"/>  <!-- 哪个物业软件（1 -->        <result column="GSC1databaseCode" javaType="java.lang.String" property="databaseCode"/>  <!-- 数据库代码（极致用） -->        <result column="GSC1rsaPublicKey" javaType="java.lang.String" property="rsaPublicKey"/>  <!-- rsa加密公钥 -->        <result column="GSC1rsaPrivateKey" javaType="java.lang.String" property="rsaPrivateKey"/>  <!-- rsa加密私钥 -->        <result column="GSC1serviceClassName" javaType="java.lang.String" property="serviceClassName"/>  <!-- 实现了必要接口的class -->        <result column="GSC1cannotConnectStartDate" javaType="java.lang.Integer" property="cannotConnectStartDate"/>  <!-- 不可缴费开始日期 -->        <result column="GSC1cannotConnectEndDate" javaType="java.lang.Integer" property="cannotConnectEndDate"/>  <!-- 不可缴费结束日期 -->        <result column="GSC1isValid" javaType="java.lang.Integer" property="isValid"/>  <!-- 配置是否有效 -->        <result column="GSC1defaultRepairerId" javaType="java.math.BigInteger" property="defaultRepairerId"/>  <!-- 公共维修默认分配师傅ID -->        <result column="GSC1sys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="GSC1sys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="GSC1sys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="GSC1sys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="GSC1sys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="GSC1sys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="GSC1sys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
	</resultMap>
	<!-- 公共sql提取  -->
	<sql id="queryHead">
		GSC.f_id,GSC.f_gb_id,GSC.f_software_gb_id,GSC.f_ip_address,GSC.f_software_type,GSC.f_database_code,GSC.f_rsa_public_key,GSC.f_rsa_private_key,GSC.f_service_class_name,GSC.f_cannot_connect_start_date,GSC.f_cannot_connect_end_date,GSC.f_is_valid,GSC.f_default_repairer_id
	</sql>
	<sql id="queryHead_AppendTable">
		GSC.f_id as GSCid,GSC.f_gb_id as GSCgbId,GSC.f_software_gb_id as GSCsoftwareGbId,GSC.f_ip_address as GSCipAddress,GSC.f_software_type as GSCsoftwareType,GSC.f_database_code as GSCdatabaseCode,GSC.f_rsa_public_key as GSCrsaPublicKey,GSC.f_rsa_private_key as GSCrsaPrivateKey,GSC.f_service_class_name as GSCserviceClassName,GSC.f_cannot_connect_start_date as GSCcannotConnectStartDate,GSC.f_cannot_connect_end_date as GSCcannotConnectEndDate,GSC.f_is_valid as GSCisValid,GSC.f_default_repairer_id as GSCdefaultRepairerId
	</sql>
	<sql id="queryHead_AppendTable1">
		GSC1.f_id as GSC1id,GSC1.f_gb_id as GSC1gbId,GSC1.f_software_gb_id as GSC1softwareGbId,GSC1.f_ip_address as GSC1ipAddress,GSC1.f_software_type as GSC1softwareType,GSC1.f_database_code as GSC1databaseCode,GSC1.f_rsa_public_key as GSC1rsaPublicKey,GSC1.f_rsa_private_key as GSC1rsaPrivateKey,GSC1.f_service_class_name as GSC1serviceClassName,GSC1.f_cannot_connect_start_date as GSC1cannotConnectStartDate,GSC1.f_cannot_connect_end_date as GSC1cannotConnectEndDate,GSC1.f_is_valid as GSC1isValid,GSC1.f_default_repairer_id as GSC1defaultRepairerId
	</sql>
	<sql id="querySql">
        <if test="id != null">  and (GSC.f_id = #{id} ) </if>        <if test="gbId != null">  and (GSC.f_gb_id = #{gbId} ) </if>        <if test="softwareGbId != null">  and (GSC.f_software_gb_id = #{softwareGbId} ) </if>        <if test="ipAddress != null">  and (GSC.f_ip_address = #{ipAddress} ) </if>        <if test="softwareType != null">  and (GSC.f_software_type = #{softwareType} ) </if>        <if test="databaseCode != null">  and (GSC.f_database_code = #{databaseCode} ) </if>        <if test="rsaPublicKey != null">  and (GSC.f_rsa_public_key = #{rsaPublicKey} ) </if>        <if test="rsaPrivateKey != null">  and (GSC.f_rsa_private_key = #{rsaPrivateKey} ) </if>        <if test="serviceClassName != null">  and (GSC.f_service_class_name = #{serviceClassName} ) </if>        <if test="cannotConnectStartDate != null">  and (GSC.f_cannot_connect_start_date = #{cannotConnectStartDate} ) </if>        <if test="cannotConnectEndDate != null">  and (GSC.f_cannot_connect_end_date = #{cannotConnectEndDate} ) </if>        <if test="isValid != null">  and (GSC.f_is_valid = #{isValid} ) </if>        <if test="defaultRepairerId != null">  and (GSC.f_default_repairer_id = #{defaultRepairerId} ) </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (GSC.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (GSC.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (GSC.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (GSC.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (GSC.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (GSC.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (GSC.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (GSC.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (GSC.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null">  and (GSC.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null">  and (GSC.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null">  and (GSC.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null">  and (GSC.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null">  and (GSC.f_sys0_del_state = 0 ) </if>
	</sql>
	<sql id="querySqlDim">
        <if test="id != null and !id.equals('')  ">  and (GSC.f_id = #{id} ) </if>        <if test="gbId != null and !gbId.equals('')  ">  and (GSC.f_gb_id = #{gbId} ) </if>        <if test="softwareGbId != null and !softwareGbId.equals('')  ">  and (GSC.f_software_gb_id like CONCAT('%',#{softwareGbId},'%') ) </if>        <if test="ipAddress != null and !ipAddress.equals('')  ">  and (GSC.f_ip_address like CONCAT('%',#{ipAddress},'%') ) </if>        <if test="softwareType != null and !softwareType.equals('')  ">  and (GSC.f_software_type = #{softwareType} ) </if>        <if test="databaseCode != null and !databaseCode.equals('')  ">  and (GSC.f_database_code like CONCAT('%',#{databaseCode},'%') ) </if>        <if test="rsaPublicKey != null and !rsaPublicKey.equals('')  ">  and (GSC.f_rsa_public_key like CONCAT('%',#{rsaPublicKey},'%') ) </if>        <if test="rsaPrivateKey != null and !rsaPrivateKey.equals('')  ">  and (GSC.f_rsa_private_key like CONCAT('%',#{rsaPrivateKey},'%') ) </if>        <if test="serviceClassName != null and !serviceClassName.equals('')  ">  and (GSC.f_service_class_name like CONCAT('%',#{serviceClassName},'%') ) </if>        <if test="cannotConnectStartDate != null and !cannotConnectStartDate.equals('')  ">  and (GSC.f_cannot_connect_start_date = #{cannotConnectStartDate} ) </if>        <if test="cannotConnectEndDate != null and !cannotConnectEndDate.equals('')  ">  and (GSC.f_cannot_connect_end_date = #{cannotConnectEndDate} ) </if>        <if test="isValid != null and !isValid.equals('')  ">  and (GSC.f_is_valid = #{isValid} ) </if>        <if test="defaultRepairerId != null and !defaultRepairerId.equals('')  ">  and (GSC.f_default_repairer_id = #{defaultRepairerId} ) </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (GSC.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (GSC.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (GSC.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (GSC.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (GSC.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (GSC.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (GSC.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (GSC.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (GSC.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null and !sys0AddUser.equals('')  ">  and (GSC.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null and !sys0UpdUser.equals('')  ">  and (GSC.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null and !sys0DelUser.equals('')  ">  and (GSC.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null and !sys0DelState.equals('')  ">  and (GSC.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null or sys0DelState == '' ">  and (GSC.f_sys0_del_state = 0 ) </if>
	</sql>
	<sql id="dimCheckSql">
		<if test="_QUERY_TYPE_IF_DIM == true"><include refid="gbSoftwareConfigBase.querySqlDim"/></if>
		<if test="_QUERY_TYPE_IF_DIM == null or  _QUERY_TYPE_IF_DIM == '' or  _QUERY_TYPE_IF_DIM == false or _QUERY_TYPE_IF_DIM != true"><include refid="gbSoftwareConfigBase.querySql"/></if><!-- 默认精确查询 -->
		<!-- <if test="_QUERY_TYPE_IF_DIM != true"><include refid="gbSoftwareConfigBase.querySql"/></if> --><!-- 默认精确查询 -->
	</sql>
	<!-- 各种查询附加的查询条件 -->
	<sql id="busiQueryCondition">
	    <include refid="gbSoftwareConfigBase.busiQueryCount"/>
	</sql>
	<!-- 查询记录数附加的查询条件 -->
	<sql id="busiQueryCount">
	     FROM t_gb_software_config GSC    	 WHERE 1=1
	</sql>
	
	<!-- 根据条件查询(小区物业软件配置)信息。 -->
	<sql id="select_gbSoftwareConfig">
		SELECT <include refid="gbSoftwareConfigBase.queryHead"/>
		<include refid="gbSoftwareConfigBase.busiQueryCondition"/>
		<include refid="gbSoftwareConfigBase.dimCheckSql"/>
		ORDER BY GSC.f_id DESC
	</sql>
	<select id="select_gbSoftwareConfig" parameterType="java.util.Map" resultMap="gbSoftwareConfigBase.gbSoftwareConfigExtendMap">
		<include refid="gbSoftwareConfigBase.select_gbSoftwareConfig"/>
	</select>
	
	<!-- 根据条件分页查询(小区物业软件配置)信息  -->
	<sql id="select_gbSoftwareConfig_withPage">
		SELECT <include refid="gbSoftwareConfigBase.queryHead"/>
		<include refid="gbSoftwareConfigBase.busiQueryCondition"/>
		<include refid="gbSoftwareConfigBase.dimCheckSql"/>
		ORDER BY f_id DESC
		<![CDATA[ LIMIT #{_begin},#{_length} ]]>
	</sql>
	<select id="select_gbSoftwareConfig_withPage" resultMap="gbSoftwareConfigBase.gbSoftwareConfigExtendMap" parameterType="java.util.Map">
		<include refid="gbSoftwareConfigBase.select_gbSoftwareConfig_withPage"/>
	</select>

	<!-- 根据序列号查询某个(小区物业软件配置)信息。 -->
	<sql id="select_gbSoftwareConfig_bySeqId">
		SELECT <include refid="gbSoftwareConfigBase.queryHead"/>
		<include refid="gbSoftwareConfigBase.busiQueryCondition"/>
		 and GSC.f_id = #{_parameter}
	</sql>
	<select id="select_gbSoftwareConfig_bySeqId" parameterType="java.math.BigInteger" resultMap="gbSoftwareConfigBase.gbSoftwareConfigBaseMap">
		<include refid="gbSoftwareConfigBase.select_gbSoftwareConfig_bySeqId"/>
	</select>
	
	<!-- 根据条件查询满足条件的(小区物业软件配置)记录数  -->
	<sql id="select_gbSoftwareConfig_count">
		SELECT COUNT(*)
		<include refid="gbSoftwareConfigBase.busiQueryCount"/>
		<include refid="gbSoftwareConfigBase.dimCheckSql"/>
	</sql>
	<select id="select_gbSoftwareConfig_count" resultType="java.lang.Integer">
		<include refid="gbSoftwareConfigBase.select_gbSoftwareConfig_count"/>
	</select>
	
	 <!-- 往(小区物业软件配置)新增一条记录。 -->
	 <sql id="insert_gbSoftwareConfig">
		INSERT INTO t_gb_software_config 
		(f_id,f_gb_id,f_software_gb_id,f_ip_address,f_software_type,f_database_code,f_rsa_public_key,f_rsa_private_key,f_service_class_name,f_cannot_connect_start_date,f_cannot_connect_end_date,f_is_valid,f_default_repairer_id,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state) VALUES 
		(#{id},#{gbId},#{softwareGbId,jdbcType=VARCHAR},#{ipAddress,jdbcType=VARCHAR},#{softwareType},#{databaseCode,jdbcType=VARCHAR},#{rsaPublicKey,jdbcType=VARCHAR},#{rsaPrivateKey,jdbcType=VARCHAR},#{serviceClassName,jdbcType=VARCHAR},#{cannotConnectStartDate},#{cannotConnectEndDate},#{isValid},#{defaultRepairerId},sysdate(),str_to_date(#{sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{sys0AddUser},#{sys0UpdUser},#{sys0DelUser},0)
	 </sql>
    <insert id="insert_gbSoftwareConfig" parameterType="GbSoftwareConfig">
		<include refid="gbSoftwareConfigBase.insert_gbSoftwareConfig"/>
    </insert>
    
	<!-- 批量新增(小区物业软件配置)信息 -->
    <insert id="insert_gbSoftwareConfig_Batch" parameterType="java.util.List">
    	INSERT INTO t_gb_software_config 
		(f_id,f_gb_id,f_software_gb_id,f_ip_address,f_software_type,f_database_code,f_rsa_public_key,f_rsa_private_key,f_service_class_name,f_cannot_connect_start_date,f_cannot_connect_end_date,f_is_valid,f_default_repairer_id,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state) VALUES  
		<foreach item="item" collection="list"  separator=","><!-- open="("  close=")" -->
		(#{item.id},#{item.gbId},#{item.softwareGbId,jdbcType=VARCHAR},#{item.ipAddress,jdbcType=VARCHAR},#{item.softwareType},#{item.databaseCode,jdbcType=VARCHAR},#{item.rsaPublicKey,jdbcType=VARCHAR},#{item.rsaPrivateKey,jdbcType=VARCHAR},#{item.serviceClassName,jdbcType=VARCHAR},#{item.cannotConnectStartDate},#{item.cannotConnectEndDate},#{item.isValid},#{item.defaultRepairerId},sysdate(),str_to_date(#{item.sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{item.sys0AddUser},#{item.sys0UpdUser},#{item.sys0DelUser},0)
		</foreach>
    </insert>
    
    <!-- 更新(小区物业软件配置)信息。 -->
    <sql id="update_gbSoftwareConfig">
		UPDATE t_gb_software_config		<trim prefix="SET" prefixOverrides=","> 		<if test="gbId != null and !gbId.equals('') "> ,f_gb_id=#{gbId}</if> 		<if test="softwareGbId != null and !softwareGbId.equals('') "> ,f_software_gb_id=#{softwareGbId}</if> 		<if test="ipAddress != null and !ipAddress.equals('') "> ,f_ip_address=#{ipAddress}</if> 		<if test="softwareType != null and !softwareType.equals('') "> ,f_software_type=#{softwareType}</if> 		<if test="databaseCode != null and !databaseCode.equals('') "> ,f_database_code=#{databaseCode}</if> 		<if test="rsaPublicKey != null and !rsaPublicKey.equals('') "> ,f_rsa_public_key=#{rsaPublicKey}</if> 		<if test="rsaPrivateKey != null and !rsaPrivateKey.equals('') "> ,f_rsa_private_key=#{rsaPrivateKey}</if> 		<if test="serviceClassName != null and !serviceClassName.equals('') "> ,f_service_class_name=#{serviceClassName}</if> 		<if test="cannotConnectStartDate != null and !cannotConnectStartDate.equals('') "> ,f_cannot_connect_start_date=#{cannotConnectStartDate}</if> 		<if test="cannotConnectEndDate != null and !cannotConnectEndDate.equals('') "> ,f_cannot_connect_end_date=#{cannotConnectEndDate}</if> 		<if test="isValid != null and !isValid.equals('') "> ,f_is_valid=#{isValid}</if> 		<if test="defaultRepairerId != null and !defaultRepairerId.equals('') "> ,f_default_repairer_id=#{defaultRepairerId}</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('') "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('') "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime == null or sys0UpdTime.equals('')  "> ,f_sys0_upd_time= sysdate() </if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('') "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('') "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('') "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('') "> ,f_sys0_del_user=#{sys0DelUser}</if> 		<if test="sys0DelState != null and !sys0DelState.equals('') "> ,f_sys0_del_state=#{sys0DelState}</if>		</trim>		WHERE f_id=#{id}
    </sql>
	<update id="update_gbSoftwareConfig" parameterType="GbSoftwareConfig">
		<include refid="gbSoftwareConfigBase.update_gbSoftwareConfig"/>
    </update>
    
    <!-- 批量更新(小区物业软件配置)信息。 -->
    <update id="update_gbSoftwareConfig_Batch" parameterType="java.util.List">
    	<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_gb_software_config		<trim prefix="SET" prefixOverrides=","> 		<if test="item.gbId != null and !item.gbId.equals('')  "> ,f_gb_id=#{item.gbId}</if> 		<if test="item.softwareGbId != null and !item.softwareGbId.equals('')  "> ,f_software_gb_id=#{item.softwareGbId}</if> 		<if test="item.ipAddress != null and !item.ipAddress.equals('')  "> ,f_ip_address=#{item.ipAddress}</if> 		<if test="item.softwareType != null and !item.softwareType.equals('')  "> ,f_software_type=#{item.softwareType}</if> 		<if test="item.databaseCode != null and !item.databaseCode.equals('')  "> ,f_database_code=#{item.databaseCode}</if> 		<if test="item.rsaPublicKey != null and !item.rsaPublicKey.equals('')  "> ,f_rsa_public_key=#{item.rsaPublicKey}</if> 		<if test="item.rsaPrivateKey != null and !item.rsaPrivateKey.equals('')  "> ,f_rsa_private_key=#{item.rsaPrivateKey}</if> 		<if test="item.serviceClassName != null and !item.serviceClassName.equals('')  "> ,f_service_class_name=#{item.serviceClassName}</if> 		<if test="item.cannotConnectStartDate != null and !item.cannotConnectStartDate.equals('')  "> ,f_cannot_connect_start_date=#{item.cannotConnectStartDate}</if> 		<if test="item.cannotConnectEndDate != null and !item.cannotConnectEndDate.equals('')  "> ,f_cannot_connect_end_date=#{item.cannotConnectEndDate}</if> 		<if test="item.isValid != null and !item.isValid.equals('')  "> ,f_is_valid=#{item.isValid}</if> 		<if test="item.defaultRepairerId != null and !item.defaultRepairerId.equals('')  "> ,f_default_repairer_id=#{item.defaultRepairerId}</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime == null or item.sys0UpdTime == '' "> ,f_sys0_upd_time= sysdate() </if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		<if test="item.sys0DelState != null and !item.sys0DelState.equals('')  "> ,f_sys0_del_state=#{item.sys0DelState}</if>		</trim>		WHERE f_id=#{item.id}
    	</foreach>
    </update>

   <!-- 根据序列号删除(小区物业软件配置)信息_逻辑删除。 -->
    <sql id="delete_gbSoftwareConfig_Logic">
		UPDATE t_gb_software_config		<trim prefix="SET" prefixOverrides=","> 		<if test="gbId != null and !gbId.equals('')  "> ,f_gb_id=#{gbId}</if> 		<if test="softwareGbId != null and !softwareGbId.equals('')  "> ,f_software_gb_id=#{softwareGbId}</if> 		<if test="ipAddress != null and !ipAddress.equals('')  "> ,f_ip_address=#{ipAddress}</if> 		<if test="softwareType != null and !softwareType.equals('')  "> ,f_software_type=#{softwareType}</if> 		<if test="databaseCode != null and !databaseCode.equals('')  "> ,f_database_code=#{databaseCode}</if> 		<if test="rsaPublicKey != null and !rsaPublicKey.equals('')  "> ,f_rsa_public_key=#{rsaPublicKey}</if> 		<if test="rsaPrivateKey != null and !rsaPrivateKey.equals('')  "> ,f_rsa_private_key=#{rsaPrivateKey}</if> 		<if test="serviceClassName != null and !serviceClassName.equals('')  "> ,f_service_class_name=#{serviceClassName}</if> 		<if test="cannotConnectStartDate != null and !cannotConnectStartDate.equals('')  "> ,f_cannot_connect_start_date=#{cannotConnectStartDate}</if> 		<if test="cannotConnectEndDate != null and !cannotConnectEndDate.equals('')  "> ,f_cannot_connect_end_date=#{cannotConnectEndDate}</if> 		<if test="isValid != null and !isValid.equals('')  "> ,f_is_valid=#{isValid}</if> 		<if test="defaultRepairerId != null and !defaultRepairerId.equals('')  "> ,f_default_repairer_id=#{defaultRepairerId}</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime == null or sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('')  "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('')  "> ,f_sys0_del_user=#{sys0DelUser}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{id}
    </sql>
    <update id="delete_gbSoftwareConfig_Logic" parameterType="GbSoftwareConfig">
		<include refid="gbSoftwareConfigBase.delete_gbSoftwareConfig_Logic"/>
    </update>
    
    <!-- 批量删除(小区物业软件配置)信息_逻辑删除 -->
    <update id="delete_gbSoftwareConfig_Logic_Batch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_gb_software_config		<trim prefix="SET" prefixOverrides=","> 		<if test="item.gbId != null and !item.gbId.equals('')  "> ,f_gb_id=#{item.gbId}</if> 		<if test="item.softwareGbId != null and !item.softwareGbId.equals('')  "> ,f_software_gb_id=#{item.softwareGbId}</if> 		<if test="item.ipAddress != null and !item.ipAddress.equals('')  "> ,f_ip_address=#{item.ipAddress}</if> 		<if test="item.softwareType != null and !item.softwareType.equals('')  "> ,f_software_type=#{item.softwareType}</if> 		<if test="item.databaseCode != null and !item.databaseCode.equals('')  "> ,f_database_code=#{item.databaseCode}</if> 		<if test="item.rsaPublicKey != null and !item.rsaPublicKey.equals('')  "> ,f_rsa_public_key=#{item.rsaPublicKey}</if> 		<if test="item.rsaPrivateKey != null and !item.rsaPrivateKey.equals('')  "> ,f_rsa_private_key=#{item.rsaPrivateKey}</if> 		<if test="item.serviceClassName != null and !item.serviceClassName.equals('')  "> ,f_service_class_name=#{item.serviceClassName}</if> 		<if test="item.cannotConnectStartDate != null and !item.cannotConnectStartDate.equals('')  "> ,f_cannot_connect_start_date=#{item.cannotConnectStartDate}</if> 		<if test="item.cannotConnectEndDate != null and !item.cannotConnectEndDate.equals('')  "> ,f_cannot_connect_end_date=#{item.cannotConnectEndDate}</if> 		<if test="item.isValid != null and !item.isValid.equals('')  "> ,f_is_valid=#{item.isValid}</if> 		<if test="item.defaultRepairerId != null and !item.defaultRepairerId.equals('')  "> ,f_default_repairer_id=#{item.defaultRepairerId}</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime == null or item.sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{item.id}
    	</foreach>
    </update>
    
    <!-- 根据序列号删除(小区物业软件配置)信息。 -->
    <sql id="delete_gbSoftwareConfig">
		DELETE FROM t_gb_software_config WHERE f_id=#{_parameter}
    </sql>
    <delete id="delete_gbSoftwareConfig" parameterType="java.lang.String">
		<include refid="gbSoftwareConfigBase.delete_gbSoftwareConfig"/>
    </delete>
    
    <!-- 根据序列号批量删除(小区物业软件配置)信息。 -->
    <delete id="delete_gbSoftwareConfig_Batch" parameterType="java.util.List">
		DELETE FROM t_gb_software_config WHERE 1=1 AND f_id IN 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
</mapper>
