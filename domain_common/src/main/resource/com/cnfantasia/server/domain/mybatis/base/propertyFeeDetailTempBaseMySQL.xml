<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN:物业收费项费用明细临时表（生成账单使用） t_property_fee_detail_temp -->
<mapper namespace="propertyFeeDetailTempBase">
	<resultMap type="PropertyFeeDetailTemp" id="propertyFeeDetailTempBaseMap">
        <id column="f_id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="f_type" javaType="java.lang.Integer" property="type"/>  <!-- 费用项类型 -->        <result column="f_name" javaType="java.lang.String" property="name"/>  <!-- 费用名称 -->        <result column="f_mr_name" javaType="java.lang.String" property="mrName"/>  <!-- 抄表一户多表表名称 -->        <result column="f_price" javaType="java.lang.Double" property="price"/>  <!-- 费用合计(分) -->        <result column="f_total_amount" javaType="java.lang.Double" property="totalAmount"/>  <!-- 账单合计 -->        <result column="f_signal_price" javaType="java.lang.Double" property="signalPrice"/>  <!-- 单价(分) -->        <result column="f_signal_price_str" javaType="java.lang.String" property="signalPriceStr"/>  <!-- 单价串(抄表 -->        <result column="f_price_unit_value" javaType="java.lang.Long" property="priceUnitValue"/>  <!-- 计价单位取值(多少平方米/用量) -->        <result column="f_now_value" javaType="java.lang.Double" property="nowValue"/>  <!-- 本期读数（抄表） -->        <result column="f_prior_value" javaType="java.lang.Double" property="priorValue"/>  <!-- 上期读取（抄表） -->        <result column="t_gb_id" javaType="java.math.BigInteger" property="tGbId"/>  <!-- 小区id -->        <result column="t_real_room_id" javaType="java.math.BigInteger" property="tRealRoomId"/>  <!-- 真实房间id -->        <result column="t_bill_cycle_id" javaType="java.math.BigInteger" property="tBillCycleId"/>  <!-- 账期id -->        <result column="f_target_id" javaType="java.math.BigInteger" property="targetId"/>  <!-- 费用项id(常规类型对应t_fixed_fee_item_has_room的f_id) -->        <result column="t_mr_standard_room_id" javaType="java.math.BigInteger" property="tMrStandardRoomId"/>  <!-- 房间收费标准ID（抄表 -->        <result column="f_multiplier_times" javaType="java.lang.Double" property="multiplierTimes"/>  <!-- 抄表倍率 -->        <result column="f_last_unpaid" javaType="java.lang.Long" property="lastUnpaid"/>  <!-- 抄表往月欠费（单位 -->        <result column="f_bill_month_start" javaType="java.lang.String" property="billMonthStart"/>  <!-- 物业费用起始时间（暂时只针对选择周期使用） -->        <result column="f_create_bill_month" javaType="java.lang.String" property="createBillMonth"/>  <!-- 费用账单已经生成到的月份（截止月份） -->        <result column="f_sys0_add_time" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="f_sys0_upd_time" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="f_sys0_del_time" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="f_sys0_add_user" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="f_sys0_upd_user" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="f_sys0_del_user" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="f_sys0_del_state" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
	</resultMap>
	<resultMap type="PropertyFeeDetailTemp" id="propertyFeeDetailTempExtendMap" extends="propertyFeeDetailTempBaseMap">
	</resultMap>
	<resultMap type="PropertyFeeDetailTemp" id="propertyFeeDetailTempBaseMap_AppendTable">
        <id column="PFDTid" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="PFDTtype" javaType="java.lang.Integer" property="type"/>  <!-- 费用项类型 -->        <result column="PFDTname" javaType="java.lang.String" property="name"/>  <!-- 费用名称 -->        <result column="PFDTmrName" javaType="java.lang.String" property="mrName"/>  <!-- 抄表一户多表表名称 -->        <result column="PFDTprice" javaType="java.lang.Double" property="price"/>  <!-- 费用合计(分) -->        <result column="PFDTtotalAmount" javaType="java.lang.Double" property="totalAmount"/>  <!-- 账单合计 -->        <result column="PFDTsignalPrice" javaType="java.lang.Double" property="signalPrice"/>  <!-- 单价(分) -->        <result column="PFDTsignalPriceStr" javaType="java.lang.String" property="signalPriceStr"/>  <!-- 单价串(抄表 -->        <result column="PFDTpriceUnitValue" javaType="java.lang.Long" property="priceUnitValue"/>  <!-- 计价单位取值(多少平方米/用量) -->        <result column="PFDTnowValue" javaType="java.lang.Double" property="nowValue"/>  <!-- 本期读数（抄表） -->        <result column="PFDTpriorValue" javaType="java.lang.Double" property="priorValue"/>  <!-- 上期读取（抄表） -->        <result column="PFDTtGbId" javaType="java.math.BigInteger" property="tGbId"/>  <!-- 小区id -->        <result column="PFDTtRealRoomId" javaType="java.math.BigInteger" property="tRealRoomId"/>  <!-- 真实房间id -->        <result column="PFDTtBillCycleId" javaType="java.math.BigInteger" property="tBillCycleId"/>  <!-- 账期id -->        <result column="PFDTtargetId" javaType="java.math.BigInteger" property="targetId"/>  <!-- 费用项id(常规类型对应t_fixed_fee_item_has_room的f_id) -->        <result column="PFDTtMrStandardRoomId" javaType="java.math.BigInteger" property="tMrStandardRoomId"/>  <!-- 房间收费标准ID（抄表 -->        <result column="PFDTmultiplierTimes" javaType="java.lang.Double" property="multiplierTimes"/>  <!-- 抄表倍率 -->        <result column="PFDTlastUnpaid" javaType="java.lang.Long" property="lastUnpaid"/>  <!-- 抄表往月欠费（单位 -->        <result column="PFDTbillMonthStart" javaType="java.lang.String" property="billMonthStart"/>  <!-- 物业费用起始时间（暂时只针对选择周期使用） -->        <result column="PFDTcreateBillMonth" javaType="java.lang.String" property="createBillMonth"/>  <!-- 费用账单已经生成到的月份（截止月份） -->        <result column="PFDTsys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="PFDTsys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="PFDTsys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="PFDTsys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="PFDTsys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="PFDTsys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="PFDTsys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
	</resultMap>
	<resultMap type="PropertyFeeDetailTemp" id="propertyFeeDetailTempBaseMap_AppendTable1">
        <id column="PFDT1id" javaType="java.math.BigInteger" property="id"/>  <!--  -->        <result column="PFDT1type" javaType="java.lang.Integer" property="type"/>  <!-- 费用项类型 -->        <result column="PFDT1name" javaType="java.lang.String" property="name"/>  <!-- 费用名称 -->        <result column="PFDT1mrName" javaType="java.lang.String" property="mrName"/>  <!-- 抄表一户多表表名称 -->        <result column="PFDT1price" javaType="java.lang.Double" property="price"/>  <!-- 费用合计(分) -->        <result column="PFDT1totalAmount" javaType="java.lang.Double" property="totalAmount"/>  <!-- 账单合计 -->        <result column="PFDT1signalPrice" javaType="java.lang.Double" property="signalPrice"/>  <!-- 单价(分) -->        <result column="PFDT1signalPriceStr" javaType="java.lang.String" property="signalPriceStr"/>  <!-- 单价串(抄表 -->        <result column="PFDT1priceUnitValue" javaType="java.lang.Long" property="priceUnitValue"/>  <!-- 计价单位取值(多少平方米/用量) -->        <result column="PFDT1nowValue" javaType="java.lang.Double" property="nowValue"/>  <!-- 本期读数（抄表） -->        <result column="PFDT1priorValue" javaType="java.lang.Double" property="priorValue"/>  <!-- 上期读取（抄表） -->        <result column="PFDT1tGbId" javaType="java.math.BigInteger" property="tGbId"/>  <!-- 小区id -->        <result column="PFDT1tRealRoomId" javaType="java.math.BigInteger" property="tRealRoomId"/>  <!-- 真实房间id -->        <result column="PFDT1tBillCycleId" javaType="java.math.BigInteger" property="tBillCycleId"/>  <!-- 账期id -->        <result column="PFDT1targetId" javaType="java.math.BigInteger" property="targetId"/>  <!-- 费用项id(常规类型对应t_fixed_fee_item_has_room的f_id) -->        <result column="PFDT1tMrStandardRoomId" javaType="java.math.BigInteger" property="tMrStandardRoomId"/>  <!-- 房间收费标准ID（抄表 -->        <result column="PFDT1multiplierTimes" javaType="java.lang.Double" property="multiplierTimes"/>  <!-- 抄表倍率 -->        <result column="PFDT1lastUnpaid" javaType="java.lang.Long" property="lastUnpaid"/>  <!-- 抄表往月欠费（单位 -->        <result column="PFDT1billMonthStart" javaType="java.lang.String" property="billMonthStart"/>  <!-- 物业费用起始时间（暂时只针对选择周期使用） -->        <result column="PFDT1createBillMonth" javaType="java.lang.String" property="createBillMonth"/>  <!-- 费用账单已经生成到的月份（截止月份） -->        <result column="PFDT1sys0AddTime" javaType="java.lang.String" property="sys0AddTime"/>  <!-- 新增时间 -->        <result column="PFDT1sys0UpdTime" javaType="java.lang.String" property="sys0UpdTime"/>  <!-- 更新时间 -->        <result column="PFDT1sys0DelTime" javaType="java.lang.String" property="sys0DelTime"/>  <!-- 删除时间 -->        <result column="PFDT1sys0AddUser" javaType="java.math.BigInteger" property="sys0AddUser"/>  <!-- 新增者 -->        <result column="PFDT1sys0UpdUser" javaType="java.math.BigInteger" property="sys0UpdUser"/>  <!-- 修改者 -->        <result column="PFDT1sys0DelUser" javaType="java.math.BigInteger" property="sys0DelUser"/>  <!-- 删除者 -->        <result column="PFDT1sys0DelState" javaType="java.lang.Integer" property="sys0DelState"/>  <!-- 记录状态 -->
	</resultMap>
	<!-- 公共sql提取  -->
	<sql id="queryHead">
		PFDT.f_id,PFDT.f_type,PFDT.f_name,PFDT.f_mr_name,PFDT.f_price,PFDT.f_total_amount,PFDT.f_signal_price,PFDT.f_signal_price_str,PFDT.f_price_unit_value,PFDT.f_now_value,PFDT.f_prior_value,PFDT.t_gb_id,PFDT.t_real_room_id,PFDT.t_bill_cycle_id,PFDT.f_target_id,PFDT.t_mr_standard_room_id,PFDT.f_multiplier_times,PFDT.f_last_unpaid,date_format(PFDT.f_bill_month_start,'%Y-%m-%d %T') as f_bill_month_start,date_format(PFDT.f_create_bill_month,'%Y-%m-%d %T') as f_create_bill_month
	</sql>
	<sql id="queryHead_AppendTable">
		PFDT.f_id as PFDTid,PFDT.f_type as PFDTtype,PFDT.f_name as PFDTname,PFDT.f_mr_name as PFDTmrName,PFDT.f_price as PFDTprice,PFDT.f_total_amount as PFDTtotalAmount,PFDT.f_signal_price as PFDTsignalPrice,PFDT.f_signal_price_str as PFDTsignalPriceStr,PFDT.f_price_unit_value as PFDTpriceUnitValue,PFDT.f_now_value as PFDTnowValue,PFDT.f_prior_value as PFDTpriorValue,PFDT.t_gb_id as PFDTtGbId,PFDT.t_real_room_id as PFDTtRealRoomId,PFDT.t_bill_cycle_id as PFDTtBillCycleId,PFDT.f_target_id as PFDTtargetId,PFDT.t_mr_standard_room_id as PFDTtMrStandardRoomId,PFDT.f_multiplier_times as PFDTmultiplierTimes,PFDT.f_last_unpaid as PFDTlastUnpaid,date_format(PFDT.f_bill_month_start,'%Y-%m-%d %T') as PFDTbillMonthStart,date_format(PFDT.f_create_bill_month,'%Y-%m-%d %T') as PFDTcreateBillMonth
	</sql>
	<sql id="queryHead_AppendTable1">
		PFDT1.f_id as PFDT1id,PFDT1.f_type as PFDT1type,PFDT1.f_name as PFDT1name,PFDT1.f_mr_name as PFDT1mrName,PFDT1.f_price as PFDT1price,PFDT1.f_total_amount as PFDT1totalAmount,PFDT1.f_signal_price as PFDT1signalPrice,PFDT1.f_signal_price_str as PFDT1signalPriceStr,PFDT1.f_price_unit_value as PFDT1priceUnitValue,PFDT1.f_now_value as PFDT1nowValue,PFDT1.f_prior_value as PFDT1priorValue,PFDT1.t_gb_id as PFDT1tGbId,PFDT1.t_real_room_id as PFDT1tRealRoomId,PFDT1.t_bill_cycle_id as PFDT1tBillCycleId,PFDT1.f_target_id as PFDT1targetId,PFDT1.t_mr_standard_room_id as PFDT1tMrStandardRoomId,PFDT1.f_multiplier_times as PFDT1multiplierTimes,PFDT1.f_last_unpaid as PFDT1lastUnpaid,date_format(PFDT1.f_bill_month_start,'%Y-%m-%d %T') as PFDT1billMonthStart,date_format(PFDT1.f_create_bill_month,'%Y-%m-%d %T') as PFDT1createBillMonth
	</sql>
	<sql id="querySql">
        <if test="id != null">  and (PFDT.f_id = #{id} ) </if>        <if test="type != null">  and (PFDT.f_type = #{type} ) </if>        <if test="name != null">  and (PFDT.f_name = #{name} ) </if>        <if test="mrName != null">  and (PFDT.f_mr_name = #{mrName} ) </if>        <if test="price != null">  and (PFDT.f_price = #{price} ) </if>        <if test="totalAmount != null">  and (PFDT.f_total_amount = #{totalAmount} ) </if>        <if test="signalPrice != null">  and (PFDT.f_signal_price = #{signalPrice} ) </if>        <if test="signalPriceStr != null">  and (PFDT.f_signal_price_str = #{signalPriceStr} ) </if>        <if test="priceUnitValue != null">  and (PFDT.f_price_unit_value = #{priceUnitValue} ) </if>        <if test="nowValue != null">  and (PFDT.f_now_value = #{nowValue} ) </if>        <if test="priorValue != null">  and (PFDT.f_prior_value = #{priorValue} ) </if>        <if test="tGbId != null">  and (PFDT.t_gb_id = #{tGbId} ) </if>        <if test="tRealRoomId != null">  and (PFDT.t_real_room_id = #{tRealRoomId} ) </if>        <if test="tBillCycleId != null">  and (PFDT.t_bill_cycle_id = #{tBillCycleId} ) </if>        <if test="targetId != null">  and (PFDT.f_target_id = #{targetId} ) </if>        <if test="tMrStandardRoomId != null">  and (PFDT.t_mr_standard_room_id = #{tMrStandardRoomId} ) </if>        <if test="multiplierTimes != null">  and (PFDT.f_multiplier_times = #{multiplierTimes} ) </if>        <if test="lastUnpaid != null">  and (PFDT.f_last_unpaid = #{lastUnpaid} ) </if>        <if test="billMonthStart != null and !billMonthStart.equals('')  ">  and (PFDT.f_bill_month_start = str_to_date(#{billMonthStart},'%Y-%m-%d %T') ) </if>        <if test="billMonthStart_START != null and !billMonthStart_START.equals('')  ">              <![CDATA[ and (PFDT.f_bill_month_start >= str_to_date(#{billMonthStart_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthStart_END != null and !billMonthStart_END.equals('')  ">            <![CDATA[ and (PFDT.f_bill_month_start <= str_to_date(#{billMonthStart_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="createBillMonth != null and !createBillMonth.equals('')  ">  and (PFDT.f_create_bill_month = str_to_date(#{createBillMonth},'%Y-%m-%d %T') ) </if>        <if test="createBillMonth_START != null and !createBillMonth_START.equals('')  ">              <![CDATA[ and (PFDT.f_create_bill_month >= str_to_date(#{createBillMonth_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="createBillMonth_END != null and !createBillMonth_END.equals('')  ">            <![CDATA[ and (PFDT.f_create_bill_month <= str_to_date(#{createBillMonth_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (PFDT.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (PFDT.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (PFDT.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (PFDT.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (PFDT.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (PFDT.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (PFDT.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (PFDT.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (PFDT.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null">  and (PFDT.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null">  and (PFDT.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null">  and (PFDT.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null">  and (PFDT.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null">  and (PFDT.f_sys0_del_state = 0 ) </if>
	</sql>
	<sql id="querySqlDim">
        <if test="id != null and !id.equals('')  ">  and (PFDT.f_id = #{id} ) </if>        <if test="type != null and !type.equals('')  ">  and (PFDT.f_type = #{type} ) </if>        <if test="name != null and !name.equals('')  ">  and (PFDT.f_name like CONCAT('%',#{name},'%') ) </if>        <if test="mrName != null and !mrName.equals('')  ">  and (PFDT.f_mr_name like CONCAT('%',#{mrName},'%') ) </if>        <if test="price != null and !price.equals('')  ">  and (PFDT.f_price = #{price} ) </if>        <if test="totalAmount != null and !totalAmount.equals('')  ">  and (PFDT.f_total_amount = #{totalAmount} ) </if>        <if test="signalPrice != null and !signalPrice.equals('')  ">  and (PFDT.f_signal_price = #{signalPrice} ) </if>        <if test="signalPriceStr != null and !signalPriceStr.equals('')  ">  and (PFDT.f_signal_price_str like CONCAT('%',#{signalPriceStr},'%') ) </if>        <if test="priceUnitValue != null and !priceUnitValue.equals('')  ">  and (PFDT.f_price_unit_value = #{priceUnitValue} ) </if>        <if test="nowValue != null and !nowValue.equals('')  ">  and (PFDT.f_now_value = #{nowValue} ) </if>        <if test="priorValue != null and !priorValue.equals('')  ">  and (PFDT.f_prior_value = #{priorValue} ) </if>        <if test="tGbId != null and !tGbId.equals('')  ">  and (PFDT.t_gb_id = #{tGbId} ) </if>        <if test="tRealRoomId != null and !tRealRoomId.equals('')  ">  and (PFDT.t_real_room_id = #{tRealRoomId} ) </if>        <if test="tBillCycleId != null and !tBillCycleId.equals('')  ">  and (PFDT.t_bill_cycle_id = #{tBillCycleId} ) </if>        <if test="targetId != null and !targetId.equals('')  ">  and (PFDT.f_target_id = #{targetId} ) </if>        <if test="tMrStandardRoomId != null and !tMrStandardRoomId.equals('')  ">  and (PFDT.t_mr_standard_room_id = #{tMrStandardRoomId} ) </if>        <if test="multiplierTimes != null and !multiplierTimes.equals('')  ">  and (PFDT.f_multiplier_times = #{multiplierTimes} ) </if>        <if test="lastUnpaid != null and !lastUnpaid.equals('')  ">  and (PFDT.f_last_unpaid = #{lastUnpaid} ) </if>        <if test="billMonthStart != null and !billMonthStart.equals('')  ">  and (PFDT.f_bill_month_start = str_to_date(#{billMonthStart},'%Y-%m-%d %T') ) </if>        <if test="billMonthStart_START != null and !billMonthStart_START.equals('')  ">              <![CDATA[ and (PFDT.f_bill_month_start >= str_to_date(#{billMonthStart_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="billMonthStart_END != null and !billMonthStart_END.equals('')  ">            <![CDATA[ and (PFDT.f_bill_month_start <= str_to_date(#{billMonthStart_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="createBillMonth != null and !createBillMonth.equals('')  ">  and (PFDT.f_create_bill_month = str_to_date(#{createBillMonth},'%Y-%m-%d %T') ) </if>        <if test="createBillMonth_START != null and !createBillMonth_START.equals('')  ">              <![CDATA[ and (PFDT.f_create_bill_month >= str_to_date(#{createBillMonth_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="createBillMonth_END != null and !createBillMonth_END.equals('')  ">            <![CDATA[ and (PFDT.f_create_bill_month <= str_to_date(#{createBillMonth_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime != null and !sys0AddTime.equals('')  ">  and (PFDT.f_sys0_add_time = str_to_date(#{sys0AddTime},'%Y-%m-%d %T') ) </if>        <if test="sys0AddTime_START != null and !sys0AddTime_START.equals('')  ">              <![CDATA[ and (PFDT.f_sys0_add_time >= str_to_date(#{sys0AddTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddTime_END != null and !sys0AddTime_END.equals('')  ">            <![CDATA[ and (PFDT.f_sys0_add_time <= str_to_date(#{sys0AddTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime != null and !sys0UpdTime.equals('')  ">  and (PFDT.f_sys0_upd_time = str_to_date(#{sys0UpdTime},'%Y-%m-%d %T') ) </if>        <if test="sys0UpdTime_START != null and !sys0UpdTime_START.equals('')  ">              <![CDATA[ and (PFDT.f_sys0_upd_time >= str_to_date(#{sys0UpdTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0UpdTime_END != null and !sys0UpdTime_END.equals('')  ">            <![CDATA[ and (PFDT.f_sys0_upd_time <= str_to_date(#{sys0UpdTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime != null and !sys0DelTime.equals('')  ">  and (PFDT.f_sys0_del_time = str_to_date(#{sys0DelTime},'%Y-%m-%d %T') ) </if>        <if test="sys0DelTime_START != null and !sys0DelTime_START.equals('')  ">              <![CDATA[ and (PFDT.f_sys0_del_time >= str_to_date(#{sys0DelTime_START},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0DelTime_END != null and !sys0DelTime_END.equals('')  ">            <![CDATA[ and (PFDT.f_sys0_del_time <= str_to_date(#{sys0DelTime_END},'%Y-%m-%d %T') ) ]]>        </if>        <if test="sys0AddUser != null and !sys0AddUser.equals('')  ">  and (PFDT.f_sys0_add_user = #{sys0AddUser} ) </if>        <if test="sys0UpdUser != null and !sys0UpdUser.equals('')  ">  and (PFDT.f_sys0_upd_user = #{sys0UpdUser} ) </if>        <if test="sys0DelUser != null and !sys0DelUser.equals('')  ">  and (PFDT.f_sys0_del_user = #{sys0DelUser} ) </if>        <if test="sys0DelState != null and !sys0DelState.equals('')  ">  and (PFDT.f_sys0_del_state = #{sys0DelState} ) </if>        <if test="sys0DelState == null or sys0DelState == '' ">  and (PFDT.f_sys0_del_state = 0 ) </if>
	</sql>
	<sql id="dimCheckSql">
		<if test="_QUERY_TYPE_IF_DIM == true"><include refid="propertyFeeDetailTempBase.querySqlDim"/></if>
		<if test="_QUERY_TYPE_IF_DIM == null or  _QUERY_TYPE_IF_DIM == '' or  _QUERY_TYPE_IF_DIM == false or _QUERY_TYPE_IF_DIM != true"><include refid="propertyFeeDetailTempBase.querySql"/></if><!-- 默认精确查询 -->
		<!-- <if test="_QUERY_TYPE_IF_DIM != true"><include refid="propertyFeeDetailTempBase.querySql"/></if> --><!-- 默认精确查询 -->
	</sql>
	<!-- 各种查询附加的查询条件 -->
	<sql id="busiQueryCondition">
	    <include refid="propertyFeeDetailTempBase.busiQueryCount"/>
	</sql>
	<!-- 查询记录数附加的查询条件 -->
	<sql id="busiQueryCount">
	     FROM t_property_fee_detail_temp PFDT    	 WHERE 1=1
	</sql>
	
	<!-- 根据条件查询(物业收费项费用明细临时表（生成账单使用）)信息。 -->
	<sql id="select_propertyFeeDetailTemp">
		SELECT <include refid="propertyFeeDetailTempBase.queryHead"/>
		<include refid="propertyFeeDetailTempBase.busiQueryCondition"/>
		<include refid="propertyFeeDetailTempBase.dimCheckSql"/>
		ORDER BY PFDT.f_id DESC
	</sql>
	<select id="select_propertyFeeDetailTemp" parameterType="java.util.Map" resultMap="propertyFeeDetailTempBase.propertyFeeDetailTempExtendMap">
		<include refid="propertyFeeDetailTempBase.select_propertyFeeDetailTemp"/>
	</select>
	
	<!-- 根据条件分页查询(物业收费项费用明细临时表（生成账单使用）)信息  -->
	<sql id="select_propertyFeeDetailTemp_withPage">
		SELECT <include refid="propertyFeeDetailTempBase.queryHead"/>
		<include refid="propertyFeeDetailTempBase.busiQueryCondition"/>
		<include refid="propertyFeeDetailTempBase.dimCheckSql"/>
		ORDER BY f_id DESC
		<![CDATA[ LIMIT #{_begin},#{_length} ]]>
	</sql>
	<select id="select_propertyFeeDetailTemp_withPage" resultMap="propertyFeeDetailTempBase.propertyFeeDetailTempExtendMap" parameterType="java.util.Map">
		<include refid="propertyFeeDetailTempBase.select_propertyFeeDetailTemp_withPage"/>
	</select>

	<!-- 根据序列号查询某个(物业收费项费用明细临时表（生成账单使用）)信息。 -->
	<sql id="select_propertyFeeDetailTemp_bySeqId">
		SELECT <include refid="propertyFeeDetailTempBase.queryHead"/>
		<include refid="propertyFeeDetailTempBase.busiQueryCondition"/>
		 and PFDT.f_id = #{_parameter}
	</sql>
	<select id="select_propertyFeeDetailTemp_bySeqId" parameterType="java.math.BigInteger" resultMap="propertyFeeDetailTempBase.propertyFeeDetailTempBaseMap">
		<include refid="propertyFeeDetailTempBase.select_propertyFeeDetailTemp_bySeqId"/>
	</select>
	
	<!-- 根据条件查询满足条件的(物业收费项费用明细临时表（生成账单使用）)记录数  -->
	<sql id="select_propertyFeeDetailTemp_count">
		SELECT COUNT(*)
		<include refid="propertyFeeDetailTempBase.busiQueryCount"/>
		<include refid="propertyFeeDetailTempBase.dimCheckSql"/>
	</sql>
	<select id="select_propertyFeeDetailTemp_count" resultType="java.lang.Integer">
		<include refid="propertyFeeDetailTempBase.select_propertyFeeDetailTemp_count"/>
	</select>
	
	 <!-- 往(物业收费项费用明细临时表（生成账单使用）)新增一条记录。 -->
	 <sql id="insert_propertyFeeDetailTemp">
		INSERT INTO t_property_fee_detail_temp 
		(f_id,f_type,f_name,f_mr_name,f_price,f_total_amount,f_signal_price,f_signal_price_str,f_price_unit_value,f_now_value,f_prior_value,t_gb_id,t_real_room_id,t_bill_cycle_id,f_target_id,t_mr_standard_room_id,f_multiplier_times,f_last_unpaid,f_bill_month_start,f_create_bill_month,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state) VALUES 
		(#{id},#{type},#{name,jdbcType=VARCHAR},#{mrName,jdbcType=VARCHAR},#{price},#{totalAmount},#{signalPrice},#{signalPriceStr,jdbcType=VARCHAR},#{priceUnitValue},#{nowValue},#{priorValue},#{tGbId},#{tRealRoomId},#{tBillCycleId},#{targetId},#{tMrStandardRoomId},#{multiplierTimes},#{lastUnpaid},str_to_date(#{billMonthStart,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{createBillMonth,jdbcType=DATE},'%Y-%m-%d %T'),sysdate(),str_to_date(#{sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{sys0AddUser},#{sys0UpdUser},#{sys0DelUser},0)
	 </sql>
    <insert id="insert_propertyFeeDetailTemp" parameterType="PropertyFeeDetailTemp">
		<include refid="propertyFeeDetailTempBase.insert_propertyFeeDetailTemp"/>
    </insert>
    
	<!-- 批量新增(物业收费项费用明细临时表（生成账单使用）)信息 -->
    <insert id="insert_propertyFeeDetailTemp_Batch" parameterType="java.util.List">
    	INSERT INTO t_property_fee_detail_temp 
		(f_id,f_type,f_name,f_mr_name,f_price,f_total_amount,f_signal_price,f_signal_price_str,f_price_unit_value,f_now_value,f_prior_value,t_gb_id,t_real_room_id,t_bill_cycle_id,f_target_id,t_mr_standard_room_id,f_multiplier_times,f_last_unpaid,f_bill_month_start,f_create_bill_month,f_sys0_add_time,f_sys0_upd_time,f_sys0_del_time,f_sys0_add_user,f_sys0_upd_user,f_sys0_del_user,f_sys0_del_state) VALUES  
		<foreach item="item" collection="list"  separator=","><!-- open="("  close=")" -->
		(#{item.id},#{item.type},#{item.name,jdbcType=VARCHAR},#{item.mrName,jdbcType=VARCHAR},#{item.price},#{item.totalAmount},#{item.signalPrice},#{item.signalPriceStr,jdbcType=VARCHAR},#{item.priceUnitValue},#{item.nowValue},#{item.priorValue},#{item.tGbId},#{item.tRealRoomId},#{item.tBillCycleId},#{item.targetId},#{item.tMrStandardRoomId},#{item.multiplierTimes},#{item.lastUnpaid},str_to_date(#{item.billMonthStart,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.createBillMonth,jdbcType=DATE},'%Y-%m-%d %T'),sysdate(),str_to_date(#{item.sys0UpdTime,jdbcType=DATE},'%Y-%m-%d %T'),str_to_date(#{item.sys0DelTime,jdbcType=DATE},'%Y-%m-%d %T'),#{item.sys0AddUser},#{item.sys0UpdUser},#{item.sys0DelUser},0)
		</foreach>
    </insert>
    
    <!-- 更新(物业收费项费用明细临时表（生成账单使用）)信息。 -->
    <sql id="update_propertyFeeDetailTemp">
		UPDATE t_property_fee_detail_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="type != null and !type.equals('') "> ,f_type=#{type}</if> 		<if test="name != null and !name.equals('') "> ,f_name=#{name}</if> 		<if test="mrName != null and !mrName.equals('') "> ,f_mr_name=#{mrName}</if> 		<if test="price != null and !price.equals('') "> ,f_price=#{price}</if> 		<if test="totalAmount != null and !totalAmount.equals('') "> ,f_total_amount=#{totalAmount}</if> 		<if test="signalPrice != null and !signalPrice.equals('') "> ,f_signal_price=#{signalPrice}</if> 		<if test="signalPriceStr != null and !signalPriceStr.equals('') "> ,f_signal_price_str=#{signalPriceStr}</if> 		<if test="priceUnitValue != null and !priceUnitValue.equals('') "> ,f_price_unit_value=#{priceUnitValue}</if> 		<if test="nowValue != null and !nowValue.equals('') "> ,f_now_value=#{nowValue}</if> 		<if test="priorValue != null and !priorValue.equals('') "> ,f_prior_value=#{priorValue}</if> 		<if test="tGbId != null and !tGbId.equals('') "> ,t_gb_id=#{tGbId}</if> 		<if test="tRealRoomId != null and !tRealRoomId.equals('') "> ,t_real_room_id=#{tRealRoomId}</if> 		<if test="tBillCycleId != null and !tBillCycleId.equals('') "> ,t_bill_cycle_id=#{tBillCycleId}</if> 		<if test="targetId != null and !targetId.equals('') "> ,f_target_id=#{targetId}</if> 		<if test="tMrStandardRoomId != null and !tMrStandardRoomId.equals('') "> ,t_mr_standard_room_id=#{tMrStandardRoomId}</if> 		<if test="multiplierTimes != null and !multiplierTimes.equals('') "> ,f_multiplier_times=#{multiplierTimes}</if> 		<if test="lastUnpaid != null and !lastUnpaid.equals('') "> ,f_last_unpaid=#{lastUnpaid}</if> 		<if test="billMonthStart != null and !billMonthStart.equals('') "> ,f_bill_month_start=str_to_date(#{billMonthStart},'%Y-%m-%d %T')</if> 		<if test="createBillMonth != null and !createBillMonth.equals('') "> ,f_create_bill_month=str_to_date(#{createBillMonth},'%Y-%m-%d %T')</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('') "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('') "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime == null or sys0UpdTime.equals('')  "> ,f_sys0_upd_time= sysdate() </if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('') "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('') "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('') "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('') "> ,f_sys0_del_user=#{sys0DelUser}</if> 		<if test="sys0DelState != null and !sys0DelState.equals('') "> ,f_sys0_del_state=#{sys0DelState}</if>		</trim>		WHERE f_id=#{id}
    </sql>
	<update id="update_propertyFeeDetailTemp" parameterType="PropertyFeeDetailTemp">
		<include refid="propertyFeeDetailTempBase.update_propertyFeeDetailTemp"/>
    </update>
    
    <!-- 批量更新(物业收费项费用明细临时表（生成账单使用）)信息。 -->
    <update id="update_propertyFeeDetailTemp_Batch" parameterType="java.util.List">
    	<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_property_fee_detail_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="item.type != null and !item.type.equals('')  "> ,f_type=#{item.type}</if> 		<if test="item.name != null and !item.name.equals('')  "> ,f_name=#{item.name}</if> 		<if test="item.mrName != null and !item.mrName.equals('')  "> ,f_mr_name=#{item.mrName}</if> 		<if test="item.price != null and !item.price.equals('')  "> ,f_price=#{item.price}</if> 		<if test="item.totalAmount != null and !item.totalAmount.equals('')  "> ,f_total_amount=#{item.totalAmount}</if> 		<if test="item.signalPrice != null and !item.signalPrice.equals('')  "> ,f_signal_price=#{item.signalPrice}</if> 		<if test="item.signalPriceStr != null and !item.signalPriceStr.equals('')  "> ,f_signal_price_str=#{item.signalPriceStr}</if> 		<if test="item.priceUnitValue != null and !item.priceUnitValue.equals('')  "> ,f_price_unit_value=#{item.priceUnitValue}</if> 		<if test="item.nowValue != null and !item.nowValue.equals('')  "> ,f_now_value=#{item.nowValue}</if> 		<if test="item.priorValue != null and !item.priorValue.equals('')  "> ,f_prior_value=#{item.priorValue}</if> 		<if test="item.tGbId != null and !item.tGbId.equals('')  "> ,t_gb_id=#{item.tGbId}</if> 		<if test="item.tRealRoomId != null and !item.tRealRoomId.equals('')  "> ,t_real_room_id=#{item.tRealRoomId}</if> 		<if test="item.tBillCycleId != null and !item.tBillCycleId.equals('')  "> ,t_bill_cycle_id=#{item.tBillCycleId}</if> 		<if test="item.targetId != null and !item.targetId.equals('')  "> ,f_target_id=#{item.targetId}</if> 		<if test="item.tMrStandardRoomId != null and !item.tMrStandardRoomId.equals('')  "> ,t_mr_standard_room_id=#{item.tMrStandardRoomId}</if> 		<if test="item.multiplierTimes != null and !item.multiplierTimes.equals('')  "> ,f_multiplier_times=#{item.multiplierTimes}</if> 		<if test="item.lastUnpaid != null and !item.lastUnpaid.equals('')  "> ,f_last_unpaid=#{item.lastUnpaid}</if> 		<if test="item.billMonthStart != null and !item.billMonthStart.equals('')  "> ,f_bill_month_start=str_to_date(#{item.billMonthStart},'%Y-%m-%d %T')</if> 		<if test="item.createBillMonth != null and !item.createBillMonth.equals('')  "> ,f_create_bill_month=str_to_date(#{item.createBillMonth},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime == null or item.sys0UpdTime == '' "> ,f_sys0_upd_time= sysdate() </if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		<if test="item.sys0DelState != null and !item.sys0DelState.equals('')  "> ,f_sys0_del_state=#{item.sys0DelState}</if>		</trim>		WHERE f_id=#{item.id}
    	</foreach>
    </update>

   <!-- 根据序列号删除(物业收费项费用明细临时表（生成账单使用）)信息_逻辑删除。 -->
    <sql id="delete_propertyFeeDetailTemp_Logic">
		UPDATE t_property_fee_detail_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="type != null and !type.equals('')  "> ,f_type=#{type}</if> 		<if test="name != null and !name.equals('')  "> ,f_name=#{name}</if> 		<if test="mrName != null and !mrName.equals('')  "> ,f_mr_name=#{mrName}</if> 		<if test="price != null and !price.equals('')  "> ,f_price=#{price}</if> 		<if test="totalAmount != null and !totalAmount.equals('')  "> ,f_total_amount=#{totalAmount}</if> 		<if test="signalPrice != null and !signalPrice.equals('')  "> ,f_signal_price=#{signalPrice}</if> 		<if test="signalPriceStr != null and !signalPriceStr.equals('')  "> ,f_signal_price_str=#{signalPriceStr}</if> 		<if test="priceUnitValue != null and !priceUnitValue.equals('')  "> ,f_price_unit_value=#{priceUnitValue}</if> 		<if test="nowValue != null and !nowValue.equals('')  "> ,f_now_value=#{nowValue}</if> 		<if test="priorValue != null and !priorValue.equals('')  "> ,f_prior_value=#{priorValue}</if> 		<if test="tGbId != null and !tGbId.equals('')  "> ,t_gb_id=#{tGbId}</if> 		<if test="tRealRoomId != null and !tRealRoomId.equals('')  "> ,t_real_room_id=#{tRealRoomId}</if> 		<if test="tBillCycleId != null and !tBillCycleId.equals('')  "> ,t_bill_cycle_id=#{tBillCycleId}</if> 		<if test="targetId != null and !targetId.equals('')  "> ,f_target_id=#{targetId}</if> 		<if test="tMrStandardRoomId != null and !tMrStandardRoomId.equals('')  "> ,t_mr_standard_room_id=#{tMrStandardRoomId}</if> 		<if test="multiplierTimes != null and !multiplierTimes.equals('')  "> ,f_multiplier_times=#{multiplierTimes}</if> 		<if test="lastUnpaid != null and !lastUnpaid.equals('')  "> ,f_last_unpaid=#{lastUnpaid}</if> 		<if test="billMonthStart != null and !billMonthStart.equals('')  "> ,f_bill_month_start=str_to_date(#{billMonthStart},'%Y-%m-%d %T')</if> 		<if test="createBillMonth != null and !createBillMonth.equals('')  "> ,f_create_bill_month=str_to_date(#{createBillMonth},'%Y-%m-%d %T')</if> 		<if test="sys0AddTime != null and !sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="sys0UpdTime != null and !sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime != null and !sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="sys0DelTime == null or sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="sys0AddUser != null and !sys0AddUser.equals('')  "> ,f_sys0_add_user=#{sys0AddUser}</if> 		<if test="sys0UpdUser != null and !sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{sys0UpdUser}</if> 		<if test="sys0DelUser != null and !sys0DelUser.equals('')  "> ,f_sys0_del_user=#{sys0DelUser}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{id}
    </sql>
    <update id="delete_propertyFeeDetailTemp_Logic" parameterType="PropertyFeeDetailTemp">
		<include refid="propertyFeeDetailTempBase.delete_propertyFeeDetailTemp_Logic"/>
    </update>
    
    <!-- 批量删除(物业收费项费用明细临时表（生成账单使用）)信息_逻辑删除 -->
    <update id="delete_propertyFeeDetailTemp_Logic_Batch" parameterType="java.util.List">
		<foreach collection="list" item="item" index="index" separator=";" open="" close="">
		UPDATE t_property_fee_detail_temp		<trim prefix="SET" prefixOverrides=","> 		<if test="item.type != null and !item.type.equals('')  "> ,f_type=#{item.type}</if> 		<if test="item.name != null and !item.name.equals('')  "> ,f_name=#{item.name}</if> 		<if test="item.mrName != null and !item.mrName.equals('')  "> ,f_mr_name=#{item.mrName}</if> 		<if test="item.price != null and !item.price.equals('')  "> ,f_price=#{item.price}</if> 		<if test="item.totalAmount != null and !item.totalAmount.equals('')  "> ,f_total_amount=#{item.totalAmount}</if> 		<if test="item.signalPrice != null and !item.signalPrice.equals('')  "> ,f_signal_price=#{item.signalPrice}</if> 		<if test="item.signalPriceStr != null and !item.signalPriceStr.equals('')  "> ,f_signal_price_str=#{item.signalPriceStr}</if> 		<if test="item.priceUnitValue != null and !item.priceUnitValue.equals('')  "> ,f_price_unit_value=#{item.priceUnitValue}</if> 		<if test="item.nowValue != null and !item.nowValue.equals('')  "> ,f_now_value=#{item.nowValue}</if> 		<if test="item.priorValue != null and !item.priorValue.equals('')  "> ,f_prior_value=#{item.priorValue}</if> 		<if test="item.tGbId != null and !item.tGbId.equals('')  "> ,t_gb_id=#{item.tGbId}</if> 		<if test="item.tRealRoomId != null and !item.tRealRoomId.equals('')  "> ,t_real_room_id=#{item.tRealRoomId}</if> 		<if test="item.tBillCycleId != null and !item.tBillCycleId.equals('')  "> ,t_bill_cycle_id=#{item.tBillCycleId}</if> 		<if test="item.targetId != null and !item.targetId.equals('')  "> ,f_target_id=#{item.targetId}</if> 		<if test="item.tMrStandardRoomId != null and !item.tMrStandardRoomId.equals('')  "> ,t_mr_standard_room_id=#{item.tMrStandardRoomId}</if> 		<if test="item.multiplierTimes != null and !item.multiplierTimes.equals('')  "> ,f_multiplier_times=#{item.multiplierTimes}</if> 		<if test="item.lastUnpaid != null and !item.lastUnpaid.equals('')  "> ,f_last_unpaid=#{item.lastUnpaid}</if> 		<if test="item.billMonthStart != null and !item.billMonthStart.equals('')  "> ,f_bill_month_start=str_to_date(#{item.billMonthStart},'%Y-%m-%d %T')</if> 		<if test="item.createBillMonth != null and !item.createBillMonth.equals('')  "> ,f_create_bill_month=str_to_date(#{item.createBillMonth},'%Y-%m-%d %T')</if> 		<if test="item.sys0AddTime != null and !item.sys0AddTime.equals('')  "> ,f_sys0_add_time=str_to_date(#{item.sys0AddTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0UpdTime != null and !item.sys0UpdTime.equals('')  "> ,f_sys0_upd_time=str_to_date(#{item.sys0UpdTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime != null and !item.sys0DelTime.equals('')  "> ,f_sys0_del_time=str_to_date(#{item.sys0DelTime},'%Y-%m-%d %T')</if> 		<if test="item.sys0DelTime == null or item.sys0DelTime == '' "> ,f_sys0_del_time= sysdate() </if> 		<if test="item.sys0AddUser != null and !item.sys0AddUser.equals('')  "> ,f_sys0_add_user=#{item.sys0AddUser}</if> 		<if test="item.sys0UpdUser != null and !item.sys0UpdUser.equals('')  "> ,f_sys0_upd_user=#{item.sys0UpdUser}</if> 		<if test="item.sys0DelUser != null and !item.sys0DelUser.equals('')  "> ,f_sys0_del_user=#{item.sys0DelUser}</if> 		,f_sys0_del_state= 1 		</trim>		WHERE 1=1  		AND f_sys0_del_state = 0 		AND f_id=#{item.id}
    	</foreach>
    </update>
    
    <!-- 根据序列号删除(物业收费项费用明细临时表（生成账单使用）)信息。 -->
    <sql id="delete_propertyFeeDetailTemp">
		DELETE FROM t_property_fee_detail_temp WHERE f_id=#{_parameter}
    </sql>
    <delete id="delete_propertyFeeDetailTemp" parameterType="java.lang.String">
		<include refid="propertyFeeDetailTempBase.delete_propertyFeeDetailTemp"/>
    </delete>
    
    <!-- 根据序列号批量删除(物业收费项费用明细临时表（生成账单使用）)信息。 -->
    <delete id="delete_propertyFeeDetailTemp_Batch" parameterType="java.util.List">
		DELETE FROM t_property_fee_detail_temp WHERE 1=1 AND f_id IN 
		<foreach item="item" collection="list" open="(" separator="," close=")">
			#{item}
		</foreach>
    </delete>
    
</mapper>
