package com.cnfantasia.server.domainbase.userHasTRoom.entity;/* import java.io.Serializable;*/import java.math.BigInteger;import java.lang.Integer;import java.lang.Long; import com.cnfantasia.server.domain.pub.BaseEntity;/** * 描述:(用户门牌关系) 实体类 *  * @version 1.00 * @author null *  *//*public class UserHasTRoom implements Serializable{*/public class UserHasTRoom extends BaseEntity{	private static final long serialVersionUID = 1L;	/**  */	private BigInteger id;	/** 门牌 */	private BigInteger tRoomFId;	/** 用户 */	private BigInteger tUserFId;	/** 邀请人 */	private BigInteger inviterId;	/** 管理员标识 */	private Integer isAdmin;	/** 门牌申请加入状态 */	private Integer applyStatus;	/** 物业管理费金额 */	private Long planPropertyAmount;	/** 粮票优惠开启状态 */	private Integer planSwitchStatus;	/** 业主信息验证 */	private Integer isConfirmProprietor;	/** 被绑定的主用户Id */	private BigInteger bindUserId;	/** 主用户Id, */	private BigInteger finalUserId;	public UserHasTRoom(){	}	public UserHasTRoom(UserHasTRoom arg){		this.id = arg.getId();		this.tRoomFId = arg.gettRoomFId();		this.tUserFId = arg.gettUserFId();		this.inviterId = arg.getInviterId();		this.isAdmin = arg.getIsAdmin();		this.applyStatus = arg.getApplyStatus();		this.planPropertyAmount = arg.getPlanPropertyAmount();		this.planSwitchStatus = arg.getPlanSwitchStatus();		this.isConfirmProprietor = arg.getIsConfirmProprietor();		this.sys0AddTime = arg.getSys0AddTime();		this.sys0UpdTime = arg.getSys0UpdTime();		this.sys0DelTime = arg.getSys0DelTime();		this.sys0AddUser = arg.getSys0AddUser();		this.sys0UpdUser = arg.getSys0UpdUser();		this.sys0DelUser = arg.getSys0DelUser();		this.sys0DelState = arg.getSys0DelState();		this.bindUserId = arg.getBindUserId();		this.finalUserId = arg.getFinalUserId();	}	/**	 * 	 * @param id 	 * @param tRoomFId 门牌	 * @param tUserFId 用户	 * @param inviterId 邀请人	 * @param isAdmin 管理员标识	 * @param applyStatus 门牌申请加入状态	 * @param planPropertyAmount 物业管理费金额	 * @param planSwitchStatus 粮票优惠开启状态	 * @param isConfirmProprietor 业主信息验证	 * @param sys0AddTime 新增时间	 * @param sys0UpdTime 更新时间	 * @param sys0DelTime 删除时间	 * @param sys0AddUser 新增者	 * @param sys0UpdUser 修改者	 * @param sys0DelUser 删除者	 * @param sys0DelState 记录状态	 * @param bindUserId 被绑定的主用户Id	 * @param finalUserId 主用户Id,	 */	public UserHasTRoom(BigInteger id,BigInteger tRoomFId,BigInteger tUserFId,BigInteger inviterId,Integer isAdmin,Integer applyStatus,Long planPropertyAmount,Integer planSwitchStatus,Integer isConfirmProprietor,String sys0AddTime,String sys0UpdTime,String sys0DelTime,BigInteger sys0AddUser,BigInteger sys0UpdUser,BigInteger sys0DelUser,Integer sys0DelState,BigInteger bindUserId,BigInteger finalUserId){		this.id = id;		this.tRoomFId = tRoomFId;		this.tUserFId = tUserFId;		this.inviterId = inviterId;		this.isAdmin = isAdmin;		this.applyStatus = applyStatus;		this.planPropertyAmount = planPropertyAmount;		this.planSwitchStatus = planSwitchStatus;		this.isConfirmProprietor = isConfirmProprietor;		this.sys0AddTime = sys0AddTime;		this.sys0UpdTime = sys0UpdTime;		this.sys0DelTime = sys0DelTime;		this.sys0AddUser = sys0AddUser;		this.sys0UpdUser = sys0UpdUser;		this.sys0DelUser = sys0DelUser;		this.sys0DelState = sys0DelState;		this.bindUserId = bindUserId;		this.finalUserId = finalUserId;	}	@Override	public String toString() {		StringBuffer sbf = new StringBuffer();		sbf.append("id=").append(id).append(";");		sbf.append("tRoomFId=").append(tRoomFId).append(";");		sbf.append("tUserFId=").append(tUserFId).append(";");		sbf.append("inviterId=").append(inviterId).append(";");		sbf.append("isAdmin=").append(isAdmin).append(";");		sbf.append("applyStatus=").append(applyStatus).append(";");		sbf.append("planPropertyAmount=").append(planPropertyAmount).append(";");		sbf.append("planSwitchStatus=").append(planSwitchStatus).append(";");		sbf.append("isConfirmProprietor=").append(isConfirmProprietor).append(";");		sbf.append("sys0AddTime=").append(sys0AddTime).append(";");		sbf.append("sys0UpdTime=").append(sys0UpdTime).append(";");		sbf.append("sys0DelTime=").append(sys0DelTime).append(";");		sbf.append("sys0AddUser=").append(sys0AddUser).append(";");		sbf.append("sys0UpdUser=").append(sys0UpdUser).append(";");		sbf.append("sys0DelUser=").append(sys0DelUser).append(";");		sbf.append("sys0DelState=").append(sys0DelState).append(";");		sbf.append("bindUserId=").append(bindUserId).append(";");		sbf.append("finalUserId=").append(finalUserId).append(";");		return sbf.toString();	}		public BigInteger getId() {		return id;	}	public void setId(BigInteger id) {		this.id = id;	}	public BigInteger gettRoomFId() {		return tRoomFId;	}	public void settRoomFId(BigInteger tRoomFId) {		this.tRoomFId = tRoomFId;	}	public BigInteger gettUserFId() {		return tUserFId;	}	public void settUserFId(BigInteger tUserFId) {		this.tUserFId = tUserFId;	}	public BigInteger getInviterId() {		return inviterId;	}	public void setInviterId(BigInteger inviterId) {		this.inviterId = inviterId;	}	public Integer getIsAdmin() {		return isAdmin;	}	public void setIsAdmin(Integer isAdmin) {		this.isAdmin = isAdmin;	}	public Integer getApplyStatus() {		return applyStatus;	}	public void setApplyStatus(Integer applyStatus) {		this.applyStatus = applyStatus;	}	public Long getPlanPropertyAmount() {		return planPropertyAmount;	}	public void setPlanPropertyAmount(Long planPropertyAmount) {		this.planPropertyAmount = planPropertyAmount;	}	public Integer getPlanSwitchStatus() {		return planSwitchStatus;	}	public void setPlanSwitchStatus(Integer planSwitchStatus) {		this.planSwitchStatus = planSwitchStatus;	}	public Integer getIsConfirmProprietor() {		return isConfirmProprietor;	}	public void setIsConfirmProprietor(Integer isConfirmProprietor) {		this.isConfirmProprietor = isConfirmProprietor;	}	public BigInteger getBindUserId() {		return bindUserId;	}	public void setBindUserId(BigInteger bindUserId) {		this.bindUserId = bindUserId;	}	public BigInteger getFinalUserId() {		return finalUserId;	}	public void setFinalUserId(BigInteger finalUserId) {		this.finalUserId = finalUserId;	}		@Override	public int hashCode() {		final int prime = 31;		int result = 1;		result = prime * result + ((id == null) ? 0 : id.hashCode());		return result;	}		@Override	public boolean equals(Object obj) {		if (this == obj)			return true;		if (obj == null)			return false;		if (getClass() != obj.getClass())			return false;		UserHasTRoom other = (UserHasTRoom) obj;		if (id == null) {			if (other.id != null)				return false;		} else if (!id.equals(other.id))			return false;		return true;	}	}