package com.cnfantasia.server.domainbase.ebuyProductFightGroups.entity;/* import java.io.Serializable;*/import java.math.BigInteger;import java.lang.String;import java.lang.Long;import java.lang.Integer; import com.cnfantasia.server.domain.pub.BaseEntity;/** * 描述:(拼购商品规则表) 实体类 *  * @version 1.00 * @author null *  *//*public class EbuyProductFightGroups implements Serializable{*/public class EbuyProductFightGroups extends BaseEntity{	private static final long serialVersionUID = 1L;	/**  */	private BigInteger id;	/** 拼购商品Id */	private BigInteger tEbuyProductFId;	/** 拼购商品的对应服务范围id */	private BigInteger tEbuyFightSupplyMerchantFId;	/** 商品推荐归类 */	private String pointType;	/** 折扣后价格 */	private Long priceDiscount;	/** 价格 */	private Long price;	/** 拼购人数 */	private BigInteger fightNum;	/** 拼购状态 */	private Long fightStatus;	/** 拼购商品的库存 */	private Long leftCount;	/** 开始时间 */	private String startDate;	/** 到期时间 */	private String expireDate;	public EbuyProductFightGroups(){	}	public EbuyProductFightGroups(EbuyProductFightGroups arg){		this.id = arg.getId();		this.tEbuyProductFId = arg.gettEbuyProductFId();		this.tEbuyFightSupplyMerchantFId = arg.gettEbuyFightSupplyMerchantFId();		this.pointType = arg.getPointType();		this.priceDiscount = arg.getPriceDiscount();		this.price = arg.getPrice();		this.fightNum = arg.getFightNum();		this.fightStatus = arg.getFightStatus();		this.leftCount = arg.getLeftCount();		this.startDate = arg.getStartDate();		this.expireDate = arg.getExpireDate();		this.sys0AddTime = arg.getSys0AddTime();		this.sys0UpdTime = arg.getSys0UpdTime();		this.sys0DelTime = arg.getSys0DelTime();		this.sys0AddUser = arg.getSys0AddUser();		this.sys0UpdUser = arg.getSys0UpdUser();		this.sys0DelUser = arg.getSys0DelUser();		this.sys0DelState = arg.getSys0DelState();	}	/**	 * 	 * @param id 	 * @param tEbuyProductFId 拼购商品Id	 * @param tEbuyFightSupplyMerchantFId 拼购商品的对应服务范围id	 * @param pointType 商品推荐归类	 * @param priceDiscount 折扣后价格	 * @param price 价格	 * @param fightNum 拼购人数	 * @param fightStatus 拼购状态	 * @param leftCount 拼购商品的库存	 * @param expireDate 到期时间	 * @param sys0AddTime 新增时间	 * @param sys0UpdTime 更新时间	 * @param sys0DelTime 删除时间	 * @param sys0AddUser 新增者	 * @param sys0UpdUser 修改者	 * @param sys0DelUser 删除者	 * @param sys0DelState 记录状态	 */	public EbuyProductFightGroups(BigInteger id,BigInteger tEbuyProductFId,BigInteger tEbuyFightSupplyMerchantFId,String pointType,Long priceDiscount,Long price,BigInteger fightNum,Long fightStatus,Long leftCount,String expireDate,String sys0AddTime,String sys0UpdTime,String sys0DelTime,BigInteger sys0AddUser,BigInteger sys0UpdUser,BigInteger sys0DelUser,Integer sys0DelState){		this.id = id;		this.tEbuyProductFId = tEbuyProductFId;		this.tEbuyFightSupplyMerchantFId = tEbuyFightSupplyMerchantFId;		this.pointType = pointType;		this.priceDiscount = priceDiscount;		this.price = price;		this.fightNum = fightNum;		this.fightStatus = fightStatus;		this.leftCount = leftCount;		this.expireDate = expireDate;		this.sys0AddTime = sys0AddTime;		this.sys0UpdTime = sys0UpdTime;		this.sys0DelTime = sys0DelTime;		this.sys0AddUser = sys0AddUser;		this.sys0UpdUser = sys0UpdUser;		this.sys0DelUser = sys0DelUser;		this.sys0DelState = sys0DelState;	}	@Override	public String toString() {		StringBuffer sbf = new StringBuffer();		sbf.append("id=").append(id).append(";");		sbf.append("tEbuyProductFId=").append(tEbuyProductFId).append(";");		sbf.append("tEbuyFightSupplyMerchantFId=").append(tEbuyFightSupplyMerchantFId).append(";");		sbf.append("pointType=").append(pointType).append(";");		sbf.append("priceDiscount=").append(priceDiscount).append(";");		sbf.append("price=").append(price).append(";");		sbf.append("fightNum=").append(fightNum).append(";");		sbf.append("fightStatus=").append(fightStatus).append(";");		sbf.append("leftCount=").append(leftCount).append(";");		sbf.append("expireDate=").append(expireDate).append(";");		sbf.append("sys0AddTime=").append(sys0AddTime).append(";");		sbf.append("sys0UpdTime=").append(sys0UpdTime).append(";");		sbf.append("sys0DelTime=").append(sys0DelTime).append(";");		sbf.append("sys0AddUser=").append(sys0AddUser).append(";");		sbf.append("sys0UpdUser=").append(sys0UpdUser).append(";");		sbf.append("sys0DelUser=").append(sys0DelUser).append(";");		sbf.append("sys0DelState=").append(sys0DelState).append(";");		return sbf.toString();	}		public BigInteger getId() {		return id;	}	public void setId(BigInteger id) {		this.id = id;	}	public BigInteger gettEbuyProductFId() {		return tEbuyProductFId;	}	public void settEbuyProductFId(BigInteger tEbuyProductFId) {		this.tEbuyProductFId = tEbuyProductFId;	}	public BigInteger gettEbuyFightSupplyMerchantFId() {		return tEbuyFightSupplyMerchantFId;	}	public void settEbuyFightSupplyMerchantFId(BigInteger tEbuyFightSupplyMerchantFId) {		this.tEbuyFightSupplyMerchantFId = tEbuyFightSupplyMerchantFId;	}	public String getPointType() {		return pointType;	}	public void setPointType(String pointType) {		this.pointType = pointType;	}	public Long getPriceDiscount() {		return priceDiscount;	}	public void setPriceDiscount(Long priceDiscount) {		this.priceDiscount = priceDiscount;	}	public Long getPrice() {		return price;	}	public void setPrice(Long price) {		this.price = price;	}	public BigInteger getFightNum() {		return fightNum;	}	public void setFightNum(BigInteger fightNum) {		this.fightNum = fightNum;	}	public Long getFightStatus() {		return fightStatus;	}	public void setFightStatus(Long fightStatus) {		this.fightStatus = fightStatus;	}	public Long getLeftCount() {		return leftCount;	}	public void setLeftCount(Long leftCount) {		this.leftCount = leftCount;	}	public String getExpireDate() {		return expireDate;	}	public void setExpireDate(String expireDate) {		this.expireDate = expireDate;	}	public String getStartDate() {		return startDate;	}	public void setStartDate(String startDate) {		this.startDate = startDate;	}	@Override	public int hashCode() {		final int prime = 31;		int result = 1;		result = prime * result + ((id == null) ? 0 : id.hashCode());		return result;	}		@Override	public boolean equals(Object obj) {		if (this == obj)			return true;		if (obj == null)			return false;		if (getClass() != obj.getClass())			return false;		EbuyProductFightGroups other = (EbuyProductFightGroups) obj;		if (id == null) {			if (other.id != null)				return false;		} else if (!id.equals(other.id))			return false;		return true;	}	}