package com.cnfantasia.server.domainbase.ebuyRefundOrder.entity;/* import java.io.Serializable;*/import java.math.BigInteger;import java.lang.Integer;import java.lang.String;import java.lang.Double; import com.cnfantasia.server.domain.pub.BaseEntity;/** * 描述:(退货订单) 实体类 *  * @version 1.00 * @author null *  *//*public class EbuyRefundOrder implements Serializable{*/public class EbuyRefundOrder extends BaseEntity{	private static final long serialVersionUID = 1L;	/**  */	private BigInteger id;	/** 运单Id */	private BigInteger tEbuyDeliveryOrderFId;	/** 购买者 */	private BigInteger buyerId;	/** 退款原因表id */	private BigInteger tEbuyRefundAuditFId;	/** 创建时间 */	private String createTime;	/** 退款状态={"1" */	private Integer status;	/** 退款状态={"0" */	private Integer refundStatus;	/** 是否使用粮票={"0" */	private Integer payStatus;	/** 退款原因 */	private String reason;	/** 申请退款金额 */	private Double applyFee;	/** 应退款总金额 */	private Double refundFee;	/** 应退款粮票 */	private Double refundRedEnvelope;	/** 应退款现金 */	private Double refundMoney;	/** 退款失败原因 */	private String refundReason;	/** 退款图片，以分号分隔 */	private String refundPhotoes;	/** 供应商Id */	private BigInteger tSupplyMerchantFId;	public EbuyRefundOrder(){	}	public EbuyRefundOrder(EbuyRefundOrder arg){		this.id = arg.getId();		this.tEbuyDeliveryOrderFId = arg.gettEbuyDeliveryOrderFId();		this.buyerId = arg.getBuyerId();		this.tEbuyRefundAuditFId = arg.gettEbuyRefundAuditFId();		this.createTime = arg.getCreateTime();		this.status = arg.getStatus();		this.refundStatus = arg.getRefundStatus();		this.payStatus = arg.getPayStatus();		this.reason = arg.getReason();		this.applyFee = arg.getApplyFee();		this.refundFee = arg.getRefundFee();		this.refundReason = arg.getRefundReason();		this.refundPhotoes = arg.getRefundPhotoes();		this.sys0AddTime = arg.getSys0AddTime();		this.sys0UpdTime = arg.getSys0UpdTime();		this.sys0DelTime = arg.getSys0DelTime();		this.sys0AddUser = arg.getSys0AddUser();		this.sys0UpdUser = arg.getSys0UpdUser();		this.sys0DelUser = arg.getSys0DelUser();		this.sys0DelState = arg.getSys0DelState();		this.tSupplyMerchantFId = arg.gettSupplyMerchantFId();	}	/**	 * 	 * @param id 	 * @param tEbuyDeliveryOrderFId 运单Id	 * @param buyerId 购买者	 * @param tEbuyRefundAuditFId 退款原因表id	 * @param createTime 创建时间	 * @param status 退款状态={"1"	 * @param refundStatus 退款状态={"0"	 * @param payStatus 是否使用粮票={"0"	 * @param reason 退款原因	 * @param applyFee 申请退款金额	 * @param refundFee 应退款金额	 * @param refundReason 退款失败原因	 * @param refundPhotoes 退款图片，以分号分隔	 * @param sys0AddTime 新增时间	 * @param sys0UpdTime 更新时间	 * @param sys0DelTime 删除时间	 * @param sys0AddUser 新增者	 * @param sys0UpdUser 修改者	 * @param sys0DelUser 删除者	 * @param sys0DelState 记录状态	 * @param tSupplyMerchantFId 供应商Id	 */	public EbuyRefundOrder(BigInteger id,BigInteger tEbuyDeliveryOrderFId,BigInteger buyerId,BigInteger tEbuyRefundAuditFId,String createTime,Integer status,Integer refundStatus,Integer payStatus,String reason,Double applyFee,Double refundFee,String refundReason,String refundPhotoes,String sys0AddTime,String sys0UpdTime,String sys0DelTime,BigInteger sys0AddUser,BigInteger sys0UpdUser,BigInteger sys0DelUser,Integer sys0DelState,BigInteger tSupplyMerchantFId){		this.id = id;		this.tEbuyDeliveryOrderFId = tEbuyDeliveryOrderFId;		this.buyerId = buyerId;		this.tEbuyRefundAuditFId = tEbuyRefundAuditFId;		this.createTime = createTime;		this.status = status;		this.refundStatus = refundStatus;		this.payStatus = payStatus;		this.reason = reason;		this.applyFee = applyFee;		this.refundFee = refundFee;		this.refundReason = refundReason;		this.refundPhotoes = refundPhotoes;		this.sys0AddTime = sys0AddTime;		this.sys0UpdTime = sys0UpdTime;		this.sys0DelTime = sys0DelTime;		this.sys0AddUser = sys0AddUser;		this.sys0UpdUser = sys0UpdUser;		this.sys0DelUser = sys0DelUser;		this.sys0DelState = sys0DelState;		this.tSupplyMerchantFId = tSupplyMerchantFId;	}	@Override	public String toString() {		StringBuffer sbf = new StringBuffer();		sbf.append("id=").append(id).append(";");		sbf.append("tEbuyDeliveryOrderFId=").append(tEbuyDeliveryOrderFId).append(";");		sbf.append("buyerId=").append(buyerId).append(";");		sbf.append("tEbuyRefundAuditFId=").append(tEbuyRefundAuditFId).append(";");		sbf.append("createTime=").append(createTime).append(";");		sbf.append("status=").append(status).append(";");		sbf.append("refundStatus=").append(refundStatus).append(";");		sbf.append("payStatus=").append(payStatus).append(";");		sbf.append("reason=").append(reason).append(";");		sbf.append("applyFee=").append(applyFee).append(";");		sbf.append("refundFee=").append(refundFee).append(";");		sbf.append("refundReason=").append(refundReason).append(";");		sbf.append("refundPhotoes=").append(refundPhotoes).append(";");		sbf.append("sys0AddTime=").append(sys0AddTime).append(";");		sbf.append("sys0UpdTime=").append(sys0UpdTime).append(";");		sbf.append("sys0DelTime=").append(sys0DelTime).append(";");		sbf.append("sys0AddUser=").append(sys0AddUser).append(";");		sbf.append("sys0UpdUser=").append(sys0UpdUser).append(";");		sbf.append("sys0DelUser=").append(sys0DelUser).append(";");		sbf.append("sys0DelState=").append(sys0DelState).append(";");		sbf.append("tSupplyMerchantFId=").append(tSupplyMerchantFId).append(";");		return sbf.toString();	}		public BigInteger getId() {		return id;	}	public void setId(BigInteger id) {		this.id = id;	}	public BigInteger gettEbuyDeliveryOrderFId() {		return tEbuyDeliveryOrderFId;	}	public void settEbuyDeliveryOrderFId(BigInteger tEbuyDeliveryOrderFId) {		this.tEbuyDeliveryOrderFId = tEbuyDeliveryOrderFId;	}	public BigInteger getBuyerId() {		return buyerId;	}	public void setBuyerId(BigInteger buyerId) {		this.buyerId = buyerId;	}	public BigInteger gettEbuyRefundAuditFId() {		return tEbuyRefundAuditFId;	}	public void settEbuyRefundAuditFId(BigInteger tEbuyRefundAuditFId) {		this.tEbuyRefundAuditFId = tEbuyRefundAuditFId;	}	public String getCreateTime() {		return createTime;	}	public void setCreateTime(String createTime) {		this.createTime = createTime;	}	public Integer getStatus() {		return status;	}	public void setStatus(Integer status) {		this.status = status;	}	public Integer getRefundStatus() {		return refundStatus;	}	public void setRefundStatus(Integer refundStatus) {		this.refundStatus = refundStatus;	}	public Integer getPayStatus() {		return payStatus;	}	public void setPayStatus(Integer payStatus) {		this.payStatus = payStatus;	}	public String getReason() {		return reason;	}	public void setReason(String reason) {		this.reason = reason;	}	public Double getApplyFee() {		return applyFee;	}	public void setApplyFee(Double applyFee) {		this.applyFee = applyFee;	}	public Double getRefundFee() {		return refundFee;	}	public void setRefundFee(Double refundFee) {		this.refundFee = refundFee;	}	public String getRefundReason() {		return refundReason;	}	public void setRefundReason(String refundReason) {		this.refundReason = refundReason;	}	public String getRefundPhotoes() {		return refundPhotoes;	}	public void setRefundPhotoes(String refundPhotoes) {		this.refundPhotoes = refundPhotoes;	}	public BigInteger gettSupplyMerchantFId() {		return tSupplyMerchantFId;	}	public void settSupplyMerchantFId(BigInteger tSupplyMerchantFId) {		this.tSupplyMerchantFId = tSupplyMerchantFId;	}	public Double getRefundRedEnvelope() {		return refundRedEnvelope;	}	public void setRefundRedEnvelope(Double refundRedEnvelope) {		this.refundRedEnvelope = refundRedEnvelope;	}	public Double getRefundMoney() {		return refundMoney;	}	public void setRefundMoney(Double refundMoney) {		this.refundMoney = refundMoney;	}	@Override	public int hashCode() {		final int prime = 31;		int result = 1;		result = prime * result + ((id == null) ? 0 : id.hashCode());		return result;	}		@Override	public boolean equals(Object obj) {		if (this == obj)			return true;		if (obj == null)			return false;		if (getClass() != obj.getClass())			return false;		EbuyRefundOrder other = (EbuyRefundOrder) obj;		if (id == null) {			if (other.id != null)				return false;		} else if (!id.equals(other.id))			return false;		return true;	}	}