<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- tblNameCN:业主表 t_property_proprietor -->
<mapper namespace="propertyProprietor">
	<resultMap type="com.cnfantasia.server.ms.propertyProprietor.entity.PropertyProprietorEntity" id="propertyProprietorEntity" extends="propertyProprietorBase.propertyProprietorBaseMap_AppendTable">
        <result column="groupBuildingName" javaType="java.lang.String" property="groupBuildingName"/> 
        <result column="buildingName" javaType="java.lang.String" property="buildingName"/> 
        <result column="realRoomUnitName" javaType="java.lang.String" property="realRoomUnitName"/>  
        <result column="realRoomNum" javaType="java.lang.String" property="realRoomNum"/>  
	</resultMap>
	
	<sql id="select_pp_for_list">
		select GB.f_name groupBuildingName, B.f_name buildingName, RR.f_unit_name realRoomUnitName, RR.f_num_tail realRoomNum,
    	RR.f_contract_no contractNum, 
    	<include refid="propertyProprietorBase.queryHead_AppendTable"/>
	</sql>
	
	<!-- 根据物业公司用户Id，找 所管辖小区的业主信息  -->
    <select id="select_ppList_byOmsUserId" parameterType="java.util.Map" resultMap="propertyProprietorEntity">
    	<include refid="select_pp_for_list"/>
    	FROM t_property_proprietor PP
    	inner join t_real_room RR on RR.t_property_proprietor_f_id = PP.f_id
    	inner join t_building B on B.F_id = RR.t_building_f_id
    	inner join t_group_building GB on GB.f_id = B.t_group_building_f_id  	
    	inner join t_property_company PC on PC.f_id = GB.t_property_company_f_id
    	inner join t_oms_user OU on OU.f_id = PC.f_admin_id
    	WHERE 1=1 
    	 <if test="omsUserId != null and omsUserId != 1 "> and OU.f_id = ${omsUserId}</if><!-- 管理员要看到所有 -->
    	 <if test="gbName != null and gbName != '' ">  and (GB.f_name like CONCAT('%',#{gbName},'%')) </if>
    	 <if test="ppName != null and ppName != '' ">  and (PP.f_name like CONCAT('%',#{ppName},'%') ) </if>
    	 <if test="bName != null and bName != '' ">  and (B.f_name = #{bName}) </if>
    	 <if test="rrUnitName != null and rrUnitName != '' ">  and (RR.f_unit_name = #{rrUnitName}) </if>
    	 <if test="rrRoomNum != null and rrRoomNum != '' ">  and (RR.f_num_tail = #{rrRoomNum}) </if>
    	order by PP.f_id desc
    	<if test="_begin != null and _length != '' "><![CDATA[ LIMIT #{_begin},#{_length} ]]> </if>
	</select>
	
	<!-- 根据业主的Id，找出业主信息  -->
    <select id="select_ppInfo_ById" parameterType="java.math.BigInteger" resultMap="propertyProprietorEntity">
    	<include refid="select_pp_for_list"/>
    	FROM t_property_proprietor PP
    	inner join t_real_room RR on RR.t_property_proprietor_f_id = PP.f_id
    	inner join t_building B on B.F_id = RR.t_building_f_id
    	inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
    	inner join t_property_company PC on PC.f_id = GB.t_property_company_f_id
    	inner join t_oms_user OU on OU.f_id = PC.f_admin_id
    	WHERE 1=1 
    	and PP.f_id = #{_parameter}
	</select>
	
	<!-- step1 校验导入的业主是否正确，传导入数据的《城市+小区》拼成一个大串《城市+小区》返回 -->
    <select id="select_verifyInfo_for_ImportedPP_step1" parameterType="java.util.ArrayList" resultType="string">
	    select concat(AC.f_name, GB.f_name) from t_group_building GB 
		inner join t_address_block AB on AB.f_id = GB.t_block_f_id
		inner join t_address_city AC on AC.f_id = AB.t_city_f_id 
		where 1 = 1
		and GB.f_check_status in (1, 9)
		and concat(AC.f_name, GB.f_name) 
		in (
		<foreach item="guard" index="index" collection="list"  
            separator=","> #{guard} </foreach>  
        )
	</select>
	
	<!-- step2 校验导入的业主是否已存在，传导出数据的《小区+楼栋+单元+房间号+合同号+业主名称》拼成一个大串《小区+楼栋+单元+房间号+合同号+业主名称》返回 -->
    <select id="select_verifyInfo_for_ImportedPP_step2" parameterType="java.util.ArrayList" resultType="string">
    	select concat(AC.f_name, GB.f_name, B.f_name, RR.f_unit_name, RR.f_num_tail, RR.f_contract_no, PP.f_name)
		from t_property_proprietor PP
		inner join t_real_room RR on RR.t_property_proprietor_f_id = PP.f_id
		inner join t_building B on B.F_id = RR.t_building_f_id
		inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
		inner join t_address_block AB on AB.f_id = GB.t_block_f_id
		inner join t_address_city AC on AC.f_id = AB.t_city_f_id;
    	WHERE 1=1 
    	and concat(AC.f_name, GB.f_name, B.f_name, RR.f_unit_name, RR.f_num_tail, RR.f_contract_no, PP.f_name) 
    	in (
        <foreach item="guard" index="index" collection="list"  
            separator=","> #{guard} </foreach>  
        )
	</select>
	
	<!--step3  对校验通过的业主，找到其对应的rrid和ppid，传导出数据的《小区+楼栋+单元+房间号+业主名称》拼成一个大串《小区+楼栋+单元+房间号+业主名称+“_”+房间ID+“_”+业主ID》返回 -->
    <select id="select_verifyInfo_for_ImportedPP_step3" parameterType="java.util.ArrayList" resultType="string">
    	select concat(GB.f_name,B.f_name,RR.f_unit_name,RR.f_num_tail,PP.f_name, "_", RR.f_id, "_", PP.f_id) 
    	FROM t_property_proprietor PP
    	inner join t_real_room RR on RR.t_property_proprietor_f_id = PP.f_id
    	inner join t_building B on B.F_id = RR.t_building_f_id
    	inner join t_group_building GB on GB.f_id = B.t_group_building_f_id
    	WHERE 1=1 
    	and concat(GB.f_name,B.f_name,RR.f_unit_name,RR.f_num_tail,PP.f_name) 
    	in (  
        <foreach item="guard" index="index" collection="list"  
            separator=","> #{guard} </foreach>  
        )  
	</select>
	
	<!-- 更新(业主信息表)信息。 -->
	<update id="update_propertyProprietor" parameterType="PropertyProprietor">
		UPDATE t_property_proprietor SET f_id=#{id}
 		<if test="name != null and name != '' "> ,f_name=#{name}</if>
 		<if test="identifyNo != null "> ,f_identify_no=#{identifyNo}</if>
 		<if test="phone != null "> ,f_phone=#{phone}</if>
 		<if test="sys0UpdTime == null or sys0UpdTime == '' "> ,f_sys0_upd_time= sysdate() </if>
		<if test="sys0UpdUser != null and sys0UpdUser != '' "> ,f_sys0_upd_user=#{sys0UpdUser}</if>
		WHERE f_id=#{id}
    </update>
</mapper>
